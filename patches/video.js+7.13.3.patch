diff --git a/node_modules/video.js/dist/video.es.js b/node_modules/video.js/dist/video.es.js
index a07aa77..142743f 100644
--- a/node_modules/video.js/dist/video.es.js
+++ b/node_modules/video.js/dist/video.es.js
@@ -13107,12 +13107,12 @@ var TimeTooltip = /*#__PURE__*/function (_Component) {
     // `SeekBar` before hitting the `seekBarPoint`
 
 
-    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds
+    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx - 24; // This is the space right of the `seekBarPoint` available within the bounds
     // of the player. We calculate the number of pixels from the `seekBarPoint`
     // to the right edge of the `SeekBar` and add to that any gap between the
     // right edge of the `SeekBar` and the player.
 
-    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled
+    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right) - 24; // This is the number of pixels by which the tooltip will need to be pulled
     // further to the right to center it over the `seekBarPoint`.
 
     var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on
@@ -13349,7 +13349,8 @@ var MouseTimeDisplay = /*#__PURE__*/function (_Component) {
 
     var time = seekBarPoint * this.player_.duration();
     this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {
-      _this2.el_.style.left = seekBarRect.width * seekBarPoint + "px";
+      _this2.el_.style.right = seekBarRect.width * (1 -seekBarPoint) + "px";
+      _this2.el_.style.width = seekBarRect.width * seekBarPoint + "px";
     });
   };
 
@@ -13959,7 +13960,7 @@ var ProgressControl = /*#__PURE__*/function (_Component) {
     }
 
     var seekBarEl = seekBar.el();
-    var seekBarRect = findPosition(seekBarEl);
+    var seekBarRect = getBoundingClientRect(seekBarEl);
     var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means
     // that it's possible to trigger this behavior outside the boundaries of
     // the `SeekBar`. This ensures we stay within it at all times.
