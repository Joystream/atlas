diff --git a/JoyEnum.js b/JoyEnum.js
index 345fbd23f13a5cda7c99503856b015ae7faedaae..21419784031e9e6252c717659e585fb6de1bfdb8 100644
--- a/JoyEnum.js
+++ b/JoyEnum.js
@@ -1,11 +1,8 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.JoyEnum = void 0;
-const codec_1 = require("@polkadot/types/codec");
+import { Enum } from '@polkadot/types/codec';
 // Helper for creating extended Enum type with TS-compatible isOfType and asType helpers
-function JoyEnum(types) {
+export function JoyEnum(types) {
     var _a;
-    return _a = class JoyEnumObject extends codec_1.Enum.with(types) {
+    return _a = class JoyEnumObject extends Enum.with(types) {
             // eslint-disable-next-line no-useless-constructor
             constructor(registry, value, index) {
                 super(registry, value, index);
@@ -27,4 +24,3 @@ function JoyEnum(types) {
         _a.typeDefinitions = types,
         _a;
 }
-exports.JoyEnum = JoyEnum;
diff --git a/JoyStruct.js b/JoyStruct.js
index ddc9cc6a032a244d9d8a3dcf9bfb604a821caeaf..e1b6592beb400065c64d63a5f9458eaa363ec025 100644
--- a/JoyStruct.js
+++ b/JoyStruct.js
@@ -1,14 +1,11 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.JoyStructDecorated = exports.JoyStructCustom = void 0;
-const codec_1 = require("@polkadot/types/codec");
+import { Struct } from '@polkadot/types/codec';
 // Helper for creating extended Struct type with TS-compatible interface
 // It's called JoyStructCustom, because eventually we'd want to migrate all structs to JoyStructDecorated,
 // but the latter won't allow specifying getters that return different type than the original field type.
 // (ie. by using getString() instead of getField())
-function JoyStructCustom(fields) {
+export function JoyStructCustom(fields) {
     var _a;
-    return _a = class JoyStructObject extends codec_1.Struct.with(fields) {
+    return _a = class JoyStructObject extends Struct.with(fields) {
             // eslint-disable-next-line no-useless-constructor
             constructor(registry, value) {
                 super(registry, value);
@@ -32,10 +29,8 @@ function JoyStructCustom(fields) {
         _a.typeDefs = fields,
         _a;
 }
-exports.JoyStructCustom = JoyStructCustom;
 // JoyStruct enriched with typescript definitions for getters automatically added by polkadot-js
-function JoyStructDecorated(fields) {
+export function JoyStructDecorated(fields) {
     // We need to cast here because there's no way to make TS aware of getters added with Object.defineProperty
     return JoyStructCustom(fields);
 }
-exports.JoyStructDecorated = JoyStructDecorated;
diff --git a/blog.js b/blog.js
index e0e86c1012dd917e75c93f7379ae3f8bcf8da7d5..1a1d5c2fe7d7d643f58ba7d0a5b4656a52cfee81 100644
--- a/blog.js
+++ b/blog.js
@@ -1,38 +1,28 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ReplyToDelete = exports.Reply = exports.ReplyId = exports.UpdatedBody = exports.UpdatedTitle = exports.Title = exports.ParticipantId = void 0;
-const common_1 = require("./common");
-const types_1 = require("@polkadot/types");
-class ParticipantId extends common_1.MemberId {
+import { JoyStructDecorated, MemberId, Hash, PostId } from './common';
+import { Text, Option, u64, bool } from '@polkadot/types';
+export class ParticipantId extends MemberId {
 }
-exports.ParticipantId = ParticipantId;
-class Title extends types_1.Text {
+export class Title extends Text {
 }
-exports.Title = Title;
-class UpdatedTitle extends types_1.Option.with(types_1.Text) {
+export class UpdatedTitle extends Option.with(Text) {
 }
-exports.UpdatedTitle = UpdatedTitle;
-class UpdatedBody extends types_1.Option.with(types_1.Text) {
+export class UpdatedBody extends Option.with(Text) {
 }
-exports.UpdatedBody = UpdatedBody;
-class ReplyId extends types_1.u64 {
+export class ReplyId extends u64 {
 }
-exports.ReplyId = ReplyId;
-class Reply extends (0, common_1.JoyStructDecorated)({
-    text_hash: common_1.Hash,
+export class Reply extends JoyStructDecorated({
+    text_hash: Hash,
     owner: ParticipantId,
-    parent_id: common_1.PostId,
+    parent_id: PostId,
 }) {
 }
-exports.Reply = Reply;
-class ReplyToDelete extends (0, common_1.JoyStructDecorated)({
-    post_id: common_1.PostId,
+export class ReplyToDelete extends JoyStructDecorated({
+    post_id: PostId,
     reply_id: ReplyId,
-    hide: types_1.bool,
+    hide: bool,
 }) {
 }
-exports.ReplyToDelete = ReplyToDelete;
-exports.default = {
+export default {
     ParticipantId,
     Title,
     UpdatedTitle,
diff --git a/bounty.js b/bounty.js
index 111c3503fabcae26d751e35056c9961e486f5194..29a3eca481479124751a5170f655f25e238cc8f2 100644
--- a/bounty.js
+++ b/bounty.js
@@ -1,120 +1,98 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.bountyTypes = exports.Bounty = exports.BountyMilestone = exports.BountyMilestone_JudgmentSubmitted = exports.BountyMilestone_WorkSubmitted = exports.BountyMilestone_BountyMaxFundingReached = exports.BountyMilestone_Created = exports.Entry = exports.OracleJudgment = exports.OracleWorkEntryJudgment = exports.OracleWorkEntryJudgment_Winner = exports.BountyCreationParameters = exports.FundingType = exports.FundingType_Limited = exports.FundingType_Perpetual = exports.AssuranceContractType = exports.AssuranceContractType_Closed = exports.BountyActor = exports.EntryId = exports.BountyId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-class BountyId extends types_1.u64 {
-}
-exports.BountyId = BountyId;
-class EntryId extends types_1.u64 {
-}
-exports.EntryId = EntryId;
-class BountyActor extends (0, common_1.JoyEnum)({
-    Council: types_1.Null,
-    Member: common_1.MemberId,
+import { Null, u32, u64, bool, Option, BTreeSet, BTreeMap } from '@polkadot/types';
+import { JoyEnum, JoyStructDecorated, MemberId, AccountId, Balance, BlockNumber } from './common';
+export class BountyId extends u64 {
+}
+export class EntryId extends u64 {
+}
+export class BountyActor extends JoyEnum({
+    Council: Null,
+    Member: MemberId,
 }) {
 }
-exports.BountyActor = BountyActor;
-class AssuranceContractType_Closed extends types_1.BTreeSet.with(common_1.MemberId) {
+export class AssuranceContractType_Closed extends BTreeSet.with(MemberId) {
 }
-exports.AssuranceContractType_Closed = AssuranceContractType_Closed;
-class AssuranceContractType extends (0, common_1.JoyEnum)({
-    Open: types_1.Null,
+export class AssuranceContractType extends JoyEnum({
+    Open: Null,
     Closed: AssuranceContractType_Closed,
 }) {
 }
-exports.AssuranceContractType = AssuranceContractType;
-class FundingType_Perpetual extends (0, common_1.JoyStructDecorated)({
-    target: common_1.Balance,
+export class FundingType_Perpetual extends JoyStructDecorated({
+    target: Balance,
 }) {
 }
-exports.FundingType_Perpetual = FundingType_Perpetual;
-class FundingType_Limited extends (0, common_1.JoyStructDecorated)({
-    min_funding_amount: common_1.Balance,
-    max_funding_amount: common_1.Balance,
-    funding_period: common_1.BlockNumber,
+export class FundingType_Limited extends JoyStructDecorated({
+    min_funding_amount: Balance,
+    max_funding_amount: Balance,
+    funding_period: BlockNumber,
 }) {
 }
-exports.FundingType_Limited = FundingType_Limited;
-class FundingType extends (0, common_1.JoyEnum)({
+export class FundingType extends JoyEnum({
     Perpetual: FundingType_Perpetual,
     Limited: FundingType_Limited,
 }) {
 }
-exports.FundingType = FundingType;
-class BountyCreationParameters extends (0, common_1.JoyStructDecorated)({
+export class BountyCreationParameters extends JoyStructDecorated({
     oracle: BountyActor,
     contract_type: AssuranceContractType,
     creator: BountyActor,
-    cherry: common_1.Balance,
-    entrant_stake: common_1.Balance,
+    cherry: Balance,
+    entrant_stake: Balance,
     funding_type: FundingType,
-    work_period: common_1.BlockNumber,
-    judging_period: common_1.BlockNumber,
+    work_period: BlockNumber,
+    judging_period: BlockNumber,
 }) {
 }
-exports.BountyCreationParameters = BountyCreationParameters;
-class OracleWorkEntryJudgment_Winner extends (0, common_1.JoyStructDecorated)({
-    reward: common_1.Balance,
+export class OracleWorkEntryJudgment_Winner extends JoyStructDecorated({
+    reward: Balance,
 }) {
 }
-exports.OracleWorkEntryJudgment_Winner = OracleWorkEntryJudgment_Winner;
-class OracleWorkEntryJudgment extends (0, common_1.JoyEnum)({
+export class OracleWorkEntryJudgment extends JoyEnum({
     Winner: OracleWorkEntryJudgment_Winner,
-    Rejected: types_1.Null,
+    Rejected: Null,
 }) {
 }
-exports.OracleWorkEntryJudgment = OracleWorkEntryJudgment;
-class OracleJudgment extends types_1.BTreeMap.with(EntryId, OracleWorkEntryJudgment) {
+export class OracleJudgment extends BTreeMap.with(EntryId, OracleWorkEntryJudgment) {
 }
-exports.OracleJudgment = OracleJudgment;
-class Entry extends (0, common_1.JoyStructDecorated)({
-    member_id: common_1.MemberId,
-    staking_account_id: common_1.AccountId,
-    submitted_at: common_1.BlockNumber,
-    work_submitted: types_1.bool,
-    oracle_judgment_result: types_1.Option.with(OracleWorkEntryJudgment),
+export class Entry extends JoyStructDecorated({
+    member_id: MemberId,
+    staking_account_id: AccountId,
+    submitted_at: BlockNumber,
+    work_submitted: bool,
+    oracle_judgment_result: Option.with(OracleWorkEntryJudgment),
 }) {
 }
-exports.Entry = Entry;
-class BountyMilestone_Created extends (0, common_1.JoyStructDecorated)({
-    created_at: common_1.BlockNumber,
-    has_contributions: types_1.bool,
+export class BountyMilestone_Created extends JoyStructDecorated({
+    created_at: BlockNumber,
+    has_contributions: bool,
 }) {
 }
-exports.BountyMilestone_Created = BountyMilestone_Created;
-class BountyMilestone_BountyMaxFundingReached extends (0, common_1.JoyStructDecorated)({
-    max_funding_reached_at: common_1.BlockNumber,
+export class BountyMilestone_BountyMaxFundingReached extends JoyStructDecorated({
+    max_funding_reached_at: BlockNumber,
 }) {
 }
-exports.BountyMilestone_BountyMaxFundingReached = BountyMilestone_BountyMaxFundingReached;
-class BountyMilestone_WorkSubmitted extends (0, common_1.JoyStructDecorated)({
-    work_period_started_at: common_1.BlockNumber,
+export class BountyMilestone_WorkSubmitted extends JoyStructDecorated({
+    work_period_started_at: BlockNumber,
 }) {
 }
-exports.BountyMilestone_WorkSubmitted = BountyMilestone_WorkSubmitted;
-class BountyMilestone_JudgmentSubmitted extends (0, common_1.JoyStructDecorated)({
-    successful_bounty: types_1.bool,
+export class BountyMilestone_JudgmentSubmitted extends JoyStructDecorated({
+    successful_bounty: bool,
 }) {
 }
-exports.BountyMilestone_JudgmentSubmitted = BountyMilestone_JudgmentSubmitted;
-class BountyMilestone extends (0, common_1.JoyEnum)({
+export class BountyMilestone extends JoyEnum({
     Created: BountyMilestone_Created,
     BountyMaxFundingReached: BountyMilestone_BountyMaxFundingReached,
     WorkSubmitted: BountyMilestone_WorkSubmitted,
     JudgmentSubmitted: BountyMilestone_JudgmentSubmitted,
 }) {
 }
-exports.BountyMilestone = BountyMilestone;
-class Bounty extends (0, common_1.JoyStructDecorated)({
+export class Bounty extends JoyStructDecorated({
     creation_params: BountyCreationParameters,
-    total_funding: common_1.Balance,
+    total_funding: Balance,
     milestone: BountyMilestone,
-    active_work_entry_count: types_1.u32,
+    active_work_entry_count: u32,
 }) {
 }
-exports.Bounty = Bounty;
-exports.bountyTypes = {
+export const bountyTypes = {
     BountyId,
     EntryId,
     BountyActor,
@@ -135,4 +113,4 @@ exports.bountyTypes = {
     BountyMilestone,
     Bounty,
 };
-exports.default = exports.bountyTypes;
+export default bountyTypes;
diff --git a/common.js b/common.js
index 8434b92eb94ba8c36f3d0563455243d01ef0e328..0f81a28962fda83c6b7b59e3b9198a17d792ee19 100644
--- a/common.js
+++ b/common.js
@@ -1,48 +1,31 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.commonTypes = exports.BalanceOf = exports.LookupSource = exports.Address = exports.AccountId = exports.BalanceKind = exports.WorkingGroup = exports.WorkingGroupDef = exports.InputValidationLengthConstraint = exports.OptionText = exports.getOptionPropOrUndefined = exports.getBoolPropAsBoolean = exports.getTextPropAsString = exports.BlockAndTime = exports.Hash = exports.PostId = exports.ThreadId = exports.ChannelId = exports.Url = exports.MemberId = exports.ActorId = exports.BlockNumber = exports.Balance = exports.JoyStructDecorated = exports.JoyStructCustom = exports.JoyEnum = void 0;
-const types_1 = require("@polkadot/types");
+import { Option, Text, u16, u32, u64, Null, U8aFixed, u128 } from '@polkadot/types';
 // we get 'moment' because it is a dependency of @polkadot/util, via @polkadot/keyring
-const moment_1 = __importDefault(require("moment"));
-const JoyStruct_1 = require("./JoyStruct");
-Object.defineProperty(exports, "JoyStructCustom", { enumerable: true, get: function () { return JoyStruct_1.JoyStructCustom; } });
-Object.defineProperty(exports, "JoyStructDecorated", { enumerable: true, get: function () { return JoyStruct_1.JoyStructDecorated; } });
-const JoyEnum_1 = require("./JoyEnum");
-Object.defineProperty(exports, "JoyEnum", { enumerable: true, get: function () { return JoyEnum_1.JoyEnum; } });
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-class Balance extends types_1.u128 {
+import moment from 'moment';
+import { JoyStructCustom, JoyStructDecorated } from './JoyStruct';
+import { JoyEnum } from './JoyEnum';
+import { GenericAccountId } from '@polkadot/types/generic/AccountId';
+export { JoyEnum, JoyStructCustom, JoyStructDecorated };
+export class Balance extends u128 {
 }
-exports.Balance = Balance;
-class BlockNumber extends types_1.u32 {
+export class BlockNumber extends u32 {
 }
-exports.BlockNumber = BlockNumber;
-class ActorId extends types_1.u64 {
+export class ActorId extends u64 {
 }
-exports.ActorId = ActorId;
-class MemberId extends types_1.u64 {
+export class MemberId extends u64 {
 }
-exports.MemberId = MemberId;
-class Url extends types_1.Text {
+export class Url extends Text {
 }
-exports.Url = Url;
-class ChannelId extends types_1.u64 {
+export class ChannelId extends u64 {
 }
-exports.ChannelId = ChannelId;
 // Indentical type names for Forum and Proposal Discussions modules
 // Ensure they are both configured in runtime to have same type
-class ThreadId extends types_1.u64 {
+export class ThreadId extends u64 {
 }
-exports.ThreadId = ThreadId;
-class PostId extends types_1.u64 {
+export class PostId extends u64 {
 }
-exports.PostId = PostId;
-class Hash extends types_1.U8aFixed {
+export class Hash extends U8aFixed {
 }
-exports.Hash = Hash;
-class BlockAndTime extends (0, JoyStruct_1.JoyStructDecorated)({ block: types_1.u32, time: types_1.u64 }) {
+export class BlockAndTime extends JoyStructDecorated({ block: u32, time: u64 }) {
     get momentDate() {
         const YEAR_2000_MILLISECONDS = 946684801000;
         // overflowing in ~270,000 years
@@ -54,69 +37,57 @@ class BlockAndTime extends (0, JoyStruct_1.JoyStructDecorated)({ block: types_1.
             // timestamp is in seconds
             timestampInMillis = timestamp * 1000;
         }
-        return (0, moment_1.default)(timestampInMillis);
+        return moment(timestampInMillis);
     }
 }
-exports.BlockAndTime = BlockAndTime;
-function getTextPropAsString(struct, fieldName) {
+export function getTextPropAsString(struct, fieldName) {
     return struct.get(fieldName).toString();
 }
-exports.getTextPropAsString = getTextPropAsString;
-function getBoolPropAsBoolean(struct, fieldName) {
+export function getBoolPropAsBoolean(struct, fieldName) {
     return struct.get(fieldName).valueOf();
 }
-exports.getBoolPropAsBoolean = getBoolPropAsBoolean;
-function getOptionPropOrUndefined(struct, fieldName) {
+export function getOptionPropOrUndefined(struct, fieldName) {
     return struct.get(fieldName).unwrapOr(undefined);
 }
-exports.getOptionPropOrUndefined = getOptionPropOrUndefined;
-class OptionText extends types_1.Option.with(types_1.Text) {
+export class OptionText extends Option.with(Text) {
 }
-exports.OptionText = OptionText;
-class InputValidationLengthConstraint extends (0, JoyStruct_1.JoyStructDecorated)({
-    min: types_1.u16,
-    max_min_diff: types_1.u16,
+export class InputValidationLengthConstraint extends JoyStructDecorated({
+    min: u16,
+    max_min_diff: u16,
 }) {
     get max() {
         return this.registry.createType('u16', this.min.add(this.max_min_diff));
     }
 }
-exports.InputValidationLengthConstraint = InputValidationLengthConstraint;
-exports.WorkingGroupDef = {
-    Forum: types_1.Null,
-    Storage: types_1.Null,
-    Content: types_1.Null,
-    OperationsAlpha: types_1.Null,
-    Gateway: types_1.Null,
-    Distribution: types_1.Null,
-    OperationsBeta: types_1.Null,
-    OperationsGamma: types_1.Null,
-    Membership: types_1.Null,
+export const WorkingGroupDef = {
+    Forum: Null,
+    Storage: Null,
+    Content: Null,
+    OperationsAlpha: Null,
+    Gateway: Null,
+    Distribution: Null,
+    OperationsBeta: Null,
+    OperationsGamma: Null,
+    Membership: Null,
 };
-class WorkingGroup extends (0, JoyEnum_1.JoyEnum)(exports.WorkingGroupDef) {
+export class WorkingGroup extends JoyEnum(WorkingGroupDef) {
 }
-exports.WorkingGroup = WorkingGroup;
-class BalanceKind extends (0, JoyEnum_1.JoyEnum)({
-    Positive: types_1.Null,
-    Negative: types_1.Null,
+export class BalanceKind extends JoyEnum({
+    Positive: Null,
+    Negative: Null,
 }) {
 }
-exports.BalanceKind = BalanceKind;
 // @polkadot/types overrides required since migration to Substrate 2.0,
 // see: https://polkadot.js.org/docs/api/FAQ#i-cannot-send-transactions-sending-yields-address-decoding-failures
-class AccountId extends AccountId_1.GenericAccountId {
+export class AccountId extends GenericAccountId {
 }
-exports.AccountId = AccountId;
-class Address extends AccountId {
+export class Address extends AccountId {
 }
-exports.Address = Address;
-class LookupSource extends AccountId {
+export class LookupSource extends AccountId {
 }
-exports.LookupSource = LookupSource;
-class BalanceOf extends Balance {
+export class BalanceOf extends Balance {
 }
-exports.BalanceOf = BalanceOf;
-exports.commonTypes = {
+export const commonTypes = {
     ActorId,
     MemberId,
     BlockAndTime,
@@ -131,4 +102,4 @@ exports.commonTypes = {
     ChannelId,
     Url,
 };
-exports.default = exports.commonTypes;
+export default commonTypes;
diff --git a/constitution/index.js b/constitution/index.js
index d277ee3a9dbe2bb572cc3d5b3eecd05fc1b993dd..118a6505210c6de62723a53dd868681dd82949de 100644
--- a/constitution/index.js
+++ b/constitution/index.js
@@ -1,14 +1,10 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.constitutionTypes = exports.ConstitutionInfo = void 0;
-const JoyStruct_1 = require("../JoyStruct");
-const common_1 = require("../common");
-class ConstitutionInfo extends (0, JoyStruct_1.JoyStructDecorated)({
-    text_hash: common_1.Hash,
+import { JoyStructDecorated } from '../JoyStruct';
+import { Hash } from '../common';
+export class ConstitutionInfo extends JoyStructDecorated({
+    text_hash: Hash,
 }) {
 }
-exports.ConstitutionInfo = ConstitutionInfo;
-exports.constitutionTypes = {
+export const constitutionTypes = {
     ConstitutionInfo,
 };
-exports.default = exports.constitutionTypes;
+export default constitutionTypes;
diff --git a/content/index.js b/content/index.js
index 6353666d8e1bee17622349c1801cda2fe1d43584..71cc6d7a75b06e4b362eb271ff96ac918408f880 100644
--- a/content/index.js
+++ b/content/index.js
@@ -1,305 +1,251 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.NftMetadata = exports.ModeratorSet = exports.PullPayment = exports.VideoPostDeletionParameters = exports.VideoPostCreationParameters = exports.ProofElement = exports.Side = exports.VideoPost = exports.VideoPostType = exports.VideoUpdateParameters = exports.VideoCreationParameters = exports.Video = exports.VideoCategoryUpdateParameters = exports.VideoCategoryCreationParameters = exports.VideoCategory = exports.ChannelCategoryUpdateParameters = exports.ChannelCategoryCreationParameters = exports.ChannelCategory = exports.ChannelOwnershipTransferRequest = exports.ChannelUpdateParameters = exports.ChannelCreationParameters = exports.Channel = exports.ChannelOwner = exports.ContentActor = exports.CuratorGroup = exports.StorageAssets = exports.NftIssuanceParameters = exports.InitTransactionalStatus = exports.AuctionParams = exports.OwnedNft = exports.NftOwner = exports.TransactionalStatus = exports.Auction = exports.Bid = exports.AuctionType = exports.OpenAuctionDetails = exports.EnglishAuctionDetails = exports.IsExtended = exports.Royalty = exports.CurrencyAmount = exports.CurrencyOf = exports.ReactionId = exports.VideoPostId = exports.IsCensored = exports.MaxNumber = exports.VideoCategoryId = exports.VideoId = exports.ChannelCategoryId = exports.CuratorGroupId = exports.CuratorId = void 0;
-exports.contentTypes = void 0;
-const types_1 = require("@polkadot/types");
-const primitive_1 = require("@polkadot/types/primitive");
-const common_1 = require("../common");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-const storage_1 = require("../storage");
-class CuratorId extends primitive_1.u64 {
+import { Vec, Option, Tuple, BTreeSet, UInt } from '@polkadot/types';
+import { bool, u8, u32, u64, Null, Bytes } from '@polkadot/types/primitive';
+import { JoyStructDecorated, JoyEnum, ChannelId, MemberId, Balance, Hash, BlockNumber, BalanceOf } from '../common';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+import { DataObjectId, DataObjectCreationParameters } from '../storage';
+export class CuratorId extends u64 {
 }
-exports.CuratorId = CuratorId;
-class CuratorGroupId extends primitive_1.u64 {
+export class CuratorGroupId extends u64 {
 }
-exports.CuratorGroupId = CuratorGroupId;
-class ChannelCategoryId extends primitive_1.u64 {
+export class ChannelCategoryId extends u64 {
 }
-exports.ChannelCategoryId = ChannelCategoryId;
-class VideoId extends primitive_1.u64 {
+export class VideoId extends u64 {
 }
-exports.VideoId = VideoId;
-class VideoCategoryId extends primitive_1.u64 {
+export class VideoCategoryId extends u64 {
 }
-exports.VideoCategoryId = VideoCategoryId;
-class MaxNumber extends primitive_1.u32 {
+export class MaxNumber extends u32 {
 }
-exports.MaxNumber = MaxNumber;
-class IsCensored extends primitive_1.bool {
+export class IsCensored extends bool {
 }
-exports.IsCensored = IsCensored;
-class VideoPostId extends primitive_1.u64 {
+export class VideoPostId extends u64 {
 }
-exports.VideoPostId = VideoPostId;
-class ReactionId extends primitive_1.u64 {
+export class ReactionId extends u64 {
 }
-exports.ReactionId = ReactionId;
-class CurrencyOf extends common_1.BalanceOf {
+export class CurrencyOf extends BalanceOf {
 }
-exports.CurrencyOf = CurrencyOf;
-class CurrencyAmount extends CurrencyOf {
+export class CurrencyAmount extends CurrencyOf {
 }
-exports.CurrencyAmount = CurrencyAmount;
 // NFT types
-class Royalty extends types_1.UInt {
+export class Royalty extends UInt {
 }
-exports.Royalty = Royalty;
-class IsExtended extends primitive_1.bool {
+export class IsExtended extends bool {
 }
-exports.IsExtended = IsExtended;
-class EnglishAuctionDetails extends (0, common_1.JoyStructDecorated)({
-    extension_period: common_1.BlockNumber,
-    auction_duration: common_1.BlockNumber,
+export class EnglishAuctionDetails extends JoyStructDecorated({
+    extension_period: BlockNumber,
+    auction_duration: BlockNumber,
 }) {
 }
-exports.EnglishAuctionDetails = EnglishAuctionDetails;
-class OpenAuctionDetails extends (0, common_1.JoyStructDecorated)({
-    bid_lock_duration: common_1.BlockNumber,
+export class OpenAuctionDetails extends JoyStructDecorated({
+    bid_lock_duration: BlockNumber,
 }) {
 }
-exports.OpenAuctionDetails = OpenAuctionDetails;
-class AuctionType extends (0, common_1.JoyEnum)({
+export class AuctionType extends JoyEnum({
     English: EnglishAuctionDetails,
     Open: OpenAuctionDetails,
 }) {
 }
-exports.AuctionType = AuctionType;
-class Bid extends (0, common_1.JoyStructDecorated)({
-    bidder: common_1.MemberId,
-    bidder_account_id: AccountId_1.GenericAccountId,
-    amount: common_1.Balance,
-    made_at_block: common_1.BlockNumber,
+export class Bid extends JoyStructDecorated({
+    bidder: MemberId,
+    bidder_account_id: AccountId,
+    amount: Balance,
+    made_at_block: BlockNumber,
 }) {
 }
-exports.Bid = Bid;
-class Auction extends (0, common_1.JoyStructDecorated)({
-    starting_price: common_1.Balance,
-    buy_now_price: types_1.Option.with(common_1.Balance),
+export class Auction extends JoyStructDecorated({
+    starting_price: Balance,
+    buy_now_price: Option.with(Balance),
     auction_type: AuctionType,
-    minimal_bid_step: common_1.Balance,
-    last_bid: types_1.Option.with(Bid),
-    starts_at: common_1.BlockNumber,
-    whitelist: types_1.BTreeSet.with(common_1.MemberId),
+    minimal_bid_step: Balance,
+    last_bid: Option.with(Bid),
+    starts_at: BlockNumber,
+    whitelist: BTreeSet.with(MemberId),
 }) {
 }
-exports.Auction = Auction;
-class TransactionalStatus extends (0, common_1.JoyEnum)({
-    Idle: primitive_1.Null,
-    InitiatedOfferToMember: types_1.Tuple.with([common_1.MemberId, types_1.Option.with(common_1.Balance)]),
+export class TransactionalStatus extends JoyEnum({
+    Idle: Null,
+    InitiatedOfferToMember: Tuple.with([MemberId, Option.with(Balance)]),
     Auction,
-    BuyNow: common_1.Balance,
+    BuyNow: Balance,
 }) {
 }
-exports.TransactionalStatus = TransactionalStatus;
-class NftOwner extends (0, common_1.JoyEnum)({
-    ChannelOwner: primitive_1.Null,
-    Member: common_1.MemberId,
+export class NftOwner extends JoyEnum({
+    ChannelOwner: Null,
+    Member: MemberId,
 }) {
 }
-exports.NftOwner = NftOwner;
-class OwnedNft extends (0, common_1.JoyStructDecorated)({
+export class OwnedNft extends JoyStructDecorated({
     owner: NftOwner,
     transactional_status: TransactionalStatus,
-    creator_royalty: types_1.Option.with(Royalty),
+    creator_royalty: Option.with(Royalty),
 }) {
 }
-exports.OwnedNft = OwnedNft;
-class AuctionParams extends (0, common_1.JoyStructDecorated)({
+export class AuctionParams extends JoyStructDecorated({
     auction_type: AuctionType,
-    starting_price: common_1.Balance,
-    minimal_bid_step: common_1.Balance,
-    buy_now_price: types_1.Option.with(common_1.Balance),
-    starts_at: types_1.Option.with(common_1.BlockNumber),
-    whitelist: types_1.BTreeSet.with(common_1.MemberId),
+    starting_price: Balance,
+    minimal_bid_step: Balance,
+    buy_now_price: Option.with(Balance),
+    starts_at: Option.with(BlockNumber),
+    whitelist: BTreeSet.with(MemberId),
 }) {
 }
-exports.AuctionParams = AuctionParams;
-class InitTransactionalStatus extends (0, common_1.JoyEnum)({
-    Idle: primitive_1.Null,
-    InitiatedOfferToMember: types_1.Tuple.with([common_1.MemberId, types_1.Option.with(common_1.Balance)]),
+export class InitTransactionalStatus extends JoyEnum({
+    Idle: Null,
+    InitiatedOfferToMember: Tuple.with([MemberId, Option.with(Balance)]),
     Auction: AuctionParams,
 }) {
 }
-exports.InitTransactionalStatus = InitTransactionalStatus;
-class NftIssuanceParameters extends (0, common_1.JoyStructDecorated)({
-    royalty: types_1.Option.with(Royalty),
-    nft_metadata: primitive_1.Bytes,
-    non_channel_owner: types_1.Option.with(common_1.MemberId),
+export class NftIssuanceParameters extends JoyStructDecorated({
+    royalty: Option.with(Royalty),
+    nft_metadata: Bytes,
+    non_channel_owner: Option.with(MemberId),
     init_transactional_status: InitTransactionalStatus,
 }) {
 }
-exports.NftIssuanceParameters = NftIssuanceParameters;
 // end of Nft types
-class StorageAssets extends (0, common_1.JoyStructDecorated)({
-    object_creation_list: types_1.Vec.with(storage_1.DataObjectCreationParameters),
-    expected_data_size_fee: common_1.Balance,
+export class StorageAssets extends JoyStructDecorated({
+    object_creation_list: Vec.with(DataObjectCreationParameters),
+    expected_data_size_fee: Balance,
 }) {
 }
-exports.StorageAssets = StorageAssets;
-class CuratorGroup extends (0, common_1.JoyStructDecorated)({
-    curators: types_1.BTreeSet.with(CuratorId),
-    active: primitive_1.bool,
+export class CuratorGroup extends JoyStructDecorated({
+    curators: BTreeSet.with(CuratorId),
+    active: bool,
 }) {
 }
-exports.CuratorGroup = CuratorGroup;
-class ContentActor extends (0, common_1.JoyEnum)({
-    Curator: types_1.Tuple.with([CuratorGroupId, CuratorId]),
-    Member: common_1.MemberId,
-    Lead: primitive_1.Null,
+export class ContentActor extends JoyEnum({
+    Curator: Tuple.with([CuratorGroupId, CuratorId]),
+    Member: MemberId,
+    Lead: Null,
 }) {
 }
-exports.ContentActor = ContentActor;
-class ChannelOwner extends (0, common_1.JoyEnum)({
-    Member: common_1.MemberId,
+export class ChannelOwner extends JoyEnum({
+    Member: MemberId,
     Curators: CuratorGroupId,
 }) {
 }
-exports.ChannelOwner = ChannelOwner;
-class Channel extends (0, common_1.JoyStructDecorated)({
+export class Channel extends JoyStructDecorated({
     owner: ChannelOwner,
-    num_videos: primitive_1.u64,
-    is_censored: primitive_1.bool,
-    reward_account: types_1.Option.with(AccountId_1.GenericAccountId),
-    collaborators: types_1.BTreeSet.with(common_1.MemberId),
-    moderators: types_1.BTreeSet.with(common_1.MemberId),
-    cumulative_payout_earned: common_1.Balance,
-}) {
-}
-exports.Channel = Channel;
-class ChannelCreationParameters extends (0, common_1.JoyStructDecorated)({
-    assets: types_1.Option.with(StorageAssets),
-    meta: types_1.Option.with(primitive_1.Bytes),
-    reward_account: types_1.Option.with(AccountId_1.GenericAccountId),
-    collaborators: types_1.BTreeSet.with(common_1.MemberId),
-    moderators: types_1.BTreeSet.with(common_1.MemberId),
-}) {
-}
-exports.ChannelCreationParameters = ChannelCreationParameters;
-class ChannelUpdateParameters extends (0, common_1.JoyStructDecorated)({
-    assets_to_upload: types_1.Option.with(StorageAssets),
-    new_meta: types_1.Option.with(primitive_1.Bytes),
-    reward_account: types_1.Option.with(types_1.Option.with(AccountId_1.GenericAccountId)),
-    assets_to_remove: types_1.BTreeSet.with(storage_1.DataObjectId),
-    collaborators: types_1.Option.with(types_1.BTreeSet.with(common_1.MemberId)),
-}) {
-}
-exports.ChannelUpdateParameters = ChannelUpdateParameters;
-class ChannelOwnershipTransferRequest extends (0, common_1.JoyStructDecorated)({
-    channel_id: common_1.ChannelId,
+    num_videos: u64,
+    is_censored: bool,
+    reward_account: Option.with(AccountId),
+    collaborators: BTreeSet.with(MemberId),
+    moderators: BTreeSet.with(MemberId),
+    cumulative_payout_earned: Balance,
+}) {
+}
+export class ChannelCreationParameters extends JoyStructDecorated({
+    assets: Option.with(StorageAssets),
+    meta: Option.with(Bytes),
+    reward_account: Option.with(AccountId),
+    collaborators: BTreeSet.with(MemberId),
+    moderators: BTreeSet.with(MemberId),
+}) {
+}
+export class ChannelUpdateParameters extends JoyStructDecorated({
+    assets_to_upload: Option.with(StorageAssets),
+    new_meta: Option.with(Bytes),
+    reward_account: Option.with(Option.with(AccountId)),
+    assets_to_remove: BTreeSet.with(DataObjectId),
+    collaborators: Option.with(BTreeSet.with(MemberId)),
+}) {
+}
+export class ChannelOwnershipTransferRequest extends JoyStructDecorated({
+    channel_id: ChannelId,
     new_owner: ChannelOwner,
-    payment: common_1.Balance,
-    new_reward_account: types_1.Option.with(AccountId_1.GenericAccountId),
+    payment: Balance,
+    new_reward_account: Option.with(AccountId),
 }) {
 }
-exports.ChannelOwnershipTransferRequest = ChannelOwnershipTransferRequest;
-class ChannelCategory extends (0, common_1.JoyStructDecorated)({
+export class ChannelCategory extends JoyStructDecorated({
 // No runtime information is currently stored for a Category.
 }) {
 }
-exports.ChannelCategory = ChannelCategory;
-class ChannelCategoryCreationParameters extends (0, common_1.JoyStructDecorated)({
-    meta: primitive_1.Bytes,
+export class ChannelCategoryCreationParameters extends JoyStructDecorated({
+    meta: Bytes,
 }) {
 }
-exports.ChannelCategoryCreationParameters = ChannelCategoryCreationParameters;
-class ChannelCategoryUpdateParameters extends (0, common_1.JoyStructDecorated)({
-    new_meta: primitive_1.Bytes,
+export class ChannelCategoryUpdateParameters extends JoyStructDecorated({
+    new_meta: Bytes,
 }) {
 }
-exports.ChannelCategoryUpdateParameters = ChannelCategoryUpdateParameters;
-class VideoCategory extends (0, common_1.JoyStructDecorated)({
+export class VideoCategory extends JoyStructDecorated({
 // No runtime information is currently stored for a Category.
 }) {
 }
-exports.VideoCategory = VideoCategory;
-class VideoCategoryCreationParameters extends (0, common_1.JoyStructDecorated)({
-    meta: primitive_1.Bytes,
+export class VideoCategoryCreationParameters extends JoyStructDecorated({
+    meta: Bytes,
 }) {
 }
-exports.VideoCategoryCreationParameters = VideoCategoryCreationParameters;
-class VideoCategoryUpdateParameters extends (0, common_1.JoyStructDecorated)({
-    new_meta: primitive_1.Bytes,
+export class VideoCategoryUpdateParameters extends JoyStructDecorated({
+    new_meta: Bytes,
 }) {
 }
-exports.VideoCategoryUpdateParameters = VideoCategoryUpdateParameters;
-class Video extends (0, common_1.JoyStructDecorated)({
-    in_channel: common_1.ChannelId,
-    is_censored: primitive_1.bool,
-    enable_comments: primitive_1.bool,
-    video_post_id: types_1.Option.with(VideoPostId),
-    nft_status: types_1.Option.with(OwnedNft),
+export class Video extends JoyStructDecorated({
+    in_channel: ChannelId,
+    is_censored: bool,
+    enable_comments: bool,
+    video_post_id: Option.with(VideoPostId),
+    nft_status: Option.with(OwnedNft),
 }) {
 }
-exports.Video = Video;
-class VideoCreationParameters extends (0, common_1.JoyStructDecorated)({
-    assets: types_1.Option.with(StorageAssets),
-    meta: types_1.Option.with(primitive_1.Bytes),
-    enable_comments: primitive_1.bool,
-    auto_issue_nft: types_1.Option.with(NftIssuanceParameters),
+export class VideoCreationParameters extends JoyStructDecorated({
+    assets: Option.with(StorageAssets),
+    meta: Option.with(Bytes),
+    enable_comments: bool,
+    auto_issue_nft: Option.with(NftIssuanceParameters),
 }) {
 }
-exports.VideoCreationParameters = VideoCreationParameters;
-class VideoUpdateParameters extends (0, common_1.JoyStructDecorated)({
-    assets_to_upload: types_1.Option.with(StorageAssets),
-    new_meta: types_1.Option.with(primitive_1.Bytes),
-    assets_to_remove: types_1.BTreeSet.with(storage_1.DataObjectId),
-    enable_comments: types_1.Option.with(primitive_1.bool),
+export class VideoUpdateParameters extends JoyStructDecorated({
+    assets_to_upload: Option.with(StorageAssets),
+    new_meta: Option.with(Bytes),
+    assets_to_remove: BTreeSet.with(DataObjectId),
+    enable_comments: Option.with(bool),
 }) {
 }
-exports.VideoUpdateParameters = VideoUpdateParameters;
-class VideoPostType extends (0, common_1.JoyEnum)({
-    Description: primitive_1.Null,
+export class VideoPostType extends JoyEnum({
+    Description: Null,
     Comment: VideoPostId,
 }) {
 }
-exports.VideoPostType = VideoPostType;
-class VideoPost extends (0, common_1.JoyStructDecorated)({
+export class VideoPost extends JoyStructDecorated({
     author: ContentActor,
-    bloat_bond: common_1.Balance,
+    bloat_bond: Balance,
     replies_count: VideoPostId,
     post_type: VideoPostType,
     video_reference: VideoId,
 }) {
 }
-exports.VideoPost = VideoPost;
-class Side extends (0, common_1.JoyEnum)({
-    Left: primitive_1.Null,
-    Right: primitive_1.Null,
+export class Side extends JoyEnum({
+    Left: Null,
+    Right: Null,
 }) {
 }
-exports.Side = Side;
-class ProofElement extends (0, common_1.JoyStructDecorated)({
-    hash: common_1.Hash,
+export class ProofElement extends JoyStructDecorated({
+    hash: Hash,
     side: Side,
 }) {
 }
-exports.ProofElement = ProofElement;
-class VideoPostCreationParameters extends (0, common_1.JoyStructDecorated)({
+export class VideoPostCreationParameters extends JoyStructDecorated({
     post_type: VideoPostType,
     video_reference: VideoId,
 }) {
 }
-exports.VideoPostCreationParameters = VideoPostCreationParameters;
-class VideoPostDeletionParameters extends (0, common_1.JoyStructDecorated)({
-    witness: types_1.Option.with(common_1.Hash),
-    rationale: types_1.Option.with(primitive_1.Bytes),
+export class VideoPostDeletionParameters extends JoyStructDecorated({
+    witness: Option.with(Hash),
+    rationale: Option.with(Bytes),
 }) {
 }
-exports.VideoPostDeletionParameters = VideoPostDeletionParameters;
-class PullPayment extends (0, common_1.JoyStructDecorated)({
-    channel_id: common_1.ChannelId,
-    cumulative_payout_claimed: common_1.Balance,
-    reason: common_1.Hash,
+export class PullPayment extends JoyStructDecorated({
+    channel_id: ChannelId,
+    cumulative_payout_claimed: Balance,
+    reason: Hash,
 }) {
 }
-exports.PullPayment = PullPayment;
-class ModeratorSet extends types_1.BTreeSet.with(common_1.MemberId) {
+export class ModeratorSet extends BTreeSet.with(MemberId) {
 }
-exports.ModeratorSet = ModeratorSet;
-class NftMetadata extends types_1.Vec.with(primitive_1.u8) {
+export class NftMetadata extends Vec.with(u8) {
 }
-exports.NftMetadata = NftMetadata;
-exports.contentTypes = {
+export const contentTypes = {
     CuratorId,
     CuratorGroupId,
     CuratorGroup,
@@ -352,4 +298,4 @@ exports.contentTypes = {
     NftIssuanceParameters,
     NftMetadata,
 };
-exports.default = exports.contentTypes;
+export default contentTypes;
diff --git a/council/index.js b/council/index.js
index e3178184838f33f469b2a3209905780a5093ea72..20aa22b463e60c9151eb983076596181c7419c78 100644
--- a/council/index.js
+++ b/council/index.js
@@ -1,62 +1,51 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.councilTypes = exports.CastVoteOf = exports.CouncilMemberOf = exports.CouncilMember = exports.Candidate = exports.CouncilStageUpdate = exports.CouncilStage = exports.CouncilStageElection = exports.CouncilStageAnnouncing = void 0;
-const codec_1 = require("@polkadot/types/codec");
-const types_1 = require("@polkadot/types");
-const JoyStruct_1 = require("../JoyStruct");
-const JoyEnum_1 = require("../JoyEnum");
-const common_1 = require("../common");
-const referendum_1 = require("../referendum");
-class CouncilStageAnnouncing extends (0, JoyStruct_1.JoyStructDecorated)({
-    candidatesCount: types_1.u64,
+import { Option } from '@polkadot/types/codec';
+import { u32, u64, u128, Null } from '@polkadot/types';
+import { JoyStructDecorated } from '../JoyStruct';
+import { JoyEnum } from '../JoyEnum';
+import { MemberId, Hash, AccountId } from '../common';
+import { VotePower, CastVote } from '../referendum';
+export class CouncilStageAnnouncing extends JoyStructDecorated({
+    candidatesCount: u64,
 }) {
 }
-exports.CouncilStageAnnouncing = CouncilStageAnnouncing;
-class CouncilStageElection extends (0, JoyStruct_1.JoyStructDecorated)({
-    candidatesCount: types_1.u64,
+export class CouncilStageElection extends JoyStructDecorated({
+    candidatesCount: u64,
 }) {
 }
-exports.CouncilStageElection = CouncilStageElection;
-class CouncilStage extends (0, JoyEnum_1.JoyEnum)({
+export class CouncilStage extends JoyEnum({
     Announcing: CouncilStageAnnouncing,
     Election: CouncilStageElection,
-    Idle: types_1.Null,
+    Idle: Null,
 }) {
 }
-exports.CouncilStage = CouncilStage;
-class CouncilStageUpdate extends (0, JoyStruct_1.JoyStructDecorated)({
+export class CouncilStageUpdate extends JoyStructDecorated({
     stage: CouncilStage,
-    changed_at: types_1.u32,
+    changed_at: u32,
 }) {
 }
-exports.CouncilStageUpdate = CouncilStageUpdate;
-class Candidate extends (0, JoyStruct_1.JoyStructDecorated)({
-    staking_account_id: common_1.AccountId,
-    reward_account_id: common_1.AccountId,
-    cycle_id: types_1.u64,
-    stake: types_1.u32,
-    vote_power: referendum_1.VotePower,
-    note_hash: codec_1.Option.with(common_1.Hash),
+export class Candidate extends JoyStructDecorated({
+    staking_account_id: AccountId,
+    reward_account_id: AccountId,
+    cycle_id: u64,
+    stake: u32,
+    vote_power: VotePower,
+    note_hash: Option.with(Hash),
 }) {
 }
-exports.Candidate = Candidate;
-class CouncilMember extends (0, JoyStruct_1.JoyStructDecorated)({
-    staking_account_id: common_1.AccountId,
-    reward_account_id: common_1.AccountId,
-    membership_id: common_1.MemberId,
-    stake: types_1.u128,
-    last_payment_block: types_1.u32,
-    unpaid_reward: types_1.u128,
+export class CouncilMember extends JoyStructDecorated({
+    staking_account_id: AccountId,
+    reward_account_id: AccountId,
+    membership_id: MemberId,
+    stake: u128,
+    last_payment_block: u32,
+    unpaid_reward: u128,
 }) {
 }
-exports.CouncilMember = CouncilMember;
-class CouncilMemberOf extends CouncilMember {
+export class CouncilMemberOf extends CouncilMember {
 }
-exports.CouncilMemberOf = CouncilMemberOf;
-class CastVoteOf extends referendum_1.CastVote {
+export class CastVoteOf extends CastVote {
 }
-exports.CastVoteOf = CastVoteOf;
-exports.councilTypes = {
+export const councilTypes = {
     CouncilStageAnnouncing,
     CouncilStageElection,
     CouncilStageUpdate,
@@ -65,4 +54,4 @@ exports.councilTypes = {
     CouncilMemberOf,
     CastVoteOf,
 };
-exports.default = exports.councilTypes;
+export default councilTypes;
diff --git a/forum.js b/forum.js
index 42fa984f42ed97cef6a6ca1ae1213dd627a3dea6..56673f84497a4e72da54725eb50e4c2ce68bdfa4 100644
--- a/forum.js
+++ b/forum.js
@@ -1,99 +1,79 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.forumTypes = exports.PostsToDeleteMap = exports.ExtendedPostId = exports.PollInput = exports.PrivilegedActor = exports.Category = exports.Thread = exports.Post = exports.Poll = exports.PollAlternative = exports.VecPostId = exports.VecThreadId = exports.VecCategoryId = exports.OptionCategoryId = exports.PostReactionId = exports.CategoryId = exports.ModeratorId = exports.ForumUserId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-class ForumUserId extends types_1.u64 {
+import { bool, u32, u64, Option, Vec, Null, Bytes, BTreeMap, u128 } from '@polkadot/types';
+import { Hash, ThreadId, PostId, JoyStructDecorated, JoyEnum } from './common';
+export class ForumUserId extends u64 {
 }
-exports.ForumUserId = ForumUserId;
-class ModeratorId extends types_1.u64 {
+export class ModeratorId extends u64 {
 }
-exports.ModeratorId = ModeratorId;
-class CategoryId extends types_1.u64 {
+export class CategoryId extends u64 {
 }
-exports.CategoryId = CategoryId;
-class PostReactionId extends types_1.u64 {
+export class PostReactionId extends u64 {
 }
-exports.PostReactionId = PostReactionId;
-class OptionCategoryId extends types_1.Option.with(CategoryId) {
+export class OptionCategoryId extends Option.with(CategoryId) {
 }
-exports.OptionCategoryId = OptionCategoryId;
-class VecCategoryId extends types_1.Vec.with(CategoryId) {
+export class VecCategoryId extends Vec.with(CategoryId) {
 }
-exports.VecCategoryId = VecCategoryId;
-class VecThreadId extends types_1.Vec.with(common_1.ThreadId) {
+export class VecThreadId extends Vec.with(ThreadId) {
 }
-exports.VecThreadId = VecThreadId;
-class VecPostId extends types_1.Vec.with(common_1.PostId) {
+export class VecPostId extends Vec.with(PostId) {
 }
-exports.VecPostId = VecPostId;
-class PollAlternative extends (0, common_1.JoyStructDecorated)({
-    alternative_text_hash: common_1.Hash,
-    vote_count: types_1.u32,
+export class PollAlternative extends JoyStructDecorated({
+    alternative_text_hash: Hash,
+    vote_count: u32,
 }) {
 }
-exports.PollAlternative = PollAlternative;
-class Poll extends (0, common_1.JoyStructDecorated)({
-    description_hash: common_1.Hash,
-    end_time: types_1.u64,
-    poll_alternatives: types_1.Vec.with(PollAlternative),
+export class Poll extends JoyStructDecorated({
+    description_hash: Hash,
+    end_time: u64,
+    poll_alternatives: Vec.with(PollAlternative),
 }) {
 }
-exports.Poll = Poll;
-class Post extends (0, common_1.JoyStructDecorated)({
-    thread_id: common_1.ThreadId,
-    text_hash: common_1.Hash,
+export class Post extends JoyStructDecorated({
+    thread_id: ThreadId,
+    text_hash: Hash,
     author_id: ForumUserId,
-    cleanup_pay_off: types_1.u128,
-    last_edited: types_1.u32,
+    cleanup_pay_off: u128,
+    last_edited: u32,
 }) {
 }
-exports.Post = Post;
-class Thread extends (0, common_1.JoyStructDecorated)({
+export class Thread extends JoyStructDecorated({
     category_id: CategoryId,
     author_id: ForumUserId,
-    poll: types_1.Option.with(Poll),
-    cleanup_pay_off: types_1.u128,
-    number_of_posts: types_1.u64,
+    poll: Option.with(Poll),
+    cleanup_pay_off: u128,
+    number_of_posts: u64,
 }) {
 }
-exports.Thread = Thread;
-class Category extends (0, common_1.JoyStructDecorated)({
-    title_hash: common_1.Hash,
-    description_hash: common_1.Hash,
-    archived: types_1.bool,
-    num_direct_subcategories: types_1.u32,
-    num_direct_threads: types_1.u32,
-    num_direct_moderators: types_1.u32,
-    parent_category_id: types_1.Option.with(CategoryId),
-    sticky_thread_ids: types_1.Vec.with(common_1.ThreadId),
+export class Category extends JoyStructDecorated({
+    title_hash: Hash,
+    description_hash: Hash,
+    archived: bool,
+    num_direct_subcategories: u32,
+    num_direct_threads: u32,
+    num_direct_moderators: u32,
+    parent_category_id: Option.with(CategoryId),
+    sticky_thread_ids: Vec.with(ThreadId),
 }) {
 }
-exports.Category = Category;
-class PrivilegedActor extends (0, common_1.JoyEnum)({
-    Lead: types_1.Null,
+export class PrivilegedActor extends JoyEnum({
+    Lead: Null,
     Moderator: ModeratorId,
 }) {
 }
-exports.PrivilegedActor = PrivilegedActor;
-class PollInput extends (0, common_1.JoyStructDecorated)({
-    description: types_1.Bytes,
-    end_time: types_1.u64,
-    poll_alternatives: types_1.Vec.with(types_1.Bytes),
+export class PollInput extends JoyStructDecorated({
+    description: Bytes,
+    end_time: u64,
+    poll_alternatives: Vec.with(Bytes),
 }) {
 }
-exports.PollInput = PollInput;
-class ExtendedPostId extends (0, common_1.JoyStructDecorated)({
+export class ExtendedPostId extends JoyStructDecorated({
     category_id: CategoryId,
-    thread_id: common_1.ThreadId,
-    post_id: common_1.PostId,
+    thread_id: ThreadId,
+    post_id: PostId,
 }) {
 }
-exports.ExtendedPostId = ExtendedPostId;
-class PostsToDeleteMap extends types_1.BTreeMap.with(ExtendedPostId, types_1.bool) {
+export class PostsToDeleteMap extends BTreeMap.with(ExtendedPostId, bool) {
 }
-exports.PostsToDeleteMap = PostsToDeleteMap;
-exports.forumTypes = {
+export const forumTypes = {
     ForumUserId,
     ModeratorId,
     CategoryId,
@@ -109,4 +89,4 @@ exports.forumTypes = {
     ThreadOf: Thread,
     ExtendedPostId,
 };
-exports.default = exports.forumTypes;
+export default forumTypes;
diff --git a/index.js b/index.js
index ad7ccaebc60da7377f04b1b6ad309c6e05aaf134..b8e0d6f767f895078f6a9042d922e8baa796c045 100644
--- a/index.js
+++ b/index.js
@@ -1,38 +1,25 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.createType = exports.registry = exports.types = exports.content = exports.proposals = exports.workingGroup = exports.forum = exports.council = exports.members = exports.common = void 0;
-const common_1 = __importDefault(require("./common"));
-exports.common = common_1.default;
-const members_1 = __importDefault(require("./members"));
-exports.members = members_1.default;
-const council_1 = __importDefault(require("./council"));
-exports.council = council_1.default;
-const forum_1 = __importDefault(require("./forum"));
-exports.forum = forum_1.default;
-const working_group_1 = __importDefault(require("./working-group"));
-exports.workingGroup = working_group_1.default;
-const storage_1 = __importDefault(require("./storage"));
-const blog_1 = __importDefault(require("./blog"));
-const proposals_1 = __importDefault(require("./proposals"));
-exports.proposals = proposals_1.default;
-const referendum_1 = __importDefault(require("./referendum"));
-const constitution_1 = __importDefault(require("./constitution"));
-const bounty_1 = __importDefault(require("./bounty"));
-const content_1 = __importDefault(require("./content"));
-exports.content = content_1.default;
-const types_1 = require("@polkadot/types");
-exports.types = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, common_1.default), members_1.default), council_1.default), forum_1.default), working_group_1.default), storage_1.default), blog_1.default), proposals_1.default), referendum_1.default), constitution_1.default), bounty_1.default), content_1.default), { 
+import common from './common';
+import members from './members';
+import council from './council';
+import forum from './forum';
+import workingGroup from './working-group';
+import storage from './storage';
+import blog from './blog';
+import proposals from './proposals';
+import referendum from './referendum';
+import constitution from './constitution';
+import bounty from './bounty';
+import content from './content';
+import { TypeRegistry } from '@polkadot/types';
+export { common, members, council, forum, workingGroup, proposals, content };
+export const types = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, common), members), council), forum), workingGroup), storage), blog), proposals), referendum), constitution), bounty), content), { 
     // https://github.com/polkadot-js/api/blob/master/CHANGELOG.md#351-jan-18-2020
     AccountInfo: 'AccountInfoWithRefCount', 
     // Required for compatibility with @polkadot/api version >= 6.0
     ValidatorPrefs: 'ValidatorPrefsWithCommission' });
 // Allows creating types without api instance (it's not a recommended way though, so should be used just for mocks)
-exports.registry = new types_1.TypeRegistry();
-exports.registry.register(exports.types);
-function createType(typeName, value) {
-    return exports.registry.createType(typeName, value);
+export const registry = new TypeRegistry();
+registry.register(types);
+export function createType(typeName, value) {
+    return registry.createType(typeName, value);
 }
-exports.createType = createType;
diff --git a/members.js b/members.js
index ef18bc981a93d1fed3d84eeb3616a9f9d66f0660..ec7bd5e0eb0fc67f23068dbb85361499149a3276 100644
--- a/members.js
+++ b/members.js
@@ -1,45 +1,38 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.membersTypes = exports.InviteMembershipParameters = exports.BuyMembershipParameters = exports.StakingAccountMemberBinding = exports.Membership = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-class Membership extends (0, common_1.JoyStructDecorated)({
-    handle_hash: types_1.Bytes,
-    root_account: common_1.AccountId,
-    controller_account: common_1.AccountId,
-    verified: types_1.bool,
-    invites: types_1.u32,
+import { Option, bool, u32, Text, Bytes } from '@polkadot/types';
+import { MemberId, JoyStructDecorated, AccountId } from './common';
+export class Membership extends JoyStructDecorated({
+    handle_hash: Bytes,
+    root_account: AccountId,
+    controller_account: AccountId,
+    verified: bool,
+    invites: u32,
 }) {
 }
-exports.Membership = Membership;
-class StakingAccountMemberBinding extends (0, common_1.JoyStructDecorated)({
-    member_id: common_1.MemberId,
-    confirmed: types_1.bool,
+export class StakingAccountMemberBinding extends JoyStructDecorated({
+    member_id: MemberId,
+    confirmed: bool,
 }) {
 }
-exports.StakingAccountMemberBinding = StakingAccountMemberBinding;
-class BuyMembershipParameters extends (0, common_1.JoyStructDecorated)({
-    root_account: common_1.AccountId,
-    controller_account: common_1.AccountId,
-    handle: types_1.Option.with(types_1.Text),
-    metadata: types_1.Bytes,
-    referrer_id: types_1.Option.with(common_1.MemberId),
+export class BuyMembershipParameters extends JoyStructDecorated({
+    root_account: AccountId,
+    controller_account: AccountId,
+    handle: Option.with(Text),
+    metadata: Bytes,
+    referrer_id: Option.with(MemberId),
 }) {
 }
-exports.BuyMembershipParameters = BuyMembershipParameters;
-class InviteMembershipParameters extends (0, common_1.JoyStructDecorated)({
-    inviting_member_id: common_1.MemberId,
-    root_account: common_1.AccountId,
-    controller_account: common_1.AccountId,
-    handle: types_1.Option.with(types_1.Text),
-    metadata: types_1.Bytes,
+export class InviteMembershipParameters extends JoyStructDecorated({
+    inviting_member_id: MemberId,
+    root_account: AccountId,
+    controller_account: AccountId,
+    handle: Option.with(Text),
+    metadata: Bytes,
 }) {
 }
-exports.InviteMembershipParameters = InviteMembershipParameters;
-exports.membersTypes = {
+export const membersTypes = {
     Membership,
     StakingAccountMemberBinding,
     BuyMembershipParameters,
     InviteMembershipParameters,
 };
-exports.default = exports.membersTypes;
+export default membersTypes;
diff --git a/package.json b/package.json
index fc0c247d28c48f0edaddb76e639036dc3353601b..4bce89d726607a52df72ca59a03f8a6e57b0ee9a 100644
--- a/package.json
+++ b/package.json
@@ -3,6 +3,8 @@
   "version": "0.18.3",
   "description": "Types for Joystream Substrate Runtime - Olympia release",
   "main": "index.js",
+  "type": "module",
+  "module": "index.js",
   "types": "index.d.ts",
   "scripts": {
     "prepublishOnly": "yarn clean && yarn build",
diff --git a/proposals.js b/proposals.js
index 217b35d79b9612629cf4dec9aa866832cae8accb..e4dc2a352bb1f0fef4c536f79cca0a5b06b7d027 100644
--- a/proposals.js
+++ b/proposals.js
@@ -1,32 +1,27 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.proposalsTypes = exports.DiscussionPost = exports.DiscussionThread = exports.ThreadMode = exports.PostAuthorId = exports.ThreadAuthorId = exports.ProposalDetails = exports.FundingRequestParameters = exports.TerminateRoleParameters = exports.FillOpeningParameters = exports.CreateOpeningParameters = exports.GeneralProposalParameters = exports.ProposalCreationParameters = exports.Proposal = exports.SetLead = exports.SetLeadParams = exports.SpendingParams = exports.ProposalId = exports.VoteKind = exports.VoteKindDef = exports.VoteKinds = exports.ExecutionStatus = exports.ProposalStatus = exports.PendingConstitutionality = exports.PendingExecution = exports.Active = exports.ProposalDecision = exports.ProposalDecisionDef = exports.Approved = exports.ApprovedProposalDecision = exports.ApprovedProposalDecisionDef = exports.ExecutionFailed = exports.ExecutionFailedStatus = exports.IProposalStatus = exports.ProposalParameters = exports.VotingResults = void 0;
 // TODO: FIXME: Use Bytes instead of Text to avoid issues with type decoding (ie. 0x909090)
 // (or investigate ways of mitigating this by creating a PR to @polkadot/api library)
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-const working_group_1 = require("./working-group");
-class VotingResults extends (0, common_1.JoyStructDecorated)({
-    abstensions: types_1.u32,
-    approvals: types_1.u32,
-    rejections: types_1.u32,
-    slashes: types_1.u32,
-}) {
-}
-exports.VotingResults = VotingResults;
-class ProposalParameters extends (0, common_1.JoyStructDecorated)({
-    votingPeriod: types_1.u32,
-    gracePeriod: types_1.u32,
-    approvalQuorumPercentage: types_1.u32,
-    approvalThresholdPercentage: types_1.u32,
-    slashingQuorumPercentage: types_1.u32,
-    slashingThresholdPercentage: types_1.u32,
-    requiredStake: types_1.Option.with(types_1.u128),
-    constitutionality: types_1.u32,
-}) {
-}
-exports.ProposalParameters = ProposalParameters;
-exports.IProposalStatus = {
+import { Text, u32, Tuple, u8, u128, Vec, Option, Null, Bytes } from '@polkadot/types';
+import { MemberId, WorkingGroup, JoyEnum, JoyStructDecorated, BalanceKind, PostId, AccountId } from './common';
+import { ApplicationId, OpeningId, StakePolicy, WorkerId } from './working-group';
+export class VotingResults extends JoyStructDecorated({
+    abstensions: u32,
+    approvals: u32,
+    rejections: u32,
+    slashes: u32,
+}) {
+}
+export class ProposalParameters extends JoyStructDecorated({
+    votingPeriod: u32,
+    gracePeriod: u32,
+    approvalQuorumPercentage: u32,
+    approvalThresholdPercentage: u32,
+    slashingQuorumPercentage: u32,
+    slashingThresholdPercentage: u32,
+    requiredStake: Option.with(u128),
+    constitutionality: u32,
+}) {
+}
+export const IProposalStatus = {
     Active: 'Active',
     Canceled: 'Canceled',
     Expired: 'Expired',
@@ -39,156 +34,134 @@ exports.IProposalStatus = {
     Finalized: 'Finalized',
     Slashed: 'Slashed',
 };
-class ExecutionFailedStatus extends (0, common_1.JoyStructDecorated)({
-    error: types_1.Text,
+export class ExecutionFailedStatus extends JoyStructDecorated({
+    error: Text,
 }) {
 }
-exports.ExecutionFailedStatus = ExecutionFailedStatus;
-class ExecutionFailed extends ExecutionFailedStatus {
+export class ExecutionFailed extends ExecutionFailedStatus {
 }
-exports.ExecutionFailed = ExecutionFailed;
-exports.ApprovedProposalDecisionDef = {
-    PendingExecution: types_1.Null,
-    PendingConstitutionality: types_1.Null,
+export const ApprovedProposalDecisionDef = {
+    PendingExecution: Null,
+    PendingConstitutionality: Null,
 };
-class ApprovedProposalDecision extends (0, common_1.JoyEnum)(exports.ApprovedProposalDecisionDef) {
+export class ApprovedProposalDecision extends JoyEnum(ApprovedProposalDecisionDef) {
 }
-exports.ApprovedProposalDecision = ApprovedProposalDecision;
-class Approved extends ApprovedProposalDecision {
+export class Approved extends ApprovedProposalDecision {
 }
-exports.Approved = Approved;
-exports.ProposalDecisionDef = {
-    Canceled: types_1.Null,
-    CanceledByRuntime: types_1.Null,
-    Vetoed: types_1.Null,
-    Rejected: types_1.Null,
-    Slashed: types_1.Null,
-    Expired: types_1.Null,
+export const ProposalDecisionDef = {
+    Canceled: Null,
+    CanceledByRuntime: Null,
+    Vetoed: Null,
+    Rejected: Null,
+    Slashed: Null,
+    Expired: Null,
     Approved,
 };
-class ProposalDecision extends (0, common_1.JoyEnum)(exports.ProposalDecisionDef) {
+export class ProposalDecision extends JoyEnum(ProposalDecisionDef) {
 }
-exports.ProposalDecision = ProposalDecision;
-class Active extends types_1.Null {
+export class Active extends Null {
 }
-exports.Active = Active;
-class PendingExecution extends types_1.u32 {
+export class PendingExecution extends u32 {
 }
-exports.PendingExecution = PendingExecution;
-class PendingConstitutionality extends types_1.Null {
+export class PendingConstitutionality extends Null {
 }
-exports.PendingConstitutionality = PendingConstitutionality;
-class ProposalStatus extends (0, common_1.JoyEnum)({
+export class ProposalStatus extends JoyEnum({
     Active,
     PendingExecution,
     PendingConstitutionality,
 }) {
 }
-exports.ProposalStatus = ProposalStatus;
-class ExecutionStatus extends (0, common_1.JoyEnum)({
-    Executed: types_1.Null,
+export class ExecutionStatus extends JoyEnum({
+    Executed: Null,
     ExecutionFailed,
 }) {
 }
-exports.ExecutionStatus = ExecutionStatus;
-exports.VoteKinds = ['Approve', 'Reject', 'Slash', 'Abstain'];
-exports.VoteKindDef = {
-    Approve: types_1.Null,
-    Reject: types_1.Null,
-    Slash: types_1.Null,
-    Abstain: types_1.Null,
+export const VoteKinds = ['Approve', 'Reject', 'Slash', 'Abstain'];
+export const VoteKindDef = {
+    Approve: Null,
+    Reject: Null,
+    Slash: Null,
+    Abstain: Null,
 };
-class VoteKind extends (0, common_1.JoyEnum)(exports.VoteKindDef) {
+export class VoteKind extends JoyEnum(VoteKindDef) {
 }
-exports.VoteKind = VoteKind;
-class ProposalId extends types_1.u32 {
+export class ProposalId extends u32 {
 }
-exports.ProposalId = ProposalId;
-class SpendingParams extends types_1.Tuple.with(['Balance', 'AccountId']) {
+export class SpendingParams extends Tuple.with(['Balance', 'AccountId']) {
 }
-exports.SpendingParams = SpendingParams;
-class SetLeadParams extends types_1.Tuple.with([common_1.MemberId, common_1.AccountId]) {
+export class SetLeadParams extends Tuple.with([MemberId, AccountId]) {
 }
-exports.SetLeadParams = SetLeadParams;
-class SetLead extends types_1.Option.with(SetLeadParams) {
+export class SetLead extends Option.with(SetLeadParams) {
 }
-exports.SetLead = SetLead;
-class Proposal
+export class Proposal
 // FIXME: Snake case for consistency?
- extends (0, common_1.JoyStructDecorated)({
+ extends JoyStructDecorated({
     parameters: ProposalParameters,
-    proposerId: common_1.MemberId,
-    activatedAt: types_1.u32,
+    proposerId: MemberId,
+    activatedAt: u32,
     status: ProposalStatus,
     votingResults: VotingResults,
-    exactExecutionBlock: types_1.Option.with(types_1.u32),
-    nrOfCouncilConfirmations: types_1.u32,
-    stakingAccountId: types_1.Option.with(common_1.AccountId),
+    exactExecutionBlock: Option.with(u32),
+    nrOfCouncilConfirmations: u32,
+    stakingAccountId: Option.with(AccountId),
 }) {
 }
-exports.Proposal = Proposal;
-class ProposalCreationParameters extends (0, common_1.JoyStructDecorated)({
-    account_id: common_1.AccountId,
-    proposer_id: common_1.MemberId,
+export class ProposalCreationParameters extends JoyStructDecorated({
+    account_id: AccountId,
+    proposer_id: MemberId,
     proposal_parameters: ProposalParameters,
-    title: types_1.Text,
-    description: types_1.Text,
-    staking_account_id: types_1.Option.with(common_1.AccountId),
-    encoded_dispatchable_call_code: types_1.Vec.with(types_1.u8),
-    exact_execution_block: types_1.Option.with(types_1.u32),
+    title: Text,
+    description: Text,
+    staking_account_id: Option.with(AccountId),
+    encoded_dispatchable_call_code: Vec.with(u8),
+    exact_execution_block: Option.with(u32),
 }) {
 }
-exports.ProposalCreationParameters = ProposalCreationParameters;
-class GeneralProposalParameters extends (0, common_1.JoyStructDecorated)({
-    member_id: common_1.MemberId,
-    title: types_1.Text,
-    description: types_1.Text,
-    staking_account_id: types_1.Option.with(common_1.AccountId),
-    exact_execution_block: types_1.Option.with(types_1.u32),
+export class GeneralProposalParameters extends JoyStructDecorated({
+    member_id: MemberId,
+    title: Text,
+    description: Text,
+    staking_account_id: Option.with(AccountId),
+    exact_execution_block: Option.with(u32),
 }) {
 }
-exports.GeneralProposalParameters = GeneralProposalParameters;
-class CreateOpeningParameters extends (0, common_1.JoyStructDecorated)({
-    description: types_1.Bytes,
-    stake_policy: working_group_1.StakePolicy,
-    reward_per_block: types_1.Option.with(types_1.u128),
-    working_group: common_1.WorkingGroup,
+export class CreateOpeningParameters extends JoyStructDecorated({
+    description: Bytes,
+    stake_policy: StakePolicy,
+    reward_per_block: Option.with(u128),
+    working_group: WorkingGroup,
 }) {
 }
-exports.CreateOpeningParameters = CreateOpeningParameters;
-class FillOpeningParameters extends (0, common_1.JoyStructDecorated)({
-    opening_id: working_group_1.OpeningId,
-    successful_application_id: working_group_1.ApplicationId,
-    working_group: common_1.WorkingGroup,
+export class FillOpeningParameters extends JoyStructDecorated({
+    opening_id: OpeningId,
+    successful_application_id: ApplicationId,
+    working_group: WorkingGroup,
 }) {
 }
-exports.FillOpeningParameters = FillOpeningParameters;
-class TerminateRoleParameters extends (0, common_1.JoyStructDecorated)({
-    worker_id: working_group_1.WorkerId,
-    slashing_amount: types_1.Option.with(types_1.u128),
-    working_group: common_1.WorkingGroup,
+export class TerminateRoleParameters extends JoyStructDecorated({
+    worker_id: WorkerId,
+    slashing_amount: Option.with(u128),
+    working_group: WorkingGroup,
 }) {
 }
-exports.TerminateRoleParameters = TerminateRoleParameters;
-class FundingRequestParameters extends (0, common_1.JoyStructDecorated)({
-    account: common_1.AccountId,
-    amount: types_1.u128,
+export class FundingRequestParameters extends JoyStructDecorated({
+    account: AccountId,
+    amount: u128,
 }) {
 }
-exports.FundingRequestParameters = FundingRequestParameters;
 // Typesafe tuple workarounds
-const UpdateWorkingGroupBudget = types_1.Tuple.with(['Balance', common_1.WorkingGroup, common_1.BalanceKind]);
-const DecreaseWorkingGroupLeadStake = types_1.Tuple.with([working_group_1.WorkerId, 'Balance', common_1.WorkingGroup]);
-const SlashWorkingGroupLead = types_1.Tuple.with([working_group_1.WorkerId, 'Balance', common_1.WorkingGroup]);
-const SetWorkingGroupLeadReward = types_1.Tuple.with([working_group_1.WorkerId, 'Option<Balance>', common_1.WorkingGroup]);
-const CancelWorkingGroupLeadOpening = types_1.Tuple.with([working_group_1.OpeningId, common_1.WorkingGroup]);
-const CreateBlogPost = types_1.Tuple.with([types_1.Text, types_1.Text]);
-const EditBlogPost = types_1.Tuple.with([common_1.PostId, 'Option<Text>', 'Option<Text>']);
-class ProposalDetails extends (0, common_1.JoyEnum)({
-    Signal: types_1.Text,
-    RuntimeUpgrade: types_1.Bytes,
-    FundingRequest: types_1.Vec.with(FundingRequestParameters),
-    SetMaxValidatorCount: types_1.u32,
+const UpdateWorkingGroupBudget = Tuple.with(['Balance', WorkingGroup, BalanceKind]);
+const DecreaseWorkingGroupLeadStake = Tuple.with([WorkerId, 'Balance', WorkingGroup]);
+const SlashWorkingGroupLead = Tuple.with([WorkerId, 'Balance', WorkingGroup]);
+const SetWorkingGroupLeadReward = Tuple.with([WorkerId, 'Option<Balance>', WorkingGroup]);
+const CancelWorkingGroupLeadOpening = Tuple.with([OpeningId, WorkingGroup]);
+const CreateBlogPost = Tuple.with([Text, Text]);
+const EditBlogPost = Tuple.with([PostId, 'Option<Text>', 'Option<Text>']);
+export class ProposalDetails extends JoyEnum({
+    Signal: Text,
+    RuntimeUpgrade: Bytes,
+    FundingRequest: Vec.with(FundingRequestParameters),
+    SetMaxValidatorCount: u32,
     CreateWorkingGroupLeadOpening: CreateOpeningParameters,
     FillWorkingGroupLeadOpening: FillOpeningParameters,
     UpdateWorkingGroupBudget,
@@ -196,50 +169,44 @@ class ProposalDetails extends (0, common_1.JoyEnum)({
     SlashWorkingGroupLead,
     SetWorkingGroupLeadReward,
     TerminateWorkingGroupLead: TerminateRoleParameters,
-    AmendConstitution: types_1.Text,
+    AmendConstitution: Text,
     CancelWorkingGroupLeadOpening,
-    SetMembershipPrice: types_1.u128,
-    SetCouncilBudgetIncrement: types_1.u128,
-    SetCouncilorReward: types_1.u128,
-    SetInitialInvitationBalance: types_1.u128,
-    SetInitialInvitationCount: types_1.u32,
-    SetMembershipLeadInvitationQuota: types_1.u32,
-    SetReferralCut: types_1.u8,
+    SetMembershipPrice: u128,
+    SetCouncilBudgetIncrement: u128,
+    SetCouncilorReward: u128,
+    SetInitialInvitationBalance: u128,
+    SetInitialInvitationCount: u32,
+    SetMembershipLeadInvitationQuota: u32,
+    SetReferralCut: u8,
     CreateBlogPost,
     EditBlogPost,
-    LockBlogPost: common_1.PostId,
-    UnlockBlogPost: common_1.PostId,
+    LockBlogPost: PostId,
+    UnlockBlogPost: PostId,
     VetoProposal: ProposalId,
 }) {
 }
-exports.ProposalDetails = ProposalDetails;
 // Discussions
-class ThreadAuthorId extends common_1.MemberId {
+export class ThreadAuthorId extends MemberId {
 }
-exports.ThreadAuthorId = ThreadAuthorId;
-class PostAuthorId extends common_1.MemberId {
+export class PostAuthorId extends MemberId {
 }
-exports.PostAuthorId = PostAuthorId;
-class ThreadMode extends (0, common_1.JoyEnum)({
-    Open: types_1.Null,
-    Closed: types_1.Vec.with(common_1.MemberId),
+export class ThreadMode extends JoyEnum({
+    Open: Null,
+    Closed: Vec.with(MemberId),
 }) {
 }
-exports.ThreadMode = ThreadMode;
-class DiscussionThread extends (0, common_1.JoyStructDecorated)({
-    activated_at: types_1.u32,
+export class DiscussionThread extends JoyStructDecorated({
+    activated_at: u32,
     author_id: ThreadAuthorId,
     mode: ThreadMode,
 }) {
 }
-exports.DiscussionThread = DiscussionThread;
-class DiscussionPost extends (0, common_1.JoyStructDecorated)({
+export class DiscussionPost extends JoyStructDecorated({
     author_id: PostAuthorId,
 }) {
 }
-exports.DiscussionPost = DiscussionPost;
 // export default proposalTypes;
-exports.proposalsTypes = {
+export const proposalsTypes = {
     ProposalId,
     ProposalStatus,
     ProposalOf: Proposal,
@@ -262,4 +229,4 @@ exports.proposalsTypes = {
     ExecutionStatus,
     FundingRequestParameters,
 };
-exports.default = exports.proposalsTypes;
+export default proposalsTypes;
diff --git a/referendum/index.js b/referendum/index.js
index 35d805e84d1436e3fc8c247a337fdde4b119787e..6141254ecd102ad317d4e5bc9852cf84bc25c5af 100644
--- a/referendum/index.js
+++ b/referendum/index.js
@@ -1,55 +1,46 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.referendumTypes = exports.CastVote = exports.ReferendumStage = exports.ReferendumStageRevealing = exports.ReferendumStageVoting = exports.OptionResult = exports.VotePower = void 0;
-const codec_1 = require("@polkadot/types/codec");
-const primitive_1 = require("@polkadot/types/primitive");
-const JoyStruct_1 = require("../JoyStruct");
-const JoyEnum_1 = require("../JoyEnum");
-const common_1 = require("../common");
-class VotePower extends primitive_1.u128 {
+import { Option, Vec } from '@polkadot/types/codec';
+import { Null, u32, u64, u128 } from '@polkadot/types/primitive';
+import { JoyStructDecorated } from '../JoyStruct';
+import { JoyEnum } from '../JoyEnum';
+import { MemberId, Hash } from '../common';
+export class VotePower extends u128 {
 } // Balance
-exports.VotePower = VotePower;
-class OptionResult extends (0, JoyStruct_1.JoyStructDecorated)({
-    option_id: common_1.MemberId,
+export class OptionResult extends JoyStructDecorated({
+    option_id: MemberId,
     vote_power: VotePower,
 }) {
 }
-exports.OptionResult = OptionResult;
-class ReferendumStageVoting extends (0, JoyStruct_1.JoyStructDecorated)({
-    started: primitive_1.u32,
-    winning_target_count: primitive_1.u64,
-    current_cycle_id: primitive_1.u64,
+export class ReferendumStageVoting extends JoyStructDecorated({
+    started: u32,
+    winning_target_count: u64,
+    current_cycle_id: u64,
 }) {
 }
-exports.ReferendumStageVoting = ReferendumStageVoting;
-class ReferendumStageRevealing extends (0, JoyStruct_1.JoyStructDecorated)({
-    started: primitive_1.u32,
-    winning_target_count: primitive_1.u64,
-    intermediate_winners: codec_1.Vec.with(OptionResult),
-    current_cycle_id: primitive_1.u64,
+export class ReferendumStageRevealing extends JoyStructDecorated({
+    started: u32,
+    winning_target_count: u64,
+    intermediate_winners: Vec.with(OptionResult),
+    current_cycle_id: u64,
 }) {
 }
-exports.ReferendumStageRevealing = ReferendumStageRevealing;
-class ReferendumStage extends (0, JoyEnum_1.JoyEnum)({
-    Inactive: primitive_1.Null,
+export class ReferendumStage extends JoyEnum({
+    Inactive: Null,
     Voting: ReferendumStageVoting,
     Revealing: ReferendumStageRevealing,
 }) {
 }
-exports.ReferendumStage = ReferendumStage;
-class CastVote extends (0, JoyStruct_1.JoyStructDecorated)({
-    commitment: common_1.Hash,
-    cycle_id: primitive_1.u64,
-    stake: primitive_1.u128,
-    vote_for: codec_1.Option.with(common_1.MemberId),
+export class CastVote extends JoyStructDecorated({
+    commitment: Hash,
+    cycle_id: u64,
+    stake: u128,
+    vote_for: Option.with(MemberId),
 }) {
 }
-exports.CastVote = CastVote;
-exports.referendumTypes = {
+export const referendumTypes = {
     ReferendumStageVoting,
     ReferendumStageRevealing,
     ReferendumStage,
     OptionResult,
     VotePower,
 };
-exports.default = exports.referendumTypes;
+export default referendumTypes;
diff --git a/storage.js b/storage.js
index 94f7f3b4226a0711f257d70a7513e29e2e80b305..d040bbfb12ff0605844e539a137d7740c53b716e 100644
--- a/storage.js
+++ b/storage.js
@@ -1,181 +1,145 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.storageTypes = exports.DynamicBagCreationPolicyDistributorFamiliesMap = exports.DistributionBucketFamily = exports.DistributionBucket = exports.ContentIdSet = exports.Cid = exports.UploadParameters = exports.DataObjectCreationParameters = exports.StorageBucket = exports.StorageBucketOperatorStatus = exports.StorageBucketOperatorStatusDef = exports.Voucher = exports.BagIdType = exports.BagId = exports.BagIdDef = exports.Dynamic = exports.DynamicBagId = exports.DynamicBagIdDef = exports.ChannelId = exports.Static = exports.StaticBagId = exports.StaticBagIdDef = exports.DynamicBagType = exports.DynamicBagTypeDef = exports.DynamicBagCreationPolicy = exports.Bag = exports.DynamicBagDeletionPrizeRecord = exports.DynamicBagDeletionPrize = exports.DistributionBucketId = exports.DistributionBucketIndexSet = exports.StorageBucketIdSet = exports.DistributionBucketFamilyId = exports.DistributionBucketIndex = exports.DataObjectIdMap = exports.DataObjectIdSet = exports.DataObject = exports.StorageBucketsPerBagValueConstraint = exports.StorageBucketId = exports.DataObjectId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-const working_group_1 = require("./working-group");
-class DataObjectId extends types_1.u64 {
-}
-exports.DataObjectId = DataObjectId;
-class StorageBucketId extends types_1.u64 {
-}
-exports.StorageBucketId = StorageBucketId;
-class StorageBucketsPerBagValueConstraint extends (0, common_1.JoyStructDecorated)({
-    min: types_1.u64,
-    max_min_diff: types_1.u64,
+import { Null, u64, Bytes, Vec, bool, GenericAccountId as AccountId, BTreeSet, BTreeMap, Option, u32, u128, Tuple, } from '@polkadot/types';
+import { JoyEnum, JoyStructDecorated, WorkingGroup, BalanceOf, MemberId } from './common';
+import { WorkerId } from './working-group';
+export class DataObjectId extends u64 {
+}
+export class StorageBucketId extends u64 {
+}
+export class StorageBucketsPerBagValueConstraint extends JoyStructDecorated({
+    min: u64,
+    max_min_diff: u64,
 }) {
 }
-exports.StorageBucketsPerBagValueConstraint = StorageBucketsPerBagValueConstraint;
-class DataObject extends (0, common_1.JoyStructDecorated)({
-    accepted: types_1.bool,
-    deletion_prize: common_1.BalanceOf,
-    size: types_1.u64,
-    ipfsContentId: types_1.Bytes,
+export class DataObject extends JoyStructDecorated({
+    accepted: bool,
+    deletion_prize: BalanceOf,
+    size: u64,
+    ipfsContentId: Bytes,
 }) {
 }
-exports.DataObject = DataObject;
-class DataObjectIdSet extends types_1.BTreeSet.with(DataObjectId) {
+export class DataObjectIdSet extends BTreeSet.with(DataObjectId) {
 }
-exports.DataObjectIdSet = DataObjectIdSet;
-class DataObjectIdMap extends types_1.BTreeMap.with(DataObjectId, DataObject) {
+export class DataObjectIdMap extends BTreeMap.with(DataObjectId, DataObject) {
 }
-exports.DataObjectIdMap = DataObjectIdMap;
-class DistributionBucketIndex extends types_1.u64 {
+export class DistributionBucketIndex extends u64 {
 }
-exports.DistributionBucketIndex = DistributionBucketIndex;
-class DistributionBucketFamilyId extends types_1.u64 {
+export class DistributionBucketFamilyId extends u64 {
 }
-exports.DistributionBucketFamilyId = DistributionBucketFamilyId;
-class StorageBucketIdSet extends types_1.BTreeSet.with(StorageBucketId) {
+export class StorageBucketIdSet extends BTreeSet.with(StorageBucketId) {
 }
-exports.StorageBucketIdSet = StorageBucketIdSet;
-class DistributionBucketIndexSet extends types_1.BTreeSet.with(DistributionBucketIndex) {
+export class DistributionBucketIndexSet extends BTreeSet.with(DistributionBucketIndex) {
 }
-exports.DistributionBucketIndexSet = DistributionBucketIndexSet;
-class DistributionBucketId extends (0, common_1.JoyStructDecorated)({
+export class DistributionBucketId extends JoyStructDecorated({
     distribution_bucket_family_id: DistributionBucketFamilyId,
     distribution_bucket_index: DistributionBucketIndex,
 }) {
 }
-exports.DistributionBucketId = DistributionBucketId;
-class DynamicBagDeletionPrize extends (0, common_1.JoyStructDecorated)({
-    account_id: types_1.GenericAccountId,
-    prize: common_1.BalanceOf,
+export class DynamicBagDeletionPrize extends JoyStructDecorated({
+    account_id: AccountId,
+    prize: BalanceOf,
 }) {
 }
-exports.DynamicBagDeletionPrize = DynamicBagDeletionPrize;
-class DynamicBagDeletionPrizeRecord extends DynamicBagDeletionPrize {
+export class DynamicBagDeletionPrizeRecord extends DynamicBagDeletionPrize {
 }
-exports.DynamicBagDeletionPrizeRecord = DynamicBagDeletionPrizeRecord;
-class Bag extends (0, common_1.JoyStructDecorated)({
-    stored_by: types_1.BTreeSet.with(StorageBucketId),
-    distributed_by: types_1.BTreeSet.with(DistributionBucketId),
-    deletion_prize: types_1.Option.with(types_1.u128),
-    objects_total_size: types_1.u64,
-    objects_number: types_1.u64,
+export class Bag extends JoyStructDecorated({
+    stored_by: BTreeSet.with(StorageBucketId),
+    distributed_by: BTreeSet.with(DistributionBucketId),
+    deletion_prize: Option.with(u128),
+    objects_total_size: u64,
+    objects_number: u64,
 }) {
 }
-exports.Bag = Bag;
-class DynamicBagCreationPolicy extends (0, common_1.JoyStructDecorated)({
-    numberOfStorageBuckets: types_1.u64,
-    families: types_1.BTreeMap.with(DistributionBucketFamilyId, types_1.u32),
+export class DynamicBagCreationPolicy extends JoyStructDecorated({
+    numberOfStorageBuckets: u64,
+    families: BTreeMap.with(DistributionBucketFamilyId, u32),
 }) {
 }
-exports.DynamicBagCreationPolicy = DynamicBagCreationPolicy;
-exports.DynamicBagTypeDef = {
-    Member: types_1.Null,
-    Channel: types_1.Null,
+export const DynamicBagTypeDef = {
+    Member: Null,
+    Channel: Null,
 };
-class DynamicBagType extends (0, common_1.JoyEnum)(exports.DynamicBagTypeDef) {
+export class DynamicBagType extends JoyEnum(DynamicBagTypeDef) {
 }
-exports.DynamicBagType = DynamicBagType;
-exports.StaticBagIdDef = {
-    Council: types_1.Null,
-    WorkingGroup: common_1.WorkingGroup,
+export const StaticBagIdDef = {
+    Council: Null,
+    WorkingGroup: WorkingGroup,
 };
-class StaticBagId extends (0, common_1.JoyEnum)(exports.StaticBagIdDef) {
+export class StaticBagId extends JoyEnum(StaticBagIdDef) {
 }
-exports.StaticBagId = StaticBagId;
-class Static extends StaticBagId {
+export class Static extends StaticBagId {
 }
-exports.Static = Static;
 // This type should be imported from content-directory/common types once the Olympia release is merged.
-class ChannelId extends types_1.u64 {
+export class ChannelId extends u64 {
 }
-exports.ChannelId = ChannelId;
-exports.DynamicBagIdDef = {
-    Member: common_1.MemberId,
+export const DynamicBagIdDef = {
+    Member: MemberId,
     Channel: ChannelId,
 };
-class DynamicBagId extends (0, common_1.JoyEnum)(exports.DynamicBagIdDef) {
+export class DynamicBagId extends JoyEnum(DynamicBagIdDef) {
 }
-exports.DynamicBagId = DynamicBagId;
-class Dynamic extends DynamicBagId {
+export class Dynamic extends DynamicBagId {
 }
-exports.Dynamic = Dynamic;
-exports.BagIdDef = {
+export const BagIdDef = {
     Static,
     Dynamic,
 };
-class BagId extends (0, common_1.JoyEnum)(exports.BagIdDef) {
+export class BagId extends JoyEnum(BagIdDef) {
 }
-exports.BagId = BagId;
 // Alias
-class BagIdType extends BagId {
-}
-exports.BagIdType = BagIdType;
-class Voucher extends (0, common_1.JoyStructDecorated)({
-    sizeLimit: types_1.u64,
-    objectsLimit: types_1.u64,
-    sizeUsed: types_1.u64,
-    objectsUsed: types_1.u64,
+export class BagIdType extends BagId {
+}
+export class Voucher extends JoyStructDecorated({
+    sizeLimit: u64,
+    objectsLimit: u64,
+    sizeUsed: u64,
+    objectsUsed: u64,
 }) {
 }
-exports.Voucher = Voucher;
-exports.StorageBucketOperatorStatusDef = {
-    Missing: types_1.Null,
-    InvitedStorageWorker: working_group_1.WorkerId,
-    StorageWorker: types_1.Tuple.with([working_group_1.WorkerId, types_1.GenericAccountId]),
+export const StorageBucketOperatorStatusDef = {
+    Missing: Null,
+    InvitedStorageWorker: WorkerId,
+    StorageWorker: Tuple.with([WorkerId, AccountId]),
 };
-class StorageBucketOperatorStatus extends (0, common_1.JoyEnum)(exports.StorageBucketOperatorStatusDef) {
+export class StorageBucketOperatorStatus extends JoyEnum(StorageBucketOperatorStatusDef) {
 }
-exports.StorageBucketOperatorStatus = StorageBucketOperatorStatus;
-class StorageBucket extends (0, common_1.JoyStructDecorated)({
+export class StorageBucket extends JoyStructDecorated({
     operator_status: StorageBucketOperatorStatus,
-    accepting_new_bags: types_1.bool,
+    accepting_new_bags: bool,
     voucher: Voucher,
-    assigned_bags: types_1.u64,
+    assigned_bags: u64,
 }) {
 }
-exports.StorageBucket = StorageBucket;
-class DataObjectCreationParameters extends (0, common_1.JoyStructDecorated)({
-    size: types_1.u64,
-    ipfsContentId: types_1.Bytes,
+export class DataObjectCreationParameters extends JoyStructDecorated({
+    size: u64,
+    ipfsContentId: Bytes,
 }) {
 }
-exports.DataObjectCreationParameters = DataObjectCreationParameters;
-class UploadParameters extends (0, common_1.JoyStructDecorated)({
+export class UploadParameters extends JoyStructDecorated({
     bagId: BagId,
-    objectCreationList: types_1.Vec.with(DataObjectCreationParameters),
-    deletionPrizeSourceAccountId: types_1.GenericAccountId,
-    expectedDataSizeFee: common_1.BalanceOf,
+    objectCreationList: Vec.with(DataObjectCreationParameters),
+    deletionPrizeSourceAccountId: AccountId,
+    expectedDataSizeFee: BalanceOf,
 }) {
 }
-exports.UploadParameters = UploadParameters;
-class Cid extends types_1.Bytes {
+export class Cid extends Bytes {
 }
-exports.Cid = Cid;
-class ContentIdSet extends types_1.BTreeSet.with(Cid) {
+export class ContentIdSet extends BTreeSet.with(Cid) {
 }
-exports.ContentIdSet = ContentIdSet;
-class DistributionBucket extends (0, common_1.JoyStructDecorated)({
-    accepting_new_bags: types_1.bool,
-    distributing: types_1.bool,
-    pending_invitations: types_1.BTreeSet.with(working_group_1.WorkerId),
-    operators: types_1.BTreeSet.with(working_group_1.WorkerId),
-    assigned_bags: types_1.u64,
+export class DistributionBucket extends JoyStructDecorated({
+    accepting_new_bags: bool,
+    distributing: bool,
+    pending_invitations: BTreeSet.with(WorkerId),
+    operators: BTreeSet.with(WorkerId),
+    assigned_bags: u64,
 }) {
 }
-exports.DistributionBucket = DistributionBucket;
-class DistributionBucketFamily extends (0, common_1.JoyStructDecorated)({
+export class DistributionBucketFamily extends JoyStructDecorated({
     next_distribution_bucket_index: DistributionBucketIndex,
 }) {
 }
-exports.DistributionBucketFamily = DistributionBucketFamily;
-class DynamicBagCreationPolicyDistributorFamiliesMap extends types_1.BTreeMap.with(DistributionBucketFamilyId, types_1.u32) {
+export class DynamicBagCreationPolicyDistributorFamiliesMap extends BTreeMap.with(DistributionBucketFamilyId, u32) {
 }
-exports.DynamicBagCreationPolicyDistributorFamiliesMap = DynamicBagCreationPolicyDistributorFamiliesMap;
-exports.storageTypes = {
+export const storageTypes = {
     StorageBucketId,
     StorageBucketsPerBagValueConstraint,
     DataObjectId,
@@ -210,4 +174,4 @@ exports.storageTypes = {
     DistributionBucketIndexSet,
     DynamicBagCreationPolicyDistributorFamiliesMap,
 };
-exports.default = exports.storageTypes;
+export default storageTypes;
diff --git a/tsconfig-base.json b/tsconfig-base.json
index 954f4a283001d228081d5c0bf30f0548542126db..ae2a32a6d526e0ad6e2da83e91bce62430b81fde 100644
--- a/tsconfig-base.json
+++ b/tsconfig-base.json
@@ -1,7 +1,7 @@
 {
   "compilerOptions": {
     "target": "es2017",
-    "module": "commonjs",
+    "module": "esnext",
     "strict": true,
     "noImplicitAny": true,
     "noUnusedLocals": true,
diff --git a/working-group/index.js b/working-group/index.js
index 7f936b22c9d3cc6450576c408a4fe5582dccc0a5..dd685ae14444a103c2bb3867dd63ad575f272dd3 100644
--- a/working-group/index.js
+++ b/working-group/index.js
@@ -1,125 +1,103 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.workingGroupTypes = exports.RewardPaymentType = exports.Opening = exports.OpeningType = exports.OpeningTypeDef = exports.OpeningType_Regular = exports.OpeningType_Leader = exports.Penalty = exports.ApplyOnOpeningParameters = exports.StakeParameters = exports.StakePolicy = exports.WorkerInfo = exports.Worker = exports.ApplicationInfo = exports.Application = exports.ApplicationIdToWorkerIdMap = exports.ApplicationIdSet = exports.StorageProviderId = exports.WorkerId = exports.OpeningId = exports.ApplicationId = void 0;
-const types_1 = require("@polkadot/types");
-const primitive_1 = require("@polkadot/types/primitive");
-const common_1 = require("../common");
-class ApplicationId extends primitive_1.u64 {
-}
-exports.ApplicationId = ApplicationId;
-class OpeningId extends primitive_1.u64 {
-}
-exports.OpeningId = OpeningId;
-class WorkerId extends common_1.ActorId {
-}
-exports.WorkerId = WorkerId;
-class StorageProviderId extends WorkerId {
-}
-exports.StorageProviderId = StorageProviderId;
-class ApplicationIdSet extends types_1.BTreeSet.with(ApplicationId) {
-}
-exports.ApplicationIdSet = ApplicationIdSet;
-class ApplicationIdToWorkerIdMap extends types_1.BTreeMap.with(ApplicationId, WorkerId) {
-}
-exports.ApplicationIdToWorkerIdMap = ApplicationIdToWorkerIdMap;
-class Application extends (0, common_1.JoyStructDecorated)({
-    role_account_id: common_1.AccountId,
-    reward_account_id: common_1.AccountId,
-    staking_account_id: common_1.AccountId,
-    member_id: common_1.MemberId,
-    description_hash: types_1.Bytes,
+import { Bytes, BTreeMap, Option, Text, BTreeSet } from '@polkadot/types';
+import { Null, u32, u64, u128 } from '@polkadot/types/primitive';
+import { ActorId, MemberId, JoyEnum, JoyStructDecorated, AccountId } from '../common';
+export class ApplicationId extends u64 {
+}
+export class OpeningId extends u64 {
+}
+export class WorkerId extends ActorId {
+}
+export class StorageProviderId extends WorkerId {
+}
+export class ApplicationIdSet extends BTreeSet.with(ApplicationId) {
+}
+export class ApplicationIdToWorkerIdMap extends BTreeMap.with(ApplicationId, WorkerId) {
+}
+export class Application extends JoyStructDecorated({
+    role_account_id: AccountId,
+    reward_account_id: AccountId,
+    staking_account_id: AccountId,
+    member_id: MemberId,
+    description_hash: Bytes,
     opening_id: OpeningId,
 }) {
 }
-exports.Application = Application;
-class ApplicationInfo extends (0, common_1.JoyStructDecorated)({
+export class ApplicationInfo extends JoyStructDecorated({
     application_id: ApplicationId,
     application: Application,
 }) {
 }
-exports.ApplicationInfo = ApplicationInfo;
-class Worker extends (0, common_1.JoyStructDecorated)({
-    member_id: common_1.MemberId,
-    role_account_id: common_1.AccountId,
-    staking_account_id: common_1.AccountId,
-    reward_account_id: common_1.AccountId,
-    started_leaving_at: types_1.Option.with(primitive_1.u32),
-    job_unstaking_period: primitive_1.u32,
-    reward_per_block: types_1.Option.with(primitive_1.u128),
-    missed_reward: types_1.Option.with(primitive_1.u128),
-    created_at: primitive_1.u32,
+export class Worker extends JoyStructDecorated({
+    member_id: MemberId,
+    role_account_id: AccountId,
+    staking_account_id: AccountId,
+    reward_account_id: AccountId,
+    started_leaving_at: Option.with(u32),
+    job_unstaking_period: u32,
+    reward_per_block: Option.with(u128),
+    missed_reward: Option.with(u128),
+    created_at: u32,
 }) {
     // FIXME: Won't be needed soon?
     get is_active() {
         return !this.isEmpty;
     }
 }
-exports.Worker = Worker;
-class WorkerInfo extends (0, common_1.JoyStructDecorated)({
+export class WorkerInfo extends JoyStructDecorated({
     worker_id: WorkerId,
     worker: Worker,
 }) {
 }
-exports.WorkerInfo = WorkerInfo;
-class StakePolicy extends (0, common_1.JoyStructDecorated)({
-    stake_amount: primitive_1.u128,
-    leaving_unstaking_period: primitive_1.u32,
+export class StakePolicy extends JoyStructDecorated({
+    stake_amount: u128,
+    leaving_unstaking_period: u32,
 }) {
 }
-exports.StakePolicy = StakePolicy;
-class StakeParameters extends (0, common_1.JoyStructDecorated)({
-    stake: primitive_1.u128,
-    staking_account_id: common_1.AccountId,
+export class StakeParameters extends JoyStructDecorated({
+    stake: u128,
+    staking_account_id: AccountId,
 }) {
 }
-exports.StakeParameters = StakeParameters;
-class ApplyOnOpeningParameters extends (0, common_1.JoyStructDecorated)({
-    member_id: common_1.MemberId,
+export class ApplyOnOpeningParameters extends JoyStructDecorated({
+    member_id: MemberId,
     opening_id: OpeningId,
-    role_account_id: common_1.AccountId,
-    reward_account_id: common_1.AccountId,
-    description: types_1.Bytes,
+    role_account_id: AccountId,
+    reward_account_id: AccountId,
+    description: Bytes,
     stake_parameters: StakeParameters,
 }) {
 }
-exports.ApplyOnOpeningParameters = ApplyOnOpeningParameters;
-class Penalty extends (0, common_1.JoyStructDecorated)({
-    slashing_text: types_1.Text,
-    slashing_amount: primitive_1.u128,
+export class Penalty extends JoyStructDecorated({
+    slashing_text: Text,
+    slashing_amount: u128,
 }) {
 }
-exports.Penalty = Penalty;
-class OpeningType_Leader extends primitive_1.Null {
+export class OpeningType_Leader extends Null {
 }
-exports.OpeningType_Leader = OpeningType_Leader;
-class OpeningType_Regular extends primitive_1.Null {
+export class OpeningType_Regular extends Null {
 }
-exports.OpeningType_Regular = OpeningType_Regular;
-exports.OpeningTypeDef = {
+export const OpeningTypeDef = {
     Leader: OpeningType_Leader,
     Regular: OpeningType_Regular,
 };
-class OpeningType extends (0, common_1.JoyEnum)(exports.OpeningTypeDef) {
+export class OpeningType extends JoyEnum(OpeningTypeDef) {
 }
-exports.OpeningType = OpeningType;
-class Opening extends (0, common_1.JoyStructDecorated)({
+export class Opening extends JoyStructDecorated({
     opening_type: OpeningType,
-    created: primitive_1.u32,
-    description_hash: types_1.Bytes,
+    created: u32,
+    description_hash: Bytes,
     stake_policy: StakePolicy,
-    reward_per_block: types_1.Option.with(primitive_1.u128),
-    creation_stake: primitive_1.u128,
+    reward_per_block: Option.with(u128),
+    creation_stake: u128,
 }) {
 }
-exports.Opening = Opening;
 // Reward payment type enum.
-class RewardPaymentType extends (0, common_1.JoyEnum)({
-    MissedReward: primitive_1.Null,
-    RegularReward: primitive_1.Null,
+export class RewardPaymentType extends JoyEnum({
+    MissedReward: Null,
+    RegularReward: Null,
 }) {
 }
-exports.RewardPaymentType = RewardPaymentType;
-exports.workingGroupTypes = {
+export const workingGroupTypes = {
     ApplicationId,
     Application,
     ApplicationInfo,
@@ -138,4 +116,4 @@ exports.workingGroupTypes = {
     Penalty,
     RewardPaymentType,
 };
-exports.default = exports.workingGroupTypes;
+export default workingGroupTypes;
