diff --git a/JoyEnum.js b/JoyEnum.js
index 345fbd23f13a5cda7c99503856b015ae7faedaae..21419784031e9e6252c717659e585fb6de1bfdb8 100644
--- a/JoyEnum.js
+++ b/JoyEnum.js
@@ -1,11 +1,8 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.JoyEnum = void 0;
-const codec_1 = require("@polkadot/types/codec");
+import { Enum } from '@polkadot/types/codec';
 // Helper for creating extended Enum type with TS-compatible isOfType and asType helpers
-function JoyEnum(types) {
+export function JoyEnum(types) {
     var _a;
-    return _a = class JoyEnumObject extends codec_1.Enum.with(types) {
+    return _a = class JoyEnumObject extends Enum.with(types) {
             // eslint-disable-next-line no-useless-constructor
             constructor(registry, value, index) {
                 super(registry, value, index);
@@ -27,4 +24,3 @@ function JoyEnum(types) {
         _a.typeDefinitions = types,
         _a;
 }
-exports.JoyEnum = JoyEnum;
diff --git a/JoyStruct.js b/JoyStruct.js
index ddc9cc6a032a244d9d8a3dcf9bfb604a821caeaf..e1b6592beb400065c64d63a5f9458eaa363ec025 100644
--- a/JoyStruct.js
+++ b/JoyStruct.js
@@ -1,14 +1,11 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.JoyStructDecorated = exports.JoyStructCustom = void 0;
-const codec_1 = require("@polkadot/types/codec");
+import { Struct } from '@polkadot/types/codec';
 // Helper for creating extended Struct type with TS-compatible interface
 // It's called JoyStructCustom, because eventually we'd want to migrate all structs to JoyStructDecorated,
 // but the latter won't allow specifying getters that return different type than the original field type.
 // (ie. by using getString() instead of getField())
-function JoyStructCustom(fields) {
+export function JoyStructCustom(fields) {
     var _a;
-    return _a = class JoyStructObject extends codec_1.Struct.with(fields) {
+    return _a = class JoyStructObject extends Struct.with(fields) {
             // eslint-disable-next-line no-useless-constructor
             constructor(registry, value) {
                 super(registry, value);
@@ -32,10 +29,8 @@ function JoyStructCustom(fields) {
         _a.typeDefs = fields,
         _a;
 }
-exports.JoyStructCustom = JoyStructCustom;
 // JoyStruct enriched with typescript definitions for getters automatically added by polkadot-js
-function JoyStructDecorated(fields) {
+export function JoyStructDecorated(fields) {
     // We need to cast here because there's no way to make TS aware of getters added with Object.defineProperty
     return JoyStructCustom(fields);
 }
-exports.JoyStructDecorated = JoyStructDecorated;
diff --git a/augment/augment-api-errors.ts b/augment/augment-api-errors.ts
index 5bf9a8f924ac298d49c6b258b0bd4eb6e007be8a..0a0e455f766deb83d2e10f02376d28273a7ae23e 100644
--- a/augment/augment-api-errors.ts
+++ b/augment/augment-api-errors.ts
@@ -1686,6 +1686,10 @@ declare module '@polkadot/api/types/errors' {
        * Proposal cannot have an empty title"
        **/
       EmptyTitleProvided: AugmentedError<ApiType>;
+      /**
+       * Insufficient balance for operation.
+       **/
+      InsufficientBalance: AugmentedError<ApiType>;
       /**
        * Approval threshold cannot be zero
        **/
diff --git a/augment-codec/augment-api-errors.ts b/augment-codec/augment-api-errors.ts
index 5bf9a8f924ac298d49c6b258b0bd4eb6e007be8a..0a0e455f766deb83d2e10f02376d28273a7ae23e 100644
--- a/augment-codec/augment-api-errors.ts
+++ b/augment-codec/augment-api-errors.ts
@@ -1686,6 +1686,10 @@ declare module '@polkadot/api/types/errors' {
        * Proposal cannot have an empty title"
        **/
       EmptyTitleProvided: AugmentedError<ApiType>;
+      /**
+       * Insufficient balance for operation.
+       **/
+      InsufficientBalance: AugmentedError<ApiType>;
       /**
        * Approval threshold cannot be zero
        **/
diff --git a/common.js b/common.js
index be5b431dead4017f933b1f791e8ddc73db0ffbcb..2c46c0fa6c0ce5f6ae0a828f011c6d675658fc6e 100644
--- a/common.js
+++ b/common.js
@@ -1,61 +1,46 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.commonTypes = exports.LookupSource = exports.Address = exports.MemoText = exports.SlashingTerms = exports.UnslashableTerms = exports.SlashableTerms = exports.WorkingGroup = exports.WorkingGroupDef = exports.InputValidationLengthConstraint = exports.OptionText = exports.getOptionPropOrUndefined = exports.getBoolPropAsBoolean = exports.getTextPropAsString = exports.BlockAndTime = exports.Hash = exports.PostId = exports.ThreadId = exports.DAOId = exports.ChannelId = exports.Url = exports.JoyBTreeSet = exports.JoyStructDecorated = exports.JoyStructCustom = exports.JoyEnum = void 0;
-const types_1 = require("@polkadot/types");
-const util_1 = require("@polkadot/util");
+import { Option, Text, u16, u32, u64, Null, U8aFixed, BTreeSet } from '@polkadot/types';
+import { u8aConcat, u8aToHex, compactToU8a } from '@polkadot/util';
 // we get 'moment' because it is a dependency of @polkadot/util, via @polkadot/keyring
-const moment_1 = __importDefault(require("moment"));
-const JoyStruct_1 = require("./JoyStruct");
-Object.defineProperty(exports, "JoyStructCustom", { enumerable: true, get: function () { return JoyStruct_1.JoyStructCustom; } });
-Object.defineProperty(exports, "JoyStructDecorated", { enumerable: true, get: function () { return JoyStruct_1.JoyStructDecorated; } });
-const JoyEnum_1 = require("./JoyEnum");
-Object.defineProperty(exports, "JoyEnum", { enumerable: true, get: function () { return JoyEnum_1.JoyEnum; } });
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-function JoyBTreeSet(valType) {
-    return class extends types_1.BTreeSet.with(valType) {
+import moment from 'moment';
+import { JoyStructCustom, JoyStructDecorated } from './JoyStruct';
+import { JoyEnum } from './JoyEnum';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+export { JoyEnum, JoyStructCustom, JoyStructDecorated };
+export function JoyBTreeSet(valType) {
+    return class extends BTreeSet.with(valType) {
         toArray() {
             return Array.from(this);
         }
         toU8a(isBare) {
             const encoded = new Array();
             if (!isBare) {
-                encoded.push(util_1.compactToU8a(this.size));
+                encoded.push(compactToU8a(this.size));
             }
             const sorted = Array.from(this).sort((a, b) => (a.lt(b) ? -1 : 1));
             sorted.forEach((v) => {
                 encoded.push(v.toU8a(isBare));
             });
-            return util_1.u8aConcat(...encoded);
+            return u8aConcat(...encoded);
         }
         toHex() {
-            return util_1.u8aToHex(this.toU8a());
+            return u8aToHex(this.toU8a());
         }
     };
 }
-exports.JoyBTreeSet = JoyBTreeSet;
-class Url extends types_1.Text {
+export class Url extends Text {
 }
-exports.Url = Url;
-class ChannelId extends types_1.u64 {
+export class ChannelId extends u64 {
 }
-exports.ChannelId = ChannelId;
-class DAOId extends types_1.u64 {
+export class DAOId extends u64 {
 }
-exports.DAOId = DAOId;
 // common types between Forum and Proposal Discussions modules
-class ThreadId extends types_1.u64 {
+export class ThreadId extends u64 {
 }
-exports.ThreadId = ThreadId;
-class PostId extends types_1.u64 {
+export class PostId extends u64 {
 }
-exports.PostId = PostId;
-class Hash extends types_1.U8aFixed {
+export class Hash extends U8aFixed {
 }
-exports.Hash = Hash;
-class BlockAndTime extends JoyStruct_1.JoyStructDecorated({ block: types_1.u32, time: types_1.u64 }) {
+export class BlockAndTime extends JoyStructDecorated({ block: u32, time: u64 }) {
     get momentDate() {
         const YEAR_2000_MILLISECONDS = 946684801000;
         // overflowing in ~270,000 years
@@ -67,67 +52,54 @@ class BlockAndTime extends JoyStruct_1.JoyStructDecorated({ block: types_1.u32,
             // timestamp is in seconds
             timestampInMillis = timestamp * 1000;
         }
-        return moment_1.default(timestampInMillis);
+        return moment(timestampInMillis);
     }
 }
-exports.BlockAndTime = BlockAndTime;
-function getTextPropAsString(struct, fieldName) {
+export function getTextPropAsString(struct, fieldName) {
     return struct.get(fieldName).toString();
 }
-exports.getTextPropAsString = getTextPropAsString;
-function getBoolPropAsBoolean(struct, fieldName) {
+export function getBoolPropAsBoolean(struct, fieldName) {
     return struct.get(fieldName).valueOf();
 }
-exports.getBoolPropAsBoolean = getBoolPropAsBoolean;
-function getOptionPropOrUndefined(struct, fieldName) {
+export function getOptionPropOrUndefined(struct, fieldName) {
     return struct.get(fieldName).unwrapOr(undefined);
 }
-exports.getOptionPropOrUndefined = getOptionPropOrUndefined;
-class OptionText extends types_1.Option.with(types_1.Text) {
+export class OptionText extends Option.with(Text) {
 }
-exports.OptionText = OptionText;
-class InputValidationLengthConstraint extends JoyStruct_1.JoyStructDecorated({ min: types_1.u16, max_min_diff: types_1.u16 }) {
+export class InputValidationLengthConstraint extends JoyStructDecorated({ min: u16, max_min_diff: u16 }) {
     get max() {
         return this.registry.createType('u16', this.min.add(this.max_min_diff));
     }
 }
-exports.InputValidationLengthConstraint = InputValidationLengthConstraint;
-exports.WorkingGroupDef = {
-    Storage: types_1.Null,
-    Content: types_1.Null,
-    Operations: types_1.Null,
-    Gateway: types_1.Null,
+export const WorkingGroupDef = {
+    Storage: Null,
+    Content: Null,
+    Operations: Null,
+    Gateway: Null,
 };
-class WorkingGroup extends JoyEnum_1.JoyEnum(exports.WorkingGroupDef) {
+export class WorkingGroup extends JoyEnum(WorkingGroupDef) {
 }
-exports.WorkingGroup = WorkingGroup;
-class SlashableTerms extends JoyStruct_1.JoyStructDecorated({
-    max_count: types_1.u16,
-    max_percent_pts_per_time: types_1.u16,
+export class SlashableTerms extends JoyStructDecorated({
+    max_count: u16,
+    max_percent_pts_per_time: u16,
 }) {
 }
-exports.SlashableTerms = SlashableTerms;
-class UnslashableTerms extends types_1.Null {
+export class UnslashableTerms extends Null {
 }
-exports.UnslashableTerms = UnslashableTerms;
-class SlashingTerms extends JoyEnum_1.JoyEnum({
+export class SlashingTerms extends JoyEnum({
     Unslashable: UnslashableTerms,
     Slashable: SlashableTerms,
 }) {
 }
-exports.SlashingTerms = SlashingTerms;
-class MemoText extends types_1.Text {
+export class MemoText extends Text {
 }
-exports.MemoText = MemoText;
 // @polkadot/types overrides required since migration to Substrate 2.0,
 // see: https://polkadot.js.org/api/start/FAQ.html#the-node-returns-a-could-not-convert-error-on-send
-class Address extends AccountId_1.GenericAccountId {
+export class Address extends AccountId {
 }
-exports.Address = Address;
-class LookupSource extends AccountId_1.GenericAccountId {
+export class LookupSource extends AccountId {
 }
-exports.LookupSource = LookupSource;
-exports.commonTypes = {
+export const commonTypes = {
     BlockAndTime,
     ThreadId,
     PostId,
@@ -143,4 +115,4 @@ exports.commonTypes = {
     DAOId,
     Url,
 };
-exports.default = exports.commonTypes;
+export default commonTypes;
diff --git a/content/index.js b/content/index.js
index 8ba7341d6cac6375379d21c4ba7bb4ab3e9be83d..0818145558929d9506856d3e22a5df770a8ad5d4 100644
--- a/content/index.js
+++ b/content/index.js
@@ -1,228 +1,184 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.contentTypes = exports.PersonActor = exports.PersonUpdateParameters = exports.PersonCreationParameters = exports.Person = exports.PersonController = exports.SeriesParameters = exports.Series = exports.SeasonParameters = exports.Season = exports.EpisodeParemters = exports.PlaylistUpdateParameters = exports.PlaylistCreationParameters = exports.Playlist = exports.VideoUpdateParameters = exports.VideoCreationParameters = exports.Video = exports.VideoCategoryUpdateParameters = exports.VideoCategoryCreationParameters = exports.VideoCategory = exports.ChannelCategoryUpdateParameters = exports.ChannelCategoryCreationParameters = exports.ChannelCategory = exports.ChannelOwnershipTransferRequest = exports.ChannelUpdateParameters = exports.ChannelCreationParameters = exports.Channel = exports.ChannelOwner = exports.ContentActor = exports.CuratorGroup = exports.NewAsset = exports.IsCensored = exports.MaxNumber = exports.ChannelOwnershipTransferRequestId = exports.SeriesId = exports.PersonId = exports.PlaylistId = exports.VideoCategoryId = exports.VideoId = exports.ChannelCategoryId = exports.CuratorGroupId = exports.CuratorId = void 0;
-const types_1 = require("@polkadot/types");
-const primitive_1 = require("@polkadot/types/primitive");
-const members_1 = require("../members");
-const common_1 = require("../common");
-const storage_1 = require("../storage");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-class CuratorId extends primitive_1.u64 {
+import { Vec, Option, Tuple } from '@polkadot/types';
+import { bool, u64, u32, u128, Null, Bytes } from '@polkadot/types/primitive';
+import { MemberId } from '../members';
+import { JoyStructDecorated, JoyEnum, ChannelId, JoyBTreeSet, DAOId, Url } from '../common';
+import { ContentParameters } from '../storage';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+export class CuratorId extends u64 {
 }
-exports.CuratorId = CuratorId;
-class CuratorGroupId extends primitive_1.u64 {
+export class CuratorGroupId extends u64 {
 }
-exports.CuratorGroupId = CuratorGroupId;
-class ChannelCategoryId extends primitive_1.u64 {
+export class ChannelCategoryId extends u64 {
 }
-exports.ChannelCategoryId = ChannelCategoryId;
-class VideoId extends primitive_1.u64 {
+export class VideoId extends u64 {
 }
-exports.VideoId = VideoId;
-class VideoCategoryId extends primitive_1.u64 {
+export class VideoCategoryId extends u64 {
 }
-exports.VideoCategoryId = VideoCategoryId;
-class PlaylistId extends primitive_1.u64 {
+export class PlaylistId extends u64 {
 }
-exports.PlaylistId = PlaylistId;
-class PersonId extends primitive_1.u64 {
+export class PersonId extends u64 {
 }
-exports.PersonId = PersonId;
-class SeriesId extends primitive_1.u64 {
+export class SeriesId extends u64 {
 }
-exports.SeriesId = SeriesId;
-class ChannelOwnershipTransferRequestId extends primitive_1.u64 {
+export class ChannelOwnershipTransferRequestId extends u64 {
 }
-exports.ChannelOwnershipTransferRequestId = ChannelOwnershipTransferRequestId;
-class MaxNumber extends primitive_1.u32 {
+export class MaxNumber extends u32 {
 }
-exports.MaxNumber = MaxNumber;
-class IsCensored extends primitive_1.bool {
+export class IsCensored extends bool {
 }
-exports.IsCensored = IsCensored;
-class NewAsset extends common_1.JoyEnum({
-    Upload: storage_1.ContentParameters,
-    Urls: types_1.Vec.with(common_1.Url),
+export class NewAsset extends JoyEnum({
+    Upload: ContentParameters,
+    Urls: Vec.with(Url),
 }) {
 }
-exports.NewAsset = NewAsset;
-class CuratorGroup extends common_1.JoyStructDecorated({
-    curators: common_1.JoyBTreeSet(CuratorId),
-    active: primitive_1.bool,
+export class CuratorGroup extends JoyStructDecorated({
+    curators: JoyBTreeSet(CuratorId),
+    active: bool,
 }) {
 }
-exports.CuratorGroup = CuratorGroup;
-class ContentActor extends common_1.JoyEnum({
-    Curator: types_1.Tuple.with([CuratorGroupId, CuratorId]),
-    Member: members_1.MemberId,
-    Lead: primitive_1.Null,
+export class ContentActor extends JoyEnum({
+    Curator: Tuple.with([CuratorGroupId, CuratorId]),
+    Member: MemberId,
+    Lead: Null,
 }) {
 }
-exports.ContentActor = ContentActor;
-class ChannelOwner extends common_1.JoyEnum({
-    Member: members_1.MemberId,
+export class ChannelOwner extends JoyEnum({
+    Member: MemberId,
     Curators: CuratorGroupId,
-    Dao: common_1.DAOId,
+    Dao: DAOId,
 }) {
 }
-exports.ChannelOwner = ChannelOwner;
-class Channel extends common_1.JoyStructDecorated({
+export class Channel extends JoyStructDecorated({
     owner: ChannelOwner,
-    videos: types_1.Vec.with(VideoId),
-    playlists: types_1.Vec.with(PlaylistId),
-    series: types_1.Vec.with(SeriesId),
-    is_censored: primitive_1.bool,
-    reward_account: types_1.Option.with(AccountId_1.GenericAccountId),
+    videos: Vec.with(VideoId),
+    playlists: Vec.with(PlaylistId),
+    series: Vec.with(SeriesId),
+    is_censored: bool,
+    reward_account: Option.with(AccountId),
 }) {
 }
-exports.Channel = Channel;
-class ChannelCreationParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Vec.with(NewAsset),
-    meta: primitive_1.Bytes,
-    reward_account: types_1.Option.with(AccountId_1.GenericAccountId),
+export class ChannelCreationParameters extends JoyStructDecorated({
+    assets: Vec.with(NewAsset),
+    meta: Bytes,
+    reward_account: Option.with(AccountId),
 }) {
 }
-exports.ChannelCreationParameters = ChannelCreationParameters;
-class ChannelUpdateParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Option.with(types_1.Vec.with(NewAsset)),
-    new_meta: types_1.Option.with(primitive_1.Bytes),
-    reward_account: types_1.Option.with(types_1.Option.with(AccountId_1.GenericAccountId)),
+export class ChannelUpdateParameters extends JoyStructDecorated({
+    assets: Option.with(Vec.with(NewAsset)),
+    new_meta: Option.with(Bytes),
+    reward_account: Option.with(Option.with(AccountId)),
 }) {
 }
-exports.ChannelUpdateParameters = ChannelUpdateParameters;
-class ChannelOwnershipTransferRequest extends common_1.JoyStructDecorated({
-    channel_id: common_1.ChannelId,
+export class ChannelOwnershipTransferRequest extends JoyStructDecorated({
+    channel_id: ChannelId,
     new_owner: ChannelOwner,
-    payment: primitive_1.u128,
-    new_reward_account: types_1.Option.with(AccountId_1.GenericAccountId),
+    payment: u128,
+    new_reward_account: Option.with(AccountId),
 }) {
 }
-exports.ChannelOwnershipTransferRequest = ChannelOwnershipTransferRequest;
-class ChannelCategory extends common_1.JoyStructDecorated({
+export class ChannelCategory extends JoyStructDecorated({
 // No runtime information is currently stored for a Category.
 }) {
 }
-exports.ChannelCategory = ChannelCategory;
-class ChannelCategoryCreationParameters extends common_1.JoyStructDecorated({
-    meta: primitive_1.Bytes,
+export class ChannelCategoryCreationParameters extends JoyStructDecorated({
+    meta: Bytes,
 }) {
 }
-exports.ChannelCategoryCreationParameters = ChannelCategoryCreationParameters;
-class ChannelCategoryUpdateParameters extends common_1.JoyStructDecorated({
-    new_meta: primitive_1.Bytes,
+export class ChannelCategoryUpdateParameters extends JoyStructDecorated({
+    new_meta: Bytes,
 }) {
 }
-exports.ChannelCategoryUpdateParameters = ChannelCategoryUpdateParameters;
-class VideoCategory extends common_1.JoyStructDecorated({
+export class VideoCategory extends JoyStructDecorated({
 // No runtime information is currently stored for a Category.
 }) {
 }
-exports.VideoCategory = VideoCategory;
-class VideoCategoryCreationParameters extends common_1.JoyStructDecorated({
-    meta: primitive_1.Bytes,
+export class VideoCategoryCreationParameters extends JoyStructDecorated({
+    meta: Bytes,
 }) {
 }
-exports.VideoCategoryCreationParameters = VideoCategoryCreationParameters;
-class VideoCategoryUpdateParameters extends common_1.JoyStructDecorated({
-    new_meta: primitive_1.Bytes,
+export class VideoCategoryUpdateParameters extends JoyStructDecorated({
+    new_meta: Bytes,
 }) {
 }
-exports.VideoCategoryUpdateParameters = VideoCategoryUpdateParameters;
-class Video extends common_1.JoyStructDecorated({
-    in_channel: common_1.ChannelId,
-    in_series: types_1.Option.with(SeriesId),
-    is_censored: primitive_1.bool,
+export class Video extends JoyStructDecorated({
+    in_channel: ChannelId,
+    in_series: Option.with(SeriesId),
+    is_censored: bool,
 }) {
 }
-exports.Video = Video;
-class VideoCreationParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Vec.with(NewAsset),
-    meta: primitive_1.Bytes,
+export class VideoCreationParameters extends JoyStructDecorated({
+    assets: Vec.with(NewAsset),
+    meta: Bytes,
 }) {
 }
-exports.VideoCreationParameters = VideoCreationParameters;
-class VideoUpdateParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Option.with(types_1.Vec.with(NewAsset)),
-    new_meta: types_1.Option.with(primitive_1.Bytes),
+export class VideoUpdateParameters extends JoyStructDecorated({
+    assets: Option.with(Vec.with(NewAsset)),
+    new_meta: Option.with(Bytes),
 }) {
 }
-exports.VideoUpdateParameters = VideoUpdateParameters;
-class Playlist extends common_1.JoyStructDecorated({
-    in_channel: common_1.ChannelId,
+export class Playlist extends JoyStructDecorated({
+    in_channel: ChannelId,
 }) {
 }
-exports.Playlist = Playlist;
-class PlaylistCreationParameters extends common_1.JoyStructDecorated({
-    meta: primitive_1.Bytes,
+export class PlaylistCreationParameters extends JoyStructDecorated({
+    meta: Bytes,
 }) {
 }
-exports.PlaylistCreationParameters = PlaylistCreationParameters;
-class PlaylistUpdateParameters extends common_1.JoyStructDecorated({
-    new_meta: primitive_1.Bytes,
+export class PlaylistUpdateParameters extends JoyStructDecorated({
+    new_meta: Bytes,
 }) {
 }
-exports.PlaylistUpdateParameters = PlaylistUpdateParameters;
-class EpisodeParemters extends common_1.JoyEnum({
+export class EpisodeParemters extends JoyEnum({
     NewVideo: VideoCreationParameters,
     ExistingVideo: VideoId,
 }) {
 }
-exports.EpisodeParemters = EpisodeParemters;
-class Season extends common_1.JoyStructDecorated({
-    episodes: types_1.Vec.with(VideoId),
+export class Season extends JoyStructDecorated({
+    episodes: Vec.with(VideoId),
 }) {
 }
-exports.Season = Season;
-class SeasonParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Option.with(types_1.Vec.with(NewAsset)),
-    episodes: types_1.Option.with(types_1.Vec.with(types_1.Option.with(EpisodeParemters))),
-    meta: types_1.Option.with(primitive_1.Bytes),
+export class SeasonParameters extends JoyStructDecorated({
+    assets: Option.with(Vec.with(NewAsset)),
+    episodes: Option.with(Vec.with(Option.with(EpisodeParemters))),
+    meta: Option.with(Bytes),
 }) {
 }
-exports.SeasonParameters = SeasonParameters;
-class Series extends common_1.JoyStructDecorated({
-    in_channel: common_1.ChannelId,
-    seasons: types_1.Vec.with(Season),
+export class Series extends JoyStructDecorated({
+    in_channel: ChannelId,
+    seasons: Vec.with(Season),
 }) {
 }
-exports.Series = Series;
-class SeriesParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Option.with(types_1.Vec.with(NewAsset)),
-    seasons: types_1.Option.with(types_1.Vec.with(types_1.Option.with(SeasonParameters))),
-    meta: types_1.Option.with(primitive_1.Bytes),
+export class SeriesParameters extends JoyStructDecorated({
+    assets: Option.with(Vec.with(NewAsset)),
+    seasons: Option.with(Vec.with(Option.with(SeasonParameters))),
+    meta: Option.with(Bytes),
 }) {
 }
-exports.SeriesParameters = SeriesParameters;
-class PersonController extends common_1.JoyEnum({
-    Member: members_1.MemberId,
-    Curators: primitive_1.Null,
+export class PersonController extends JoyEnum({
+    Member: MemberId,
+    Curators: Null,
 }) {
 }
-exports.PersonController = PersonController;
-class Person extends common_1.JoyStructDecorated({
+export class Person extends JoyStructDecorated({
     controlled_by: PersonController,
 }) {
 }
-exports.Person = Person;
-class PersonCreationParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Vec.with(NewAsset),
-    meta: primitive_1.Bytes,
+export class PersonCreationParameters extends JoyStructDecorated({
+    assets: Vec.with(NewAsset),
+    meta: Bytes,
 }) {
 }
-exports.PersonCreationParameters = PersonCreationParameters;
-class PersonUpdateParameters extends common_1.JoyStructDecorated({
-    assets: types_1.Option.with(types_1.Vec.with(NewAsset)),
-    meta: types_1.Option.with(primitive_1.Bytes),
+export class PersonUpdateParameters extends JoyStructDecorated({
+    assets: Option.with(Vec.with(NewAsset)),
+    meta: Option.with(Bytes),
 }) {
 }
-exports.PersonUpdateParameters = PersonUpdateParameters;
-class PersonActor extends common_1.JoyEnum({
-    Member: members_1.MemberId,
+export class PersonActor extends JoyEnum({
+    Member: MemberId,
     Curator: CuratorId,
 }) {
 }
-exports.PersonActor = PersonActor;
-exports.contentTypes = {
+export const contentTypes = {
     CuratorId,
     CuratorGroupId,
     CuratorGroup,
@@ -265,4 +221,4 @@ exports.contentTypes = {
     MaxNumber,
     IsCensored,
 };
-exports.default = exports.contentTypes;
+export default contentTypes;
diff --git a/content-directory/index.d.ts b/content-directory/index.d.ts
deleted file mode 100644
index 00a0dd4cc22ea3ef330a5dcc1ed81a4936cb5369..0000000000000000000000000000000000000000
--- a/content-directory/index.d.ts
+++ /dev/null
@@ -1,351 +0,0 @@
-import { Option, Tuple, Text, Vec } from '@polkadot/types';
-import { bool, u64, u32, u16, i16, i32, i64, Null } from '@polkadot/types/primitive';
-import { MemberId } from '../members';
-import { Hash } from '../common';
-export declare class Nonce extends u64 {
-}
-export declare class EntityId extends u64 {
-}
-export declare class ClassId extends u64 {
-}
-export declare class CuratorId extends u64 {
-}
-export declare class CuratorGroupId extends u64 {
-}
-export declare class VecMaxLength extends u16 {
-}
-export declare class TextMaxLength extends u16 {
-}
-declare const HashedTextMaxLength_base: import("@polkadot/types/types").Constructor<Option<u16>>;
-export declare class HashedTextMaxLength extends HashedTextMaxLength_base {
-}
-export declare class PropertyId extends u16 {
-}
-export declare class SchemaId extends u16 {
-}
-export declare class SameController extends bool {
-}
-declare const ClassPermissions_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    any_member: typeof bool;
-    entity_creation_blocked: typeof bool;
-    all_entity_property_values_locked: typeof bool;
-    maintainers: import("@polkadot/types/types").Constructor<import("../common").ExtendedBTreeSet<CuratorGroupId>>;
-}>;
-export declare class ClassPermissions extends ClassPermissions_base {
-}
-declare const PropertyTypeSingle_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Bool: typeof Null;
-    Uint16: typeof Null;
-    Uint32: typeof Null;
-    Uint64: typeof Null;
-    Int16: typeof Null;
-    Int32: typeof Null;
-    Int64: typeof Null;
-    Text: typeof TextMaxLength;
-    Hash: typeof HashedTextMaxLength;
-    Reference: import("@polkadot/types/types").Constructor<Tuple>;
-}>;
-export declare class PropertyTypeSingle extends PropertyTypeSingle_base {
-}
-declare const PropertyTypeVector_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    vec_type: typeof PropertyTypeSingle;
-    max_length: typeof VecMaxLength;
-}>;
-export declare class PropertyTypeVector extends PropertyTypeVector_base {
-}
-declare const PropertyType_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Single: typeof PropertyTypeSingle;
-    Vector: typeof PropertyTypeVector;
-}>;
-export declare class PropertyType extends PropertyType_base {
-    get subtype(): "Bool" | "Hash" | "Text" | "Uint16" | "Uint32" | "Uint64" | "Int16" | "Int32" | "Int64" | "Reference";
-    toInputPropertyValue(value: any): InputPropertyValue;
-}
-declare const PropertyLockingPolicy_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    is_locked_from_maintainer: typeof bool;
-    is_locked_from_controller: typeof bool;
-}>;
-export declare class PropertyLockingPolicy extends PropertyLockingPolicy_base {
-}
-declare const Property_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    property_type: typeof PropertyType;
-    required: typeof bool;
-    unique: typeof bool;
-    name: typeof Text;
-    description: typeof Text;
-    locking_policy: typeof PropertyLockingPolicy;
-}>;
-export declare class Property extends Property_base {
-}
-declare const Schema_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    properties: import("@polkadot/types/types").Constructor<import("../common").ExtendedBTreeSet<PropertyId>>;
-    is_active: typeof bool;
-}>;
-export declare class Schema extends Schema_base {
-}
-declare const Class_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    class_permissions: typeof ClassPermissions;
-    properties: import("@polkadot/types/types").Constructor<Vec<Property>>;
-    schemas: import("@polkadot/types/types").Constructor<Vec<Schema>>;
-    name: typeof Text;
-    description: typeof Text;
-    maximum_entities_count: typeof EntityId;
-    current_number_of_entities: typeof EntityId;
-    default_entity_creation_voucher_upper_bound: typeof EntityId;
-}>;
-export declare class Class extends Class_base {
-}
-declare const EntityController_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Maintainers: typeof Null;
-    Member: typeof MemberId;
-    Lead: typeof Null;
-}>;
-export declare class EntityController extends EntityController_base {
-}
-declare const EntityPermissions_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    controller: typeof EntityController;
-    frozen: typeof bool;
-    referenceable: typeof bool;
-}>;
-export declare class EntityPermissions extends EntityPermissions_base {
-}
-declare const StoredValue_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Bool: typeof bool;
-    Uint16: typeof u16;
-    Uint32: typeof u32;
-    Uint64: typeof u64;
-    Int16: typeof i16;
-    Int32: typeof i32;
-    Int64: typeof i64;
-    Text: typeof Text;
-    Hash: typeof Hash;
-    Reference: typeof EntityId;
-}>;
-export declare class StoredValue extends StoredValue_base {
-}
-declare const VecStoredValue_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Bool: import("@polkadot/types/types").Constructor<Vec<bool>>;
-    Uint16: import("@polkadot/types/types").Constructor<Vec<u16>>;
-    Uint32: import("@polkadot/types/types").Constructor<Vec<u32>>;
-    Uint64: import("@polkadot/types/types").Constructor<Vec<u64>>;
-    Int16: import("@polkadot/types/types").Constructor<Vec<i16>>;
-    Int32: import("@polkadot/types/types").Constructor<Vec<i32>>;
-    Int64: import("@polkadot/types/types").Constructor<Vec<i64>>;
-    Hash: import("@polkadot/types/types").Constructor<Vec<Hash>>;
-    Text: import("@polkadot/types/types").Constructor<Vec<Text>>;
-    Reference: import("@polkadot/types/types").Constructor<Vec<EntityId>>;
-}>;
-export declare class VecStoredValue extends VecStoredValue_base {
-}
-declare const VecStoredPropertyValue_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    vec_value: typeof VecStoredValue;
-    nonce: typeof Nonce;
-}>;
-export declare class VecStoredPropertyValue extends VecStoredPropertyValue_base {
-}
-declare const StoredPropertyValue_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Single: typeof StoredValue;
-    Vector: typeof VecStoredPropertyValue;
-}>;
-export declare class StoredPropertyValue extends StoredPropertyValue_base {
-    get subtype(): "Bool" | "Hash" | "Text" | "Uint16" | "Uint32" | "Uint64" | "Int16" | "Int32" | "Int64" | "Reference";
-    getValue(): import("@polkadot/types/types").Codec;
-}
-declare const InboundReferenceCounter_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    total: typeof u32;
-    same_owner: typeof u32;
-}>;
-export declare class InboundReferenceCounter extends InboundReferenceCounter_base {
-}
-declare const Entity_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    entity_permissions: typeof EntityPermissions;
-    class_id: typeof ClassId;
-    supported_schemas: import("@polkadot/types/types").Constructor<import("../common").ExtendedBTreeSet<SchemaId>>;
-    values: import("@polkadot/types/types").Constructor<import("@polkadot/types").CodecMap<PropertyId, StoredPropertyValue>>;
-    reference_counter: typeof InboundReferenceCounter;
-}>;
-export declare class Entity extends Entity_base {
-}
-declare const CuratorGroup_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    curators: import("@polkadot/types/types").Constructor<import("../common").ExtendedBTreeSet<CuratorId>>;
-    active: typeof bool;
-    number_of_classes_maintained: typeof u32;
-}>;
-export declare class CuratorGroup extends CuratorGroup_base {
-}
-declare const EntityCreationVoucher_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    maximum_entities_count: typeof EntityId;
-    entities_created: typeof EntityId;
-}>;
-export declare class EntityCreationVoucher extends EntityCreationVoucher_base {
-}
-declare const Actor_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Curator: import("@polkadot/types/types").Constructor<Tuple>;
-    Member: typeof MemberId;
-    Lead: typeof Null;
-}>;
-export declare class Actor extends Actor_base {
-}
-declare const EntityReferenceCounterSideEffect_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    total: typeof i32;
-    same_owner: typeof i32;
-}>;
-export declare class EntityReferenceCounterSideEffect extends EntityReferenceCounterSideEffect_base {
-}
-declare const ReferenceCounterSideEffects_base: import("@polkadot/types/types").Constructor<import("@polkadot/types").CodecMap<EntityId, EntityReferenceCounterSideEffect>>;
-export declare class ReferenceCounterSideEffects extends ReferenceCounterSideEffects_base {
-}
-declare const SideEffects_base: import("@polkadot/types/types").Constructor<Option<ReferenceCounterSideEffects>>;
-export declare class SideEffects extends SideEffects_base {
-}
-declare const SideEffect_base: import("@polkadot/types/types").Constructor<Option<Tuple>>;
-export declare class SideEffect extends SideEffect_base {
-}
-export declare class Status extends bool {
-}
-declare const InputValue_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Bool: typeof bool;
-    Uint16: typeof u16;
-    Uint32: typeof u32;
-    Uint64: typeof u64;
-    Int16: typeof i16;
-    Int32: typeof i32;
-    Int64: typeof i64;
-    Text: typeof Text;
-    TextToHash: typeof Text;
-    Reference: typeof EntityId;
-}>;
-export declare class InputValue extends InputValue_base {
-}
-declare const VecInputValue_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Bool: import("@polkadot/types/types").Constructor<Vec<bool>>;
-    Uint16: import("@polkadot/types/types").Constructor<Vec<u16>>;
-    Uint32: import("@polkadot/types/types").Constructor<Vec<u32>>;
-    Uint64: import("@polkadot/types/types").Constructor<Vec<u64>>;
-    Int16: import("@polkadot/types/types").Constructor<Vec<i16>>;
-    Int32: import("@polkadot/types/types").Constructor<Vec<i32>>;
-    Int64: import("@polkadot/types/types").Constructor<Vec<i64>>;
-    TextToHash: import("@polkadot/types/types").Constructor<Vec<Text>>;
-    Text: import("@polkadot/types/types").Constructor<Vec<Text>>;
-    Reference: import("@polkadot/types/types").Constructor<Vec<EntityId>>;
-}>;
-export declare class VecInputValue extends VecInputValue_base {
-}
-declare const InputPropertyValue_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Single: typeof InputValue;
-    Vector: typeof VecInputValue;
-}>;
-export declare class InputPropertyValue extends InputPropertyValue_base {
-}
-declare const ParameterizedEntity_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    InternalEntityJustAdded: typeof u32;
-    ExistingEntity: typeof EntityId;
-}>;
-export declare class ParameterizedEntity extends ParameterizedEntity_base {
-}
-declare const ParametrizedPropertyValue_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    InputPropertyValue: typeof InputPropertyValue;
-    InternalEntityJustAdded: typeof u32;
-    InternalEntityVec: import("@polkadot/types/types").Constructor<Vec<ParameterizedEntity>>;
-}>;
-export declare class ParametrizedPropertyValue extends ParametrizedPropertyValue_base {
-}
-declare const ParametrizedClassPropertyValue_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    in_class_index: typeof PropertyId;
-    value: typeof ParametrizedPropertyValue;
-}>;
-export declare class ParametrizedClassPropertyValue extends ParametrizedClassPropertyValue_base {
-}
-declare const CreateEntityOperation_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    class_id: typeof ClassId;
-}>;
-export declare class CreateEntityOperation extends CreateEntityOperation_base {
-}
-declare const UpdatePropertyValuesOperation_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    entity_id: typeof ParameterizedEntity;
-    new_parametrized_property_values: import("@polkadot/types/types").Constructor<Vec<ParametrizedClassPropertyValue>>;
-}>;
-export declare class UpdatePropertyValuesOperation extends UpdatePropertyValuesOperation_base {
-}
-declare const AddSchemaSupportToEntityOperation_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    entity_id: typeof ParameterizedEntity;
-    schema_id: typeof SchemaId;
-    parametrized_property_values: import("@polkadot/types/types").Constructor<Vec<ParametrizedClassPropertyValue>>;
-}>;
-export declare class AddSchemaSupportToEntityOperation extends AddSchemaSupportToEntityOperation_base {
-}
-declare const OperationType_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    CreateEntity: typeof CreateEntityOperation;
-    UpdatePropertyValues: typeof UpdatePropertyValuesOperation;
-    AddSchemaSupportToEntity: typeof AddSchemaSupportToEntityOperation;
-}>;
-export declare class OperationType extends OperationType_base {
-}
-export declare class ClassPermissionsType extends Null {
-}
-export declare class ClassPropertyValue extends Null {
-}
-export declare class Operation extends Null {
-}
-export declare class ReferenceConstraint extends Null {
-}
-declare const InputEntityValuesMap_base: import("@polkadot/types/types").Constructor<import("@polkadot/types").CodecMap<PropertyId, InputPropertyValue>>;
-export declare class InputEntityValuesMap extends InputEntityValuesMap_base {
-}
-export declare class FailedAt extends u32 {
-}
-export declare const contentDirectoryTypes: {
-    Nonce: typeof Nonce;
-    EntityId: typeof EntityId;
-    ClassId: typeof ClassId;
-    CuratorGroupId: typeof CuratorGroupId;
-    VecMaxLength: typeof VecMaxLength;
-    TextMaxLength: typeof TextMaxLength;
-    HashedTextMaxLength: typeof HashedTextMaxLength;
-    PropertyId: typeof PropertyId;
-    SchemaId: typeof SchemaId;
-    SameController: typeof SameController;
-    ClassPermissions: typeof ClassPermissions;
-    PropertyTypeSingle: typeof PropertyTypeSingle;
-    PropertyTypeVector: typeof PropertyTypeVector;
-    PropertyType: typeof PropertyType;
-    PropertyLockingPolicy: typeof PropertyLockingPolicy;
-    Property: typeof Property;
-    Schema: typeof Schema;
-    Class: typeof Class;
-    ClassOf: typeof Class;
-    EntityController: typeof EntityController;
-    EntityPermissions: typeof EntityPermissions;
-    StoredValue: typeof StoredValue;
-    VecStoredValue: typeof VecStoredValue;
-    VecStoredPropertyValue: typeof VecStoredPropertyValue;
-    StoredPropertyValue: typeof StoredPropertyValue;
-    InboundReferenceCounter: typeof InboundReferenceCounter;
-    Entity: typeof Entity;
-    EntityOf: typeof Entity;
-    CuratorGroup: typeof CuratorGroup;
-    EntityCreationVoucher: typeof EntityCreationVoucher;
-    Actor: typeof Actor;
-    EntityReferenceCounterSideEffect: typeof EntityReferenceCounterSideEffect;
-    ReferenceCounterSideEffects: typeof ReferenceCounterSideEffects;
-    SideEffects: typeof SideEffects;
-    SideEffect: typeof SideEffect;
-    Status: typeof Status;
-    InputValue: typeof InputValue;
-    VecInputValue: typeof VecInputValue;
-    InputPropertyValue: typeof InputPropertyValue;
-    ParameterizedEntity: typeof ParameterizedEntity;
-    ParametrizedPropertyValue: typeof ParametrizedPropertyValue;
-    ParametrizedClassPropertyValue: typeof ParametrizedClassPropertyValue;
-    CreateEntityOperation: typeof CreateEntityOperation;
-    UpdatePropertyValuesOperation: typeof UpdatePropertyValuesOperation;
-    AddSchemaSupportToEntityOperation: typeof AddSchemaSupportToEntityOperation;
-    OperationType: typeof OperationType;
-    InputEntityValuesMap: typeof InputEntityValuesMap;
-    ClassPermissionsType: typeof ClassPermissionsType;
-    ClassPropertyValue: typeof ClassPropertyValue;
-    Operation: typeof Operation;
-    ReferenceConstraint: typeof ReferenceConstraint;
-    FailedAt: typeof FailedAt;
-};
-export default contentDirectoryTypes;
diff --git a/content-directory/index.js b/content-directory/index.js
deleted file mode 100644
index 7632d0f948181ed8838cc2595435b34cc354d68f..0000000000000000000000000000000000000000
--- a/content-directory/index.js
+++ /dev/null
@@ -1,393 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.contentDirectoryTypes = exports.FailedAt = exports.InputEntityValuesMap = exports.ReferenceConstraint = exports.Operation = exports.ClassPropertyValue = exports.ClassPermissionsType = exports.OperationType = exports.AddSchemaSupportToEntityOperation = exports.UpdatePropertyValuesOperation = exports.CreateEntityOperation = exports.ParametrizedClassPropertyValue = exports.ParametrizedPropertyValue = exports.ParameterizedEntity = exports.InputPropertyValue = exports.VecInputValue = exports.InputValue = exports.Status = exports.SideEffect = exports.SideEffects = exports.ReferenceCounterSideEffects = exports.EntityReferenceCounterSideEffect = exports.Actor = exports.EntityCreationVoucher = exports.CuratorGroup = exports.Entity = exports.InboundReferenceCounter = exports.StoredPropertyValue = exports.VecStoredPropertyValue = exports.VecStoredValue = exports.StoredValue = exports.EntityPermissions = exports.EntityController = exports.Class = exports.Schema = exports.Property = exports.PropertyLockingPolicy = exports.PropertyType = exports.PropertyTypeVector = exports.PropertyTypeSingle = exports.ClassPermissions = exports.SameController = exports.SchemaId = exports.PropertyId = exports.HashedTextMaxLength = exports.TextMaxLength = exports.VecMaxLength = exports.CuratorGroupId = exports.CuratorId = exports.ClassId = exports.EntityId = exports.Nonce = void 0;
-const types_1 = require("@polkadot/types");
-const primitive_1 = require("@polkadot/types/primitive");
-const members_1 = require("../members");
-const common_1 = require("../common");
-class Nonce extends primitive_1.u64 {
-}
-exports.Nonce = Nonce;
-class EntityId extends primitive_1.u64 {
-}
-exports.EntityId = EntityId;
-class ClassId extends primitive_1.u64 {
-}
-exports.ClassId = ClassId;
-class CuratorId extends primitive_1.u64 {
-}
-exports.CuratorId = CuratorId;
-class CuratorGroupId extends primitive_1.u64 {
-}
-exports.CuratorGroupId = CuratorGroupId;
-class VecMaxLength extends primitive_1.u16 {
-}
-exports.VecMaxLength = VecMaxLength;
-class TextMaxLength extends primitive_1.u16 {
-}
-exports.TextMaxLength = TextMaxLength;
-class HashedTextMaxLength extends types_1.Option.with(primitive_1.u16) {
-}
-exports.HashedTextMaxLength = HashedTextMaxLength;
-class PropertyId extends primitive_1.u16 {
-}
-exports.PropertyId = PropertyId;
-class SchemaId extends primitive_1.u16 {
-}
-exports.SchemaId = SchemaId;
-class SameController extends primitive_1.bool {
-}
-exports.SameController = SameController;
-class ClassPermissions extends common_1.JoyStructDecorated({
-    any_member: primitive_1.bool,
-    entity_creation_blocked: primitive_1.bool,
-    all_entity_property_values_locked: primitive_1.bool,
-    maintainers: common_1.JoyBTreeSet(CuratorGroupId),
-}) {
-}
-exports.ClassPermissions = ClassPermissions;
-// Named just "Type" in the runtime, but this name conflicts with @polkadot/types/primitive/Type.ts
-class PropertyTypeSingle extends common_1.JoyEnum({
-    Bool: primitive_1.Null,
-    Uint16: primitive_1.Null,
-    Uint32: primitive_1.Null,
-    Uint64: primitive_1.Null,
-    Int16: primitive_1.Null,
-    Int32: primitive_1.Null,
-    Int64: primitive_1.Null,
-    Text: TextMaxLength,
-    Hash: HashedTextMaxLength,
-    Reference: types_1.Tuple.with([ClassId, SameController]),
-}) {
-}
-exports.PropertyTypeSingle = PropertyTypeSingle;
-class PropertyTypeVector extends common_1.JoyStructDecorated({
-    vec_type: PropertyTypeSingle,
-    max_length: VecMaxLength,
-}) {
-}
-exports.PropertyTypeVector = PropertyTypeVector;
-class PropertyType extends common_1.JoyEnum({
-    Single: PropertyTypeSingle,
-    Vector: PropertyTypeVector,
-}) {
-    get subtype() {
-        return this.isOfType('Single') ? this.asType('Single').type : this.asType('Vector').vec_type.type;
-    }
-    toInputPropertyValue(value) {
-        const inputPwType = this.type;
-        const subtype = this.subtype;
-        if (inputPwType === 'Single') {
-            const inputPwSubtype = subtype === 'Hash' ? 'TextToHash' : subtype;
-            return new InputPropertyValue(this.registry, { [inputPwType]: { [inputPwSubtype]: value } });
-        }
-        else {
-            const inputPwSubtype = subtype === 'Hash' ? 'TextToHash' : subtype;
-            return new InputPropertyValue(this.registry, { [inputPwType]: { [inputPwSubtype]: value } });
-        }
-    }
-}
-exports.PropertyType = PropertyType;
-class PropertyLockingPolicy extends common_1.JoyStructDecorated({
-    is_locked_from_maintainer: primitive_1.bool,
-    is_locked_from_controller: primitive_1.bool,
-}) {
-}
-exports.PropertyLockingPolicy = PropertyLockingPolicy;
-class Property extends common_1.JoyStructDecorated({
-    property_type: PropertyType,
-    required: primitive_1.bool,
-    unique: primitive_1.bool,
-    name: types_1.Text,
-    description: types_1.Text,
-    locking_policy: PropertyLockingPolicy,
-}) {
-}
-exports.Property = Property;
-class Schema extends common_1.JoyStructDecorated({
-    properties: common_1.JoyBTreeSet(PropertyId),
-    is_active: primitive_1.bool,
-}) {
-}
-exports.Schema = Schema;
-class Class extends common_1.JoyStructDecorated({
-    class_permissions: ClassPermissions,
-    properties: types_1.Vec.with(Property),
-    schemas: types_1.Vec.with(Schema),
-    name: types_1.Text,
-    description: types_1.Text,
-    maximum_entities_count: EntityId,
-    current_number_of_entities: EntityId,
-    default_entity_creation_voucher_upper_bound: EntityId,
-}) {
-}
-exports.Class = Class;
-class EntityController extends common_1.JoyEnum({
-    Maintainers: primitive_1.Null,
-    Member: members_1.MemberId,
-    Lead: primitive_1.Null,
-}) {
-}
-exports.EntityController = EntityController;
-class EntityPermissions extends common_1.JoyStructDecorated({
-    controller: EntityController,
-    frozen: primitive_1.bool,
-    referenceable: primitive_1.bool,
-}) {
-}
-exports.EntityPermissions = EntityPermissions;
-class StoredValue extends common_1.JoyEnum({
-    Bool: primitive_1.bool,
-    Uint16: primitive_1.u16,
-    Uint32: primitive_1.u32,
-    Uint64: primitive_1.u64,
-    Int16: primitive_1.i16,
-    Int32: primitive_1.i32,
-    Int64: primitive_1.i64,
-    Text: types_1.Text,
-    Hash: common_1.Hash,
-    Reference: EntityId,
-}) {
-}
-exports.StoredValue = StoredValue;
-class VecStoredValue extends common_1.JoyEnum({
-    Bool: types_1.Vec.with(primitive_1.bool),
-    Uint16: types_1.Vec.with(primitive_1.u16),
-    Uint32: types_1.Vec.with(primitive_1.u32),
-    Uint64: types_1.Vec.with(primitive_1.u64),
-    Int16: types_1.Vec.with(primitive_1.i16),
-    Int32: types_1.Vec.with(primitive_1.i32),
-    Int64: types_1.Vec.with(primitive_1.i64),
-    Hash: types_1.Vec.with(common_1.Hash),
-    Text: types_1.Vec.with(types_1.Text),
-    Reference: types_1.Vec.with(EntityId),
-}) {
-}
-exports.VecStoredValue = VecStoredValue;
-class VecStoredPropertyValue extends common_1.JoyStructDecorated({
-    vec_value: VecStoredValue,
-    nonce: Nonce,
-}) {
-}
-exports.VecStoredPropertyValue = VecStoredPropertyValue;
-class StoredPropertyValue extends common_1.JoyEnum({
-    Single: StoredValue,
-    Vector: VecStoredPropertyValue,
-}) {
-    get subtype() {
-        return this.isOfType('Single') ? this.asType('Single').type : this.asType('Vector').vec_value.type;
-    }
-    getValue() {
-        return this.isOfType('Single') ? this.asType('Single').value : this.asType('Vector').vec_value.value;
-    }
-}
-exports.StoredPropertyValue = StoredPropertyValue;
-class InboundReferenceCounter extends common_1.JoyStructDecorated({
-    total: primitive_1.u32,
-    same_owner: primitive_1.u32,
-}) {
-}
-exports.InboundReferenceCounter = InboundReferenceCounter;
-class Entity extends common_1.JoyStructDecorated({
-    entity_permissions: EntityPermissions,
-    class_id: ClassId,
-    supported_schemas: common_1.JoyBTreeSet(SchemaId),
-    values: types_1.BTreeMap.with(PropertyId, StoredPropertyValue),
-    reference_counter: InboundReferenceCounter,
-}) {
-}
-exports.Entity = Entity;
-class CuratorGroup extends common_1.JoyStructDecorated({
-    curators: common_1.JoyBTreeSet(CuratorId),
-    active: primitive_1.bool,
-    number_of_classes_maintained: primitive_1.u32,
-}) {
-}
-exports.CuratorGroup = CuratorGroup;
-class EntityCreationVoucher extends common_1.JoyStructDecorated({
-    maximum_entities_count: EntityId,
-    entities_created: EntityId,
-}) {
-}
-exports.EntityCreationVoucher = EntityCreationVoucher;
-class Actor extends common_1.JoyEnum({
-    Curator: types_1.Tuple.with([CuratorGroupId, CuratorId]),
-    Member: members_1.MemberId,
-    Lead: primitive_1.Null,
-}) {
-}
-exports.Actor = Actor;
-class EntityReferenceCounterSideEffect extends common_1.JoyStructDecorated({
-    /// Delta number of all inbound references from another entities
-    total: primitive_1.i32,
-    /// Delta number of inbound references from another entities with `SameOwner` flag set
-    same_owner: primitive_1.i32,
-}) {
-}
-exports.EntityReferenceCounterSideEffect = EntityReferenceCounterSideEffect;
-class ReferenceCounterSideEffects extends types_1.BTreeMap.with(EntityId, EntityReferenceCounterSideEffect) {
-}
-exports.ReferenceCounterSideEffects = ReferenceCounterSideEffects;
-class SideEffects extends types_1.Option.with(ReferenceCounterSideEffects) {
-}
-exports.SideEffects = SideEffects;
-class SideEffect extends types_1.Option.with(types_1.Tuple.with([EntityId, EntityReferenceCounterSideEffect])) {
-}
-exports.SideEffect = SideEffect;
-class Status extends primitive_1.bool {
-}
-exports.Status = Status;
-class InputValue extends common_1.JoyEnum({
-    Bool: primitive_1.bool,
-    Uint16: primitive_1.u16,
-    Uint32: primitive_1.u32,
-    Uint64: primitive_1.u64,
-    Int16: primitive_1.i16,
-    Int32: primitive_1.i32,
-    Int64: primitive_1.i64,
-    Text: types_1.Text,
-    // Used to pass text value, which respective hash should be stored
-    TextToHash: types_1.Text,
-    Reference: EntityId,
-}) {
-}
-exports.InputValue = InputValue;
-class VecInputValue extends common_1.JoyEnum({
-    Bool: types_1.Vec.with(primitive_1.bool),
-    Uint16: types_1.Vec.with(primitive_1.u16),
-    Uint32: types_1.Vec.with(primitive_1.u32),
-    Uint64: types_1.Vec.with(primitive_1.u64),
-    Int16: types_1.Vec.with(primitive_1.i16),
-    Int32: types_1.Vec.with(primitive_1.i32),
-    Int64: types_1.Vec.with(primitive_1.i64),
-    TextToHash: types_1.Vec.with(types_1.Text),
-    Text: types_1.Vec.with(types_1.Text),
-    Reference: types_1.Vec.with(EntityId),
-}) {
-}
-exports.VecInputValue = VecInputValue;
-class InputPropertyValue extends common_1.JoyEnum({
-    Single: InputValue,
-    Vector: VecInputValue,
-}) {
-}
-exports.InputPropertyValue = InputPropertyValue;
-class ParameterizedEntity extends common_1.JoyEnum({
-    InternalEntityJustAdded: primitive_1.u32,
-    ExistingEntity: EntityId,
-}) {
-}
-exports.ParameterizedEntity = ParameterizedEntity;
-class ParametrizedPropertyValue extends common_1.JoyEnum({
-    InputPropertyValue: InputPropertyValue,
-    InternalEntityJustAdded: primitive_1.u32,
-    InternalEntityVec: types_1.Vec.with(ParameterizedEntity),
-}) {
-}
-exports.ParametrizedPropertyValue = ParametrizedPropertyValue;
-class ParametrizedClassPropertyValue extends common_1.JoyStructDecorated({
-    in_class_index: PropertyId,
-    value: ParametrizedPropertyValue,
-}) {
-}
-exports.ParametrizedClassPropertyValue = ParametrizedClassPropertyValue;
-class CreateEntityOperation extends common_1.JoyStructDecorated({
-    class_id: ClassId,
-}) {
-}
-exports.CreateEntityOperation = CreateEntityOperation;
-class UpdatePropertyValuesOperation extends common_1.JoyStructDecorated({
-    entity_id: ParameterizedEntity,
-    new_parametrized_property_values: types_1.Vec.with(ParametrizedClassPropertyValue),
-}) {
-}
-exports.UpdatePropertyValuesOperation = UpdatePropertyValuesOperation;
-class AddSchemaSupportToEntityOperation extends common_1.JoyStructDecorated({
-    entity_id: ParameterizedEntity,
-    schema_id: SchemaId,
-    parametrized_property_values: types_1.Vec.with(ParametrizedClassPropertyValue),
-}) {
-}
-exports.AddSchemaSupportToEntityOperation = AddSchemaSupportToEntityOperation;
-class OperationType extends common_1.JoyEnum({
-    CreateEntity: CreateEntityOperation,
-    UpdatePropertyValues: UpdatePropertyValuesOperation,
-    AddSchemaSupportToEntity: AddSchemaSupportToEntityOperation,
-}) {
-}
-exports.OperationType = OperationType;
-// Versioned store relicts - to be removed:
-class ClassPermissionsType extends primitive_1.Null {
-}
-exports.ClassPermissionsType = ClassPermissionsType;
-class ClassPropertyValue extends primitive_1.Null {
-}
-exports.ClassPropertyValue = ClassPropertyValue;
-class Operation extends primitive_1.Null {
-}
-exports.Operation = Operation;
-class ReferenceConstraint extends primitive_1.Null {
-}
-exports.ReferenceConstraint = ReferenceConstraint;
-class InputEntityValuesMap extends types_1.BTreeMap.with(PropertyId, InputPropertyValue) {
-}
-exports.InputEntityValuesMap = InputEntityValuesMap;
-class FailedAt extends primitive_1.u32 {
-}
-exports.FailedAt = FailedAt;
-exports.contentDirectoryTypes = {
-    Nonce,
-    EntityId,
-    ClassId,
-    CuratorGroupId,
-    VecMaxLength,
-    TextMaxLength,
-    HashedTextMaxLength,
-    PropertyId,
-    SchemaId,
-    SameController,
-    ClassPermissions,
-    PropertyTypeSingle,
-    PropertyTypeVector,
-    PropertyType,
-    PropertyLockingPolicy,
-    Property,
-    Schema,
-    Class,
-    ClassOf: Class,
-    EntityController,
-    EntityPermissions,
-    StoredValue,
-    VecStoredValue,
-    VecStoredPropertyValue,
-    StoredPropertyValue,
-    InboundReferenceCounter,
-    Entity,
-    EntityOf: Entity,
-    CuratorGroup,
-    EntityCreationVoucher,
-    Actor,
-    EntityReferenceCounterSideEffect,
-    ReferenceCounterSideEffects,
-    SideEffects,
-    SideEffect,
-    Status,
-    InputValue,
-    VecInputValue,
-    InputPropertyValue,
-    ParameterizedEntity,
-    ParametrizedPropertyValue,
-    ParametrizedClassPropertyValue,
-    CreateEntityOperation,
-    UpdatePropertyValuesOperation,
-    AddSchemaSupportToEntityOperation,
-    OperationType,
-    InputEntityValuesMap,
-    // Versioned store relicts - to be removed:
-    ClassPermissionsType,
-    ClassPropertyValue,
-    Operation,
-    ReferenceConstraint,
-    FailedAt,
-};
-exports.default = exports.contentDirectoryTypes;
diff --git a/content-working-group/ChannelId.d.ts b/content-working-group/ChannelId.d.ts
deleted file mode 100644
index a7258bcb9bff93d7a9518a6ba1bbe667f413017d..0000000000000000000000000000000000000000
--- a/content-working-group/ChannelId.d.ts
+++ /dev/null
@@ -1,3 +0,0 @@
-import { ActorId } from '../members';
-export default class ChannelId extends ActorId {
-}
diff --git a/content-working-group/ChannelId.js b/content-working-group/ChannelId.js
deleted file mode 100644
index b5c073fa5ede13a13432aa85b969a739de5d5828..0000000000000000000000000000000000000000
--- a/content-working-group/ChannelId.js
+++ /dev/null
@@ -1,6 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-const members_1 = require("../members");
-class ChannelId extends members_1.ActorId {
-}
-exports.default = ChannelId;
diff --git a/content-working-group/index.d.ts b/content-working-group/index.d.ts
deleted file mode 100644
index 9b83e05e7bb6115455a9e525994583444de5fa9b..0000000000000000000000000000000000000000
--- a/content-working-group/index.d.ts
+++ /dev/null
@@ -1,318 +0,0 @@
-import { bool, u32, Text, Null, Option, BTreeSet } from '@polkadot/types';
-import { BlockNumber } from '@polkadot/types/interfaces';
-import { OptionText, Credential, SlashingTerms } from '../common';
-import { ActorId, MemberId } from '../members';
-import { StakeId } from '../stake';
-import { OpeningId, ApplicationId, ApplicationRationingPolicy, StakingPolicy } from '../hiring/index';
-import { RewardRelationshipId } from '../recurring-rewards';
-import ChannelId from './ChannelId';
-import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
-export { ChannelId };
-export declare class CuratorId extends ActorId {
-}
-export declare class CuratorOpeningId extends OpeningId {
-}
-export declare class CuratorApplicationId extends ApplicationId {
-}
-export declare class LeadId extends ActorId {
-}
-export declare class PrincipalId extends Credential {
-}
-export declare class OptionalText extends OptionText {
-}
-export declare const ChannelContentTypeAllValues: readonly ["Video", "Music", "Ebook"];
-export declare type ChannelContentTypeValue = typeof ChannelContentTypeAllValues[number];
-export declare const ChannelContentTypeDef: {
-    readonly Video: typeof Null;
-    readonly Music: typeof Null;
-    readonly Ebook: typeof Null;
-};
-declare const ChannelContentType_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Video: typeof Null;
-    readonly Music: typeof Null;
-    readonly Ebook: typeof Null;
-}>;
-export declare class ChannelContentType extends ChannelContentType_base {
-}
-export declare const ChannelPublicationStatusAllValues: readonly ["Public", "Unlisted"];
-export declare type ChannelPublicationStatusValue = typeof ChannelPublicationStatusAllValues[number];
-export declare const ChannelPublicationStatusDef: {
-    readonly Public: typeof Null;
-    readonly Unlisted: typeof Null;
-};
-declare const ChannelPublicationStatus_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Public: typeof Null;
-    readonly Unlisted: typeof Null;
-}>;
-export declare class ChannelPublicationStatus extends ChannelPublicationStatus_base {
-}
-export declare const ChannelCurationStatusAllValues: readonly ["Normal", "Censored"];
-export declare type ChannelCurationStatusValue = typeof ChannelCurationStatusAllValues[number];
-export declare const ChannelCurationStatusDef: {
-    readonly Normal: typeof Null;
-    readonly Censored: typeof Null;
-};
-declare const ChannelCurationStatus_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Normal: typeof Null;
-    readonly Censored: typeof Null;
-}>;
-export declare class ChannelCurationStatus extends ChannelCurationStatus_base {
-}
-export declare type IChannel = {
-    verified: bool;
-    handle: Text;
-    title: OptionalText;
-    description: OptionalText;
-    avatar: OptionalText;
-    banner: OptionalText;
-    content: ChannelContentType;
-    owner: MemberId;
-    role_account: AccountId;
-    publication_status: ChannelPublicationStatus;
-    curation_status: ChannelCurationStatus;
-    created: BlockNumber;
-    principal_id: PrincipalId;
-};
-declare const Channel_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    verified: typeof bool;
-    handle: typeof Text;
-    title: typeof OptionalText;
-    description: typeof OptionalText;
-    avatar: typeof OptionalText;
-    banner: typeof OptionalText;
-    content: typeof ChannelContentType;
-    owner: typeof MemberId;
-    role_account: typeof AccountId;
-    publication_status: typeof ChannelPublicationStatus;
-    curation_status: typeof ChannelCurationStatus;
-    created: typeof u32;
-    principal_id: typeof PrincipalId;
-}>;
-export declare class Channel extends Channel_base implements IChannel {
-}
-declare const CurationActor_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Lead: typeof Null;
-    readonly Curator: typeof CuratorId;
-}>;
-export declare class CurationActor extends CurationActor_base {
-}
-declare const Principal_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Lead: typeof Null;
-    readonly Curator: typeof CuratorId;
-    readonly ChannelOwner: typeof ChannelId;
-}>;
-export declare class Principal extends Principal_base {
-}
-export declare type ICuratorRoleStakeProfile = {
-    stake_id: StakeId;
-    termination_unstaking_period: Option<BlockNumber>;
-    exit_unstaking_period: Option<BlockNumber>;
-};
-declare const CuratorRoleStakeProfile_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    stake_id: typeof StakeId;
-    termination_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-    exit_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-}>;
-export declare class CuratorRoleStakeProfile extends CuratorRoleStakeProfile_base implements ICuratorRoleStakeProfile {
-}
-declare const CuratorExitInitiationOrigin_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Lead: typeof Null;
-    readonly Curator: typeof Null;
-}>;
-export declare class CuratorExitInitiationOrigin extends CuratorExitInitiationOrigin_base {
-}
-export declare type ICuratorExitSummary = {
-    origin: CuratorExitInitiationOrigin;
-    initiated_at_block_number: BlockNumber;
-    rationale_text: Text;
-};
-declare const CuratorExitSummary_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    origin: typeof CuratorExitInitiationOrigin;
-    initiated_at_block_number: typeof u32;
-    rationale_text: typeof Text;
-}>;
-export declare class CuratorExitSummary extends CuratorExitSummary_base implements ICuratorExitSummary {
-}
-export declare enum CuratorRoleStageKeys {
-    Active = "Active",
-    Unstaking = "Unstaking",
-    Exited = "Exited"
-}
-export declare const CuratorRoleStageDef: {
-    readonly Active: typeof Null;
-    readonly Unstaking: typeof CuratorExitSummary;
-    readonly Exited: typeof CuratorExitSummary;
-};
-declare const CuratorRoleStage_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Active: typeof Null;
-    readonly Unstaking: typeof CuratorExitSummary;
-    readonly Exited: typeof CuratorExitSummary;
-}>;
-export declare class CuratorRoleStage extends CuratorRoleStage_base {
-}
-export declare type ICuratorInduction = {
-    lead: LeadId;
-    curator_application_id: CuratorApplicationId;
-    at_block: BlockNumber;
-};
-declare const CuratorInduction_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    lead: typeof LeadId;
-    curator_application_id: typeof CuratorApplicationId;
-    at_block: typeof u32;
-}>;
-export declare class CuratorInduction extends CuratorInduction_base implements ICuratorInduction {
-    get worker_application_id(): CuratorApplicationId;
-}
-export declare type ICurator = {
-    role_account: AccountId;
-    reward_relationship: Option<RewardRelationshipId>;
-    role_stake_profile: Option<CuratorRoleStakeProfile>;
-    stage: CuratorRoleStage;
-    induction: CuratorInduction;
-    principal_id: PrincipalId;
-};
-declare const Curator_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    role_account: typeof AccountId;
-    reward_relationship: import("@polkadot/types/types").Constructor<Option<RewardRelationshipId>>;
-    role_stake_profile: import("@polkadot/types/types").Constructor<Option<CuratorRoleStakeProfile>>;
-    stage: typeof CuratorRoleStage;
-    induction: typeof CuratorInduction;
-    principal_id: typeof PrincipalId;
-}>;
-export declare class Curator extends Curator_base implements ICurator {
-    get role_account_id(): AccountId;
-    get is_active(): boolean;
-}
-export declare type ICuratorApplication = {
-    role_account: AccountId;
-    curator_opening_id: CuratorOpeningId;
-    member_id: MemberId;
-    application_id: ApplicationId;
-};
-declare const CuratorApplication_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    role_account: typeof AccountId;
-    curator_opening_id: typeof CuratorOpeningId;
-    member_id: typeof MemberId;
-    application_id: typeof ApplicationId;
-}>;
-export declare class CuratorApplication extends CuratorApplication_base implements ICuratorApplication {
-    get role_account_id(): AccountId;
-    get opening_id(): CuratorOpeningId;
-}
-export declare type IOpeningPolicyCommitment = {
-    application_rationing_policy: Option<ApplicationRationingPolicy>;
-    max_review_period_length: BlockNumber;
-    application_staking_policy: Option<StakingPolicy>;
-    role_staking_policy: Option<StakingPolicy>;
-    role_slashing_terms: SlashingTerms;
-    fill_opening_successful_applicant_application_stake_unstaking_period: Option<BlockNumber>;
-    fill_opening_failed_applicant_application_stake_unstaking_period: Option<BlockNumber>;
-    fill_opening_failed_applicant_role_stake_unstaking_period: Option<BlockNumber>;
-    terminate_curator_application_stake_unstaking_period: Option<BlockNumber>;
-    terminate_curator_role_stake_unstaking_period: Option<BlockNumber>;
-    exit_curator_role_application_stake_unstaking_period: Option<BlockNumber>;
-    exit_curator_role_stake_unstaking_period: Option<BlockNumber>;
-};
-declare const OpeningPolicyCommitment_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    application_rationing_policy: import("@polkadot/types/types").Constructor<Option<ApplicationRationingPolicy>>;
-    max_review_period_length: typeof u32;
-    application_staking_policy: import("@polkadot/types/types").Constructor<Option<StakingPolicy>>;
-    role_staking_policy: import("@polkadot/types/types").Constructor<Option<StakingPolicy>>;
-    role_slashing_terms: typeof SlashingTerms;
-    fill_opening_successful_applicant_application_stake_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-    fill_opening_failed_applicant_application_stake_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-    fill_opening_failed_applicant_role_stake_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-    terminate_curator_application_stake_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-    terminate_curator_role_stake_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-    exit_curator_role_application_stake_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-    exit_curator_role_stake_unstaking_period: import("@polkadot/types/types").Constructor<Option<u32>>;
-}>;
-export declare class OpeningPolicyCommitment extends OpeningPolicyCommitment_base implements IOpeningPolicyCommitment {
-}
-export declare type ICuratorOpening = {
-    opening_id: OpeningId;
-    curator_applications: BTreeSet<CuratorApplicationId>;
-    policy_commitment: OpeningPolicyCommitment;
-};
-declare const CuratorOpening_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    opening_id: typeof OpeningId;
-    curator_applications: import("@polkadot/types/types").Constructor<import("../common").ExtendedBTreeSet<CuratorApplicationId>>;
-    policy_commitment: typeof OpeningPolicyCommitment;
-}>;
-export declare class CuratorOpening extends CuratorOpening_base implements ICuratorOpening {
-    get hiring_opening_id(): OpeningId;
-}
-export declare type IExitedLeadRole = {
-    initiated_at_block_number: BlockNumber;
-};
-declare const ExitedLeadRole_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    initiated_at_block_number: typeof u32;
-}>;
-export declare class ExitedLeadRole extends ExitedLeadRole_base implements IExitedLeadRole {
-}
-declare const LeadRoleState_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    readonly Active: typeof Null;
-    readonly Exited: typeof ExitedLeadRole;
-}>;
-export declare class LeadRoleState extends LeadRoleState_base {
-}
-export declare type ILead = {
-    member_id: MemberId;
-    role_account: AccountId;
-    reward_relationship: Option<RewardRelationshipId>;
-    inducted: BlockNumber;
-    stage: LeadRoleState;
-};
-declare const Lead_base: import("../JoyStruct").ExtendedStructDecoratedConstructor<{
-    member_id: typeof MemberId;
-    role_account: typeof AccountId;
-    reward_relationship: import("@polkadot/types/types").Constructor<Option<RewardRelationshipId>>;
-    inducted: typeof u32;
-    stage: typeof LeadRoleState;
-}>;
-export declare class Lead extends Lead_base implements ILead {
-    get role_account_id(): AccountId;
-}
-declare const WorkingGroupUnstaker_base: import("../JoyEnum").ExtendedEnumConstructor<{
-    Lead: typeof LeadId;
-    Curator: typeof CuratorId;
-}>;
-export declare class WorkingGroupUnstaker extends WorkingGroupUnstaker_base {
-}
-declare const CuratorApplicationIdToCuratorIdMap_base: import("@polkadot/types/types").Constructor<import("@polkadot/types").CodecMap<ApplicationId, CuratorId>>;
-export declare class CuratorApplicationIdToCuratorIdMap extends CuratorApplicationIdToCuratorIdMap_base {
-}
-declare const CuratorApplicationIdSet_base: import("@polkadot/types/types").Constructor<import("../common").ExtendedBTreeSet<CuratorApplicationId>>;
-export declare class CuratorApplicationIdSet extends CuratorApplicationIdSet_base {
-}
-export declare const contentWorkingGroupTypes: {
-    ChannelId: typeof ChannelId;
-    CuratorId: typeof CuratorId;
-    CuratorOpeningId: typeof CuratorOpeningId;
-    CuratorApplicationId: typeof CuratorApplicationId;
-    LeadId: typeof LeadId;
-    PrincipalId: typeof PrincipalId;
-    OptionalText: typeof OptionalText;
-    Channel: typeof Channel;
-    ChannelContentType: typeof ChannelContentType;
-    ChannelCurationStatus: typeof ChannelCurationStatus;
-    ChannelPublicationStatus: typeof ChannelPublicationStatus;
-    CurationActor: typeof CurationActor;
-    Curator: typeof Curator;
-    CuratorApplication: typeof CuratorApplication;
-    CuratorOpening: typeof CuratorOpening;
-    Lead: typeof Lead;
-    OpeningPolicyCommitment: typeof OpeningPolicyCommitment;
-    Principal: typeof Principal;
-    WorkingGroupUnstaker: typeof WorkingGroupUnstaker;
-    CuratorApplicationIdToCuratorIdMap: typeof CuratorApplicationIdToCuratorIdMap;
-    CuratorApplicationIdSet: typeof CuratorApplicationIdSet;
-    CuratorRoleStakeProfile: typeof CuratorRoleStakeProfile;
-    CuratorRoleStage: typeof CuratorRoleStage;
-    CuratorExitSummary: typeof CuratorExitSummary;
-    CuratorExitInitiationOrigin: typeof CuratorExitInitiationOrigin;
-    LeadRoleState: typeof LeadRoleState;
-    ExitedLeadRole: typeof ExitedLeadRole;
-    CuratorInduction: typeof CuratorInduction;
-};
-export default contentWorkingGroupTypes;
diff --git a/content-working-group/index.js b/content-working-group/index.js
deleted file mode 100644
index b0c3c5a37426f0557bdf00ac2ae4189921faf511..0000000000000000000000000000000000000000
--- a/content-working-group/index.js
+++ /dev/null
@@ -1,262 +0,0 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.contentWorkingGroupTypes = exports.CuratorApplicationIdSet = exports.CuratorApplicationIdToCuratorIdMap = exports.WorkingGroupUnstaker = exports.Lead = exports.LeadRoleState = exports.ExitedLeadRole = exports.CuratorOpening = exports.OpeningPolicyCommitment = exports.CuratorApplication = exports.Curator = exports.CuratorInduction = exports.CuratorRoleStage = exports.CuratorRoleStageDef = exports.CuratorRoleStageKeys = exports.CuratorExitSummary = exports.CuratorExitInitiationOrigin = exports.CuratorRoleStakeProfile = exports.Principal = exports.CurationActor = exports.Channel = exports.ChannelCurationStatus = exports.ChannelCurationStatusDef = exports.ChannelCurationStatusAllValues = exports.ChannelPublicationStatus = exports.ChannelPublicationStatusDef = exports.ChannelPublicationStatusAllValues = exports.ChannelContentType = exports.ChannelContentTypeDef = exports.ChannelContentTypeAllValues = exports.OptionalText = exports.PrincipalId = exports.LeadId = exports.CuratorApplicationId = exports.CuratorOpeningId = exports.CuratorId = exports.ChannelId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("../common");
-const members_1 = require("../members");
-const stake_1 = require("../stake");
-const index_1 = require("../hiring/index");
-const recurring_rewards_1 = require("../recurring-rewards");
-const ChannelId_1 = __importDefault(require("./ChannelId"));
-exports.ChannelId = ChannelId_1.default;
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-class CuratorId extends members_1.ActorId {
-}
-exports.CuratorId = CuratorId;
-class CuratorOpeningId extends index_1.OpeningId {
-}
-exports.CuratorOpeningId = CuratorOpeningId;
-class CuratorApplicationId extends index_1.ApplicationId {
-}
-exports.CuratorApplicationId = CuratorApplicationId;
-class LeadId extends members_1.ActorId {
-}
-exports.LeadId = LeadId;
-class PrincipalId extends common_1.Credential {
-}
-exports.PrincipalId = PrincipalId;
-class OptionalText extends common_1.OptionText {
-}
-exports.OptionalText = OptionalText;
-exports.ChannelContentTypeAllValues = ['Video', 'Music', 'Ebook'];
-exports.ChannelContentTypeDef = {
-    Video: types_1.Null,
-    Music: types_1.Null,
-    Ebook: types_1.Null,
-};
-class ChannelContentType extends common_1.JoyEnum(exports.ChannelContentTypeDef) {
-}
-exports.ChannelContentType = ChannelContentType;
-exports.ChannelPublicationStatusAllValues = ['Public', 'Unlisted'];
-exports.ChannelPublicationStatusDef = {
-    Public: types_1.Null,
-    Unlisted: types_1.Null,
-};
-class ChannelPublicationStatus extends common_1.JoyEnum(exports.ChannelPublicationStatusDef) {
-}
-exports.ChannelPublicationStatus = ChannelPublicationStatus;
-exports.ChannelCurationStatusAllValues = ['Normal', 'Censored'];
-exports.ChannelCurationStatusDef = {
-    Normal: types_1.Null,
-    Censored: types_1.Null,
-};
-class ChannelCurationStatus extends common_1.JoyEnum(exports.ChannelCurationStatusDef) {
-}
-exports.ChannelCurationStatus = ChannelCurationStatus;
-class Channel extends common_1.JoyStructDecorated({
-    verified: types_1.bool,
-    handle: types_1.Text,
-    title: OptionalText,
-    description: OptionalText,
-    avatar: OptionalText,
-    banner: OptionalText,
-    content: ChannelContentType,
-    owner: members_1.MemberId,
-    role_account: AccountId_1.GenericAccountId,
-    publication_status: ChannelPublicationStatus,
-    curation_status: ChannelCurationStatus,
-    created: types_1.u32,
-    principal_id: PrincipalId,
-}) {
-}
-exports.Channel = Channel;
-class CurationActor extends common_1.JoyEnum({
-    Lead: types_1.Null,
-    Curator: CuratorId,
-}) {
-}
-exports.CurationActor = CurationActor;
-class Principal extends common_1.JoyEnum({
-    Lead: types_1.Null,
-    Curator: CuratorId,
-    ChannelOwner: ChannelId_1.default,
-}) {
-}
-exports.Principal = Principal;
-class CuratorRoleStakeProfile extends common_1.JoyStructDecorated({
-    stake_id: stake_1.StakeId,
-    termination_unstaking_period: types_1.Option.with(types_1.u32),
-    exit_unstaking_period: types_1.Option.with(types_1.u32),
-}) {
-}
-exports.CuratorRoleStakeProfile = CuratorRoleStakeProfile;
-class CuratorExitInitiationOrigin extends common_1.JoyEnum({
-    Lead: types_1.Null,
-    Curator: types_1.Null,
-}) {
-}
-exports.CuratorExitInitiationOrigin = CuratorExitInitiationOrigin;
-class CuratorExitSummary extends common_1.JoyStructDecorated({
-    origin: CuratorExitInitiationOrigin,
-    initiated_at_block_number: types_1.u32,
-    rationale_text: types_1.Text,
-}) {
-}
-exports.CuratorExitSummary = CuratorExitSummary;
-// FIXME: Replace usages with isOfType, asType wherever possible
-var CuratorRoleStageKeys;
-(function (CuratorRoleStageKeys) {
-    CuratorRoleStageKeys["Active"] = "Active";
-    CuratorRoleStageKeys["Unstaking"] = "Unstaking";
-    CuratorRoleStageKeys["Exited"] = "Exited";
-})(CuratorRoleStageKeys = exports.CuratorRoleStageKeys || (exports.CuratorRoleStageKeys = {}));
-exports.CuratorRoleStageDef = {
-    Active: types_1.Null,
-    Unstaking: CuratorExitSummary,
-    Exited: CuratorExitSummary,
-};
-class CuratorRoleStage extends common_1.JoyEnum(exports.CuratorRoleStageDef) {
-}
-exports.CuratorRoleStage = CuratorRoleStage;
-class CuratorInduction extends common_1.JoyStructDecorated({
-    lead: LeadId,
-    curator_application_id: CuratorApplicationId,
-    at_block: types_1.u32,
-}) {
-    // Helper for working-group compatibility
-    get worker_application_id() {
-        return this.curator_application_id;
-    }
-}
-exports.CuratorInduction = CuratorInduction;
-class Curator extends common_1.JoyStructDecorated({
-    role_account: AccountId_1.GenericAccountId,
-    reward_relationship: types_1.Option.with(recurring_rewards_1.RewardRelationshipId),
-    role_stake_profile: types_1.Option.with(CuratorRoleStakeProfile),
-    stage: CuratorRoleStage,
-    induction: CuratorInduction,
-    principal_id: PrincipalId,
-}) {
-    // Helper for working-group compatibility
-    get role_account_id() {
-        return this.role_account;
-    }
-    get is_active() {
-        return this.stage.isOfType('Active');
-    }
-}
-exports.Curator = Curator;
-class CuratorApplication extends common_1.JoyStructDecorated({
-    role_account: AccountId_1.GenericAccountId,
-    curator_opening_id: CuratorOpeningId,
-    member_id: members_1.MemberId,
-    application_id: index_1.ApplicationId,
-}) {
-    // Helper for working-group compatibility
-    get role_account_id() {
-        return this.role_account;
-    }
-    // Helper for working-group compatibility
-    get opening_id() {
-        return this.curator_opening_id;
-    }
-}
-exports.CuratorApplication = CuratorApplication;
-class OpeningPolicyCommitment extends common_1.JoyStructDecorated({
-    application_rationing_policy: types_1.Option.with(index_1.ApplicationRationingPolicy),
-    max_review_period_length: types_1.u32,
-    application_staking_policy: types_1.Option.with(index_1.StakingPolicy),
-    role_staking_policy: types_1.Option.with(index_1.StakingPolicy),
-    role_slashing_terms: common_1.SlashingTerms,
-    fill_opening_successful_applicant_application_stake_unstaking_period: types_1.Option.with(types_1.u32),
-    fill_opening_failed_applicant_application_stake_unstaking_period: types_1.Option.with(types_1.u32),
-    fill_opening_failed_applicant_role_stake_unstaking_period: types_1.Option.with(types_1.u32),
-    terminate_curator_application_stake_unstaking_period: types_1.Option.with(types_1.u32),
-    terminate_curator_role_stake_unstaking_period: types_1.Option.with(types_1.u32),
-    exit_curator_role_application_stake_unstaking_period: types_1.Option.with(types_1.u32),
-    exit_curator_role_stake_unstaking_period: types_1.Option.with(types_1.u32),
-}) {
-}
-exports.OpeningPolicyCommitment = OpeningPolicyCommitment;
-class CuratorOpening extends common_1.JoyStructDecorated({
-    opening_id: index_1.OpeningId,
-    curator_applications: common_1.JoyBTreeSet(CuratorApplicationId),
-    policy_commitment: OpeningPolicyCommitment,
-}) {
-    // Helper for working-group compatibility
-    get hiring_opening_id() {
-        return this.opening_id;
-    }
-}
-exports.CuratorOpening = CuratorOpening;
-class ExitedLeadRole extends common_1.JoyStructDecorated({
-    initiated_at_block_number: types_1.u32,
-}) {
-}
-exports.ExitedLeadRole = ExitedLeadRole;
-class LeadRoleState extends common_1.JoyEnum({
-    Active: types_1.Null,
-    Exited: ExitedLeadRole,
-}) {
-}
-exports.LeadRoleState = LeadRoleState;
-class Lead extends common_1.JoyStructDecorated({
-    member_id: members_1.MemberId,
-    role_account: AccountId_1.GenericAccountId,
-    reward_relationship: types_1.Option.with(recurring_rewards_1.RewardRelationshipId),
-    inducted: types_1.u32,
-    stage: LeadRoleState,
-}) {
-    // Helper for working-group compatibility
-    get role_account_id() {
-        return this.role_account;
-    }
-}
-exports.Lead = Lead;
-class WorkingGroupUnstaker extends common_1.JoyEnum({
-    Lead: LeadId,
-    Curator: CuratorId,
-}) {
-}
-exports.WorkingGroupUnstaker = WorkingGroupUnstaker;
-class CuratorApplicationIdToCuratorIdMap extends types_1.BTreeMap.with(index_1.ApplicationId, CuratorId) {
-}
-exports.CuratorApplicationIdToCuratorIdMap = CuratorApplicationIdToCuratorIdMap;
-class CuratorApplicationIdSet extends common_1.JoyBTreeSet(CuratorApplicationId) {
-}
-exports.CuratorApplicationIdSet = CuratorApplicationIdSet;
-exports.contentWorkingGroupTypes = {
-    ChannelId: ChannelId_1.default,
-    CuratorId,
-    CuratorOpeningId,
-    CuratorApplicationId,
-    LeadId,
-    PrincipalId,
-    OptionalText,
-    Channel,
-    ChannelContentType,
-    ChannelCurationStatus,
-    ChannelPublicationStatus,
-    CurationActor,
-    Curator,
-    CuratorApplication,
-    CuratorOpening,
-    Lead,
-    OpeningPolicyCommitment,
-    Principal,
-    WorkingGroupUnstaker,
-    CuratorApplicationIdToCuratorIdMap,
-    CuratorApplicationIdSet,
-    // Expose in registry for api.createType purposes:
-    CuratorRoleStakeProfile,
-    CuratorRoleStage,
-    CuratorExitSummary,
-    CuratorExitInitiationOrigin,
-    LeadRoleState,
-    ExitedLeadRole,
-    CuratorInduction,
-};
-exports.default = exports.contentWorkingGroupTypes;
diff --git a/council/index.js b/council/index.js
index 92aff75d47a2252f065ca935afcde36ab16558df..31c3c7105d54d562dd9584119d7c45f6b40889f4 100644
--- a/council/index.js
+++ b/council/index.js
@@ -1,81 +1,66 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.councilTypes = exports.ElectionParameters = exports.ElectionStage = exports.Revealing = exports.Voting = exports.Announcing = exports.SealedVote = exports.Seats = exports.Seat = exports.Backers = exports.Backer = exports.ElectionStake = exports.TransferableStake = void 0;
-const codec_1 = require("@polkadot/types/codec");
-const types_1 = require("@polkadot/types");
-const primitive_1 = require("@polkadot/types/primitive");
-const JoyStruct_1 = require("../JoyStruct");
-const JoyEnum_1 = require("../JoyEnum");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-const common_1 = require("../common");
-class TransferableStake extends JoyStruct_1.JoyStructDecorated({
-    seat: primitive_1.u128,
-    backing: primitive_1.u128,
+import { Option } from '@polkadot/types/codec';
+import { Vec } from '@polkadot/types';
+import { u32, u128 } from '@polkadot/types/primitive';
+import { JoyStructDecorated } from '../JoyStruct';
+import { JoyEnum } from '../JoyEnum';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+import { Hash } from '../common';
+export class TransferableStake extends JoyStructDecorated({
+    seat: u128,
+    backing: u128,
 }) {
 }
-exports.TransferableStake = TransferableStake;
-class ElectionStake extends JoyStruct_1.JoyStructDecorated({
-    new: primitive_1.u128,
-    transferred: primitive_1.u128,
+export class ElectionStake extends JoyStructDecorated({
+    new: u128,
+    transferred: u128,
 }) {
 }
-exports.ElectionStake = ElectionStake;
-class Backer extends JoyStruct_1.JoyStructDecorated({
-    member: AccountId_1.GenericAccountId,
-    stake: primitive_1.u128,
+export class Backer extends JoyStructDecorated({
+    member: AccountId,
+    stake: u128,
 }) {
 }
-exports.Backer = Backer;
-class Backers extends types_1.Vec.with(Backer) {
+export class Backers extends Vec.with(Backer) {
 }
-exports.Backers = Backers;
-class Seat extends JoyStruct_1.JoyStructDecorated({
-    member: AccountId_1.GenericAccountId,
-    stake: primitive_1.u128,
+export class Seat extends JoyStructDecorated({
+    member: AccountId,
+    stake: u128,
     backers: Backers,
 }) {
 }
-exports.Seat = Seat;
-class Seats extends types_1.Vec.with(Seat) {
+export class Seats extends Vec.with(Seat) {
 }
-exports.Seats = Seats;
-class SealedVote extends JoyStruct_1.JoyStructDecorated({
-    voter: AccountId_1.GenericAccountId,
-    commitment: common_1.Hash,
+export class SealedVote extends JoyStructDecorated({
+    voter: AccountId,
+    commitment: Hash,
     stake: ElectionStake,
-    vote: codec_1.Option.with(AccountId_1.GenericAccountId),
+    vote: Option.with(AccountId),
 }) {
 }
-exports.SealedVote = SealedVote;
-class Announcing extends primitive_1.u32 {
+export class Announcing extends u32 {
 }
-exports.Announcing = Announcing;
-class Voting extends primitive_1.u32 {
+export class Voting extends u32 {
 }
-exports.Voting = Voting;
-class Revealing extends primitive_1.u32 {
+export class Revealing extends u32 {
 }
-exports.Revealing = Revealing;
-class ElectionStage extends JoyEnum_1.JoyEnum({
+export class ElectionStage extends JoyEnum({
     Announcing,
     Voting,
     Revealing,
 }) {
 }
-exports.ElectionStage = ElectionStage;
-class ElectionParameters extends JoyStruct_1.JoyStructDecorated({
-    announcing_period: primitive_1.u32,
-    voting_period: primitive_1.u32,
-    revealing_period: primitive_1.u32,
-    council_size: primitive_1.u32,
-    candidacy_limit: primitive_1.u32,
-    new_term_duration: primitive_1.u32,
-    min_council_stake: primitive_1.u128,
-    min_voting_stake: primitive_1.u128,
+export class ElectionParameters extends JoyStructDecorated({
+    announcing_period: u32,
+    voting_period: u32,
+    revealing_period: u32,
+    council_size: u32,
+    candidacy_limit: u32,
+    new_term_duration: u32,
+    min_council_stake: u128,
+    min_voting_stake: u128,
 }) {
 }
-exports.ElectionParameters = ElectionParameters;
-exports.councilTypes = {
+export const councilTypes = {
     ElectionStage,
     ElectionStake,
     SealedVote,
@@ -86,4 +71,4 @@ exports.councilTypes = {
     Backer,
     Backers,
 };
-exports.default = exports.councilTypes;
+export default councilTypes;
diff --git a/discovery.d.ts b/discovery.d.ts
deleted file mode 100644
index 12446bcbc6cad002d78564fc0755b7796e282091..0000000000000000000000000000000000000000
--- a/discovery.d.ts
+++ /dev/null
@@ -1,14 +0,0 @@
-import { Text, u32 } from '@polkadot/types';
-import { RegistryTypes } from '@polkadot/types/types';
-export declare class IPNSIdentity extends Text {
-}
-export declare class Url extends Text {
-}
-declare const ServiceProviderRecord_base: import("./JoyStruct").ExtendedStructDecoratedConstructor<{
-    identity: typeof IPNSIdentity;
-    expires_at: typeof u32;
-}>;
-export declare class ServiceProviderRecord extends ServiceProviderRecord_base {
-}
-export declare const discoveryTypes: RegistryTypes;
-export default discoveryTypes;
diff --git a/discovery.js b/discovery.js
deleted file mode 100644
index 370fea32a11a9e3ad27b64b78d06912082731d39..0000000000000000000000000000000000000000
--- a/discovery.js
+++ /dev/null
@@ -1,23 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.discoveryTypes = exports.ServiceProviderRecord = exports.Url = exports.IPNSIdentity = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-class IPNSIdentity extends types_1.Text {
-}
-exports.IPNSIdentity = IPNSIdentity;
-class Url extends types_1.Text {
-}
-exports.Url = Url;
-class ServiceProviderRecord extends common_1.JoyStructDecorated({
-    identity: IPNSIdentity,
-    expires_at: types_1.u32,
-}) {
-}
-exports.ServiceProviderRecord = ServiceProviderRecord;
-exports.discoveryTypes = {
-    Url,
-    IPNSIdentity,
-    ServiceProviderRecord,
-};
-exports.default = exports.discoveryTypes;
diff --git a/forum.js b/forum.js
index a4c9e6893ea47e40f43a24339795373b104fc25d..c5754d9822148c82e0b51a2ef1d51acb4b59ce33 100644
--- a/forum.js
+++ b/forum.js
@@ -1,13 +1,10 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.forumTypes = exports.Reply = exports.Post = exports.Thread = exports.Category = exports.OptionChildPositionInParentCategory = exports.ChildPositionInParentCategory = exports.VecReplyId = exports.ReplyId = exports.VecPostId = exports.VecThreadId = exports.VecCategoryId = exports.OptionCategoryId = exports.CategoryId = exports.OptionModerationAction = exports.VecPostTextChange = exports.PostTextChange = exports.ModerationAction = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-class ModerationAction extends common_1.JoyStructCustom({
-    moderated_at: common_1.BlockAndTime,
-    moderator_id: AccountId_1.GenericAccountId,
-    rationale: types_1.Text,
+import { bool, u32, u64, Text, Option, Vec as Vector } from '@polkadot/types';
+import { BlockAndTime, ThreadId, PostId, JoyStructCustom, JoyStructDecorated } from './common';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+export class ModerationAction extends JoyStructCustom({
+    moderated_at: BlockAndTime,
+    moderator_id: AccountId,
+    rationale: Text,
 }) {
     // FIXME: Make it JoyStructDecorated compatible
     get moderated_at() {
@@ -20,10 +17,9 @@ class ModerationAction extends common_1.JoyStructCustom({
         return this.getString('rationale');
     }
 }
-exports.ModerationAction = ModerationAction;
-class PostTextChange extends common_1.JoyStructCustom({
-    expired_at: common_1.BlockAndTime,
-    text: types_1.Text,
+export class PostTextChange extends JoyStructCustom({
+    expired_at: BlockAndTime,
+    text: Text,
 }) {
     // FIXME: Make it JoyStructDecorated compatible
     get expired_at() {
@@ -33,56 +29,44 @@ class PostTextChange extends common_1.JoyStructCustom({
         return this.getString('text');
     }
 }
-exports.PostTextChange = PostTextChange;
-class VecPostTextChange extends types_1.Vec.with(PostTextChange) {
+export class VecPostTextChange extends Vector.with(PostTextChange) {
 }
-exports.VecPostTextChange = VecPostTextChange;
-class OptionModerationAction extends types_1.Option.with(ModerationAction) {
+export class OptionModerationAction extends Option.with(ModerationAction) {
 }
-exports.OptionModerationAction = OptionModerationAction;
-class CategoryId extends types_1.u64 {
+export class CategoryId extends u64 {
 }
-exports.CategoryId = CategoryId;
-class OptionCategoryId extends types_1.Option.with(CategoryId) {
+export class OptionCategoryId extends Option.with(CategoryId) {
 }
-exports.OptionCategoryId = OptionCategoryId;
-class VecCategoryId extends types_1.Vec.with(CategoryId) {
+export class VecCategoryId extends Vector.with(CategoryId) {
 }
-exports.VecCategoryId = VecCategoryId;
-class VecThreadId extends types_1.Vec.with(common_1.ThreadId) {
+export class VecThreadId extends Vector.with(ThreadId) {
 }
-exports.VecThreadId = VecThreadId;
-class VecPostId extends types_1.Vec.with(common_1.PostId) {
+export class VecPostId extends Vector.with(PostId) {
 }
-exports.VecPostId = VecPostId;
 // TODO deprectated: replaced w/ PostId
-class ReplyId extends types_1.u64 {
+export class ReplyId extends u64 {
 }
-exports.ReplyId = ReplyId;
-class VecReplyId extends types_1.Vec.with(ReplyId) {
+export class VecReplyId extends Vector.with(ReplyId) {
 }
-exports.VecReplyId = VecReplyId;
-class ChildPositionInParentCategory extends common_1.JoyStructDecorated({
+export class ChildPositionInParentCategory extends JoyStructDecorated({
     parent_id: CategoryId,
-    child_nr_in_parent_category: types_1.u32,
+    child_nr_in_parent_category: u32,
 }) {
 }
-exports.ChildPositionInParentCategory = ChildPositionInParentCategory;
-class OptionChildPositionInParentCategory extends types_1.Option.with(ChildPositionInParentCategory) {
+export class OptionChildPositionInParentCategory extends Option.with(ChildPositionInParentCategory) {
 }
-exports.OptionChildPositionInParentCategory = OptionChildPositionInParentCategory;
-class Category extends common_1.JoyStructCustom({
+export class Category extends JoyStructCustom({
     id: CategoryId,
-    title: types_1.Text,
-    description: types_1.Text,
-    created_at: common_1.BlockAndTime,
-    deleted: types_1.bool,
-    archived: types_1.bool,
-    num_direct_subcategories: types_1.u32,
-    num_direct_unmoderated_threads: types_1.u32,
-    num_direct_moderated_threads: types_1.u32,
+    title: Text,
+    description: Text,
+    created_at: BlockAndTime,
+    deleted: bool,
+    archived: bool,
+    num_direct_subcategories: u32,
+    num_direct_unmoderated_threads: u32,
+    num_direct_moderated_threads: u32,
     position_in_parent_category: OptionChildPositionInParentCategory,
-    moderator_id: AccountId_1.GenericAccountId,
+    moderator_id: AccountId,
 }) {
     // FIXME: Make it JoyStructDecorated compatible
     get id() {
@@ -139,17 +123,16 @@ class Category extends common_1.JoyStructCustom({
         return this.getField('moderator_id');
     }
 }
-exports.Category = Category;
-class Thread extends common_1.JoyStructCustom({
-    id: common_1.ThreadId,
-    title: types_1.Text,
+export class Thread extends JoyStructCustom({
+    id: ThreadId,
+    title: Text,
     category_id: CategoryId,
-    nr_in_category: types_1.u32,
+    nr_in_category: u32,
     moderation: OptionModerationAction,
-    num_unmoderated_posts: types_1.u32,
-    num_moderated_posts: types_1.u32,
-    created_at: common_1.BlockAndTime,
-    author_id: AccountId_1.GenericAccountId,
+    num_unmoderated_posts: u32,
+    num_moderated_posts: u32,
+    created_at: BlockAndTime,
+    author_id: AccountId,
 }) {
     // FIXME: Make it JoyStructDecorated compatible
     get id() {
@@ -186,17 +169,16 @@ class Thread extends common_1.JoyStructCustom({
         return this.getField('author_id');
     }
 }
-exports.Thread = Thread;
 // TODO deprectated: replaced w/ Post
-class Post extends common_1.JoyStructCustom({
-    id: common_1.PostId,
-    thread_id: common_1.ThreadId,
-    nr_in_thread: types_1.u32,
-    current_text: types_1.Text,
+export class Post extends JoyStructCustom({
+    id: PostId,
+    thread_id: ThreadId,
+    nr_in_thread: u32,
+    current_text: Text,
     moderation: OptionModerationAction,
     text_change_history: VecPostTextChange,
-    created_at: common_1.BlockAndTime,
-    author_id: AccountId_1.GenericAccountId,
+    created_at: BlockAndTime,
+    author_id: AccountId,
 }) {
     // FIXME: Make it JoyStructDecorated compatible
     get id() {
@@ -227,12 +209,11 @@ class Post extends common_1.JoyStructCustom({
         return this.getField('author_id');
     }
 }
-exports.Post = Post;
 // TODO deprectated: replaced w/ Post
-class Reply extends common_1.JoyStructCustom({
-    owner: AccountId_1.GenericAccountId,
-    thread_id: common_1.ThreadId,
-    text: types_1.Text,
+export class Reply extends JoyStructCustom({
+    owner: AccountId,
+    thread_id: ThreadId,
+    text: Text,
     moderation: OptionModerationAction,
 }) {
     // FIXME: Make it JoyStructDecorated compatible
@@ -252,8 +233,7 @@ class Reply extends common_1.JoyStructCustom({
         return this.moderation !== null;
     }
 }
-exports.Reply = Reply;
-exports.forumTypes = {
+export const forumTypes = {
     PostTextChange,
     ModerationAction,
     ChildPositionInParentCategory,
@@ -264,4 +244,4 @@ exports.forumTypes = {
     ReplyId,
     Reply,
 };
-exports.default = exports.forumTypes;
+export default forumTypes;
diff --git a/hiring/index.js b/hiring/index.js
index 3e0f2cdfab06344e130c9d3ff8f3c05e017ad304..94da831d4a3187bd0f7523a85cf6168947b4a37d 100644
--- a/hiring/index.js
+++ b/hiring/index.js
@@ -1,58 +1,28 @@
-"use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
-    Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
-    o["default"] = v;
-});
-var __importStar = (this && this.__importStar) || function (mod) {
-    if (mod && mod.__esModule) return mod;
-    var result = {};
-    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
-    __setModuleDefault(result, mod);
-    return result;
-};
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.hiringTypes = exports.Application = exports.Opening = exports.schemaValidator = exports.StakingPolicy = exports.StakingAmountLimitMode = exports.StakingAmountLimitModeDef = exports.StakingAmountLimitModeKeys = exports.OpeningStage = exports.OpeningStageDef = exports.OpeningStageKeys = exports.ActiveOpeningStageVariant = exports.ActiveOpeningStage = exports.ActiveOpeningStageDef = exports.Deactivated = exports.ReviewPeriod = exports.AcceptingApplications = exports.OpeningDeactivationCause = exports.OpeningDeactivationCauseKeys = exports.WaitingToBeingOpeningStageVariant = exports.ApplicationRationingPolicy = exports.ApplicationStage = exports.ApplicationStageDef = exports.ApplicationStageKeys = exports.ActiveApplicationStage = exports.InactiveApplicationStage = exports.UnstakingApplicationStage = exports.ApplicationDeactivationCause = exports.ApplicationDeactivationCauseKeys = exports.ActivateOpeningAt = exports.ActivateOpeningAtKeys = exports.ActivateOpeningAtDef = exports.ExactBlock = exports.CurrentBlock = exports.OpeningId = exports.ApplicationId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("../common");
-const stake_1 = require("../stake");
-const ajv_1 = __importDefault(require("ajv"));
-const role_schema_json = __importStar(require("./schemas/role.schema.json"));
-class ApplicationId extends types_1.u64 {
+import { Null, u128, u64, u32, Option, Text } from '@polkadot/types';
+import { JoyBTreeSet, JoyEnum, JoyStructDecorated } from '../common';
+import { StakeId } from '../stake';
+import Ajv from 'ajv';
+import * as role_schema_json from './schemas/role.schema.json';
+export class ApplicationId extends u64 {
 }
-exports.ApplicationId = ApplicationId;
-class OpeningId extends types_1.u64 {
+export class OpeningId extends u64 {
 }
-exports.OpeningId = OpeningId;
-class CurrentBlock extends types_1.Null {
+export class CurrentBlock extends Null {
 }
-exports.CurrentBlock = CurrentBlock;
-class ExactBlock extends types_1.u32 {
+export class ExactBlock extends u32 {
 } // BlockNumber
-exports.ExactBlock = ExactBlock;
-exports.ActivateOpeningAtDef = {
+export const ActivateOpeningAtDef = {
     CurrentBlock,
     ExactBlock,
 };
-exports.ActivateOpeningAtKeys = {
+export const ActivateOpeningAtKeys = {
     CurrentBlock: 'CurrentBlock',
     ExactBlock: 'ExactBlock',
 };
-class ActivateOpeningAt extends common_1.JoyEnum(exports.ActivateOpeningAtDef) {
+export class ActivateOpeningAt extends JoyEnum(ActivateOpeningAtDef) {
 }
-exports.ActivateOpeningAt = ActivateOpeningAt;
 // FIXME: Replace usages with isOfType, asType wherever possible
-var ApplicationDeactivationCauseKeys;
+export var ApplicationDeactivationCauseKeys;
 (function (ApplicationDeactivationCauseKeys) {
     ApplicationDeactivationCauseKeys["External"] = "External";
     ApplicationDeactivationCauseKeys["Hired"] = "Hired";
@@ -61,153 +31,137 @@ var ApplicationDeactivationCauseKeys;
     ApplicationDeactivationCauseKeys["OpeningCancelled"] = "OpeningCancelled";
     ApplicationDeactivationCauseKeys["ReviewPeriodExpired"] = "ReviewPeriodExpired";
     ApplicationDeactivationCauseKeys["OpeningFilled"] = "OpeningFilled";
-})(ApplicationDeactivationCauseKeys = exports.ApplicationDeactivationCauseKeys || (exports.ApplicationDeactivationCauseKeys = {}));
+})(ApplicationDeactivationCauseKeys || (ApplicationDeactivationCauseKeys = {}));
 const ApplicationDeactivationCauseDef = {
-    External: types_1.Null,
-    Hired: types_1.Null,
-    NotHired: types_1.Null,
-    CrowdedOut: types_1.Null,
-    OpeningCancelled: types_1.Null,
-    ReviewPeriodExpired: types_1.Null,
-    OpeningFilled: types_1.Null,
+    External: Null,
+    Hired: Null,
+    NotHired: Null,
+    CrowdedOut: Null,
+    OpeningCancelled: Null,
+    ReviewPeriodExpired: Null,
+    OpeningFilled: Null,
 };
-class ApplicationDeactivationCause extends common_1.JoyEnum(ApplicationDeactivationCauseDef) {
+export class ApplicationDeactivationCause extends JoyEnum(ApplicationDeactivationCauseDef) {
 }
-exports.ApplicationDeactivationCause = ApplicationDeactivationCause;
-class UnstakingApplicationStage extends common_1.JoyStructDecorated({
-    deactivation_initiated: types_1.u32,
+export class UnstakingApplicationStage extends JoyStructDecorated({
+    deactivation_initiated: u32,
     cause: ApplicationDeactivationCause,
 }) {
 }
-exports.UnstakingApplicationStage = UnstakingApplicationStage;
-class InactiveApplicationStage extends common_1.JoyStructDecorated({
-    deactivation_initiated: types_1.u32,
-    deactivated: types_1.u32,
+export class InactiveApplicationStage extends JoyStructDecorated({
+    deactivation_initiated: u32,
+    deactivated: u32,
     cause: ApplicationDeactivationCause,
 }) {
 }
-exports.InactiveApplicationStage = InactiveApplicationStage;
-class ActiveApplicationStage extends types_1.Null {
+export class ActiveApplicationStage extends Null {
 }
-exports.ActiveApplicationStage = ActiveApplicationStage;
 // FIXME: Replace usages with isOfType, asType wherever possible
-var ApplicationStageKeys;
+export var ApplicationStageKeys;
 (function (ApplicationStageKeys) {
     ApplicationStageKeys["Active"] = "Active";
     ApplicationStageKeys["Unstaking"] = "Unstaking";
     ApplicationStageKeys["Inactive"] = "Inactive";
-})(ApplicationStageKeys = exports.ApplicationStageKeys || (exports.ApplicationStageKeys = {}));
-exports.ApplicationStageDef = {
+})(ApplicationStageKeys || (ApplicationStageKeys = {}));
+export const ApplicationStageDef = {
     Active: ActiveApplicationStage,
     Unstaking: UnstakingApplicationStage,
     Inactive: InactiveApplicationStage,
 };
-class ApplicationStage extends common_1.JoyEnum(exports.ApplicationStageDef) {
+export class ApplicationStage extends JoyEnum(ApplicationStageDef) {
 }
-exports.ApplicationStage = ApplicationStage;
-class ApplicationRationingPolicy extends common_1.JoyStructDecorated({
-    max_active_applicants: types_1.u32,
+export class ApplicationRationingPolicy extends JoyStructDecorated({
+    max_active_applicants: u32,
 }) {
 }
-exports.ApplicationRationingPolicy = ApplicationRationingPolicy;
-class WaitingToBeingOpeningStageVariant extends common_1.JoyStructDecorated({
-    begins_at_block: types_1.u32,
+export class WaitingToBeingOpeningStageVariant extends JoyStructDecorated({
+    begins_at_block: u32,
 }) {
 }
-exports.WaitingToBeingOpeningStageVariant = WaitingToBeingOpeningStageVariant;
 // FIXME: Replace usages with isOfType, asType wherever possible
-var OpeningDeactivationCauseKeys;
+export var OpeningDeactivationCauseKeys;
 (function (OpeningDeactivationCauseKeys) {
     OpeningDeactivationCauseKeys["CancelledBeforeActivation"] = "CancelledBeforeActivation";
     OpeningDeactivationCauseKeys["CancelledAcceptingApplications"] = "CancelledAcceptingApplications";
     OpeningDeactivationCauseKeys["CancelledInReviewPeriod"] = "CancelledInReviewPeriod";
     OpeningDeactivationCauseKeys["ReviewPeriodExpired"] = "ReviewPeriodExpired";
     OpeningDeactivationCauseKeys["Filled"] = "Filled";
-})(OpeningDeactivationCauseKeys = exports.OpeningDeactivationCauseKeys || (exports.OpeningDeactivationCauseKeys = {}));
+})(OpeningDeactivationCauseKeys || (OpeningDeactivationCauseKeys = {}));
 const OpeningDeactivationCauseDef = {
-    CancelledBeforeActivation: types_1.Null,
-    CancelledAcceptingApplications: types_1.Null,
-    CancelledInReviewPeriod: types_1.Null,
-    ReviewPeriodExpired: types_1.Null,
-    Filled: types_1.Null,
+    CancelledBeforeActivation: Null,
+    CancelledAcceptingApplications: Null,
+    CancelledInReviewPeriod: Null,
+    ReviewPeriodExpired: Null,
+    Filled: Null,
 };
-class OpeningDeactivationCause extends common_1.JoyEnum(OpeningDeactivationCauseDef) {
+export class OpeningDeactivationCause extends JoyEnum(OpeningDeactivationCauseDef) {
 }
-exports.OpeningDeactivationCause = OpeningDeactivationCause;
-class AcceptingApplications extends common_1.JoyStructDecorated({
-    started_accepting_applicants_at_block: types_1.u32,
+export class AcceptingApplications extends JoyStructDecorated({
+    started_accepting_applicants_at_block: u32,
 }) {
 }
-exports.AcceptingApplications = AcceptingApplications;
-class ReviewPeriod extends common_1.JoyStructDecorated({
-    started_accepting_applicants_at_block: types_1.u32,
-    started_review_period_at_block: types_1.u32,
+export class ReviewPeriod extends JoyStructDecorated({
+    started_accepting_applicants_at_block: u32,
+    started_review_period_at_block: u32,
 }) {
 }
-exports.ReviewPeriod = ReviewPeriod;
-class Deactivated extends common_1.JoyStructDecorated({
+export class Deactivated extends JoyStructDecorated({
     cause: OpeningDeactivationCause,
-    deactivated_at_block: types_1.u32,
-    started_accepting_applicants_at_block: types_1.u32,
-    started_review_period_at_block: types_1.Option.with(types_1.u32),
+    deactivated_at_block: u32,
+    started_accepting_applicants_at_block: u32,
+    started_review_period_at_block: Option.with(u32),
 }) {
 }
-exports.Deactivated = Deactivated;
-exports.ActiveOpeningStageDef = {
+export const ActiveOpeningStageDef = {
     AcceptingApplications: AcceptingApplications,
     ReviewPeriod: ReviewPeriod,
     Deactivated: Deactivated,
 };
-class ActiveOpeningStage extends common_1.JoyEnum(exports.ActiveOpeningStageDef) {
+export class ActiveOpeningStage extends JoyEnum(ActiveOpeningStageDef) {
 }
-exports.ActiveOpeningStage = ActiveOpeningStage;
-class ActiveOpeningStageVariant extends common_1.JoyStructDecorated({
+export class ActiveOpeningStageVariant extends JoyStructDecorated({
     stage: ActiveOpeningStage,
-    applications_added: common_1.JoyBTreeSet(ApplicationId),
-    active_application_count: types_1.u32,
-    unstaking_application_count: types_1.u32,
-    deactivated_application_count: types_1.u32,
+    applications_added: JoyBTreeSet(ApplicationId),
+    active_application_count: u32,
+    unstaking_application_count: u32,
+    deactivated_application_count: u32,
 }) {
     get is_active() {
         return this.stage.isOfType('AcceptingApplications');
     }
 }
-exports.ActiveOpeningStageVariant = ActiveOpeningStageVariant;
 // FIXME: Replace usages with isOfType, asType wherever possible
-var OpeningStageKeys;
+export var OpeningStageKeys;
 (function (OpeningStageKeys) {
     OpeningStageKeys["WaitingToBegin"] = "WaitingToBegin";
     OpeningStageKeys["Active"] = "Active";
-})(OpeningStageKeys = exports.OpeningStageKeys || (exports.OpeningStageKeys = {}));
-exports.OpeningStageDef = {
+})(OpeningStageKeys || (OpeningStageKeys = {}));
+export const OpeningStageDef = {
     WaitingToBegin: WaitingToBeingOpeningStageVariant,
     Active: ActiveOpeningStageVariant,
 };
-class OpeningStage extends common_1.JoyEnum(exports.OpeningStageDef) {
+export class OpeningStage extends JoyEnum(OpeningStageDef) {
 }
-exports.OpeningStage = OpeningStage;
 // FIXME: Replace usages with isOfType, asType wherever possible
-var StakingAmountLimitModeKeys;
+export var StakingAmountLimitModeKeys;
 (function (StakingAmountLimitModeKeys) {
     StakingAmountLimitModeKeys["AtLeast"] = "AtLeast";
     StakingAmountLimitModeKeys["Exact"] = "Exact";
-})(StakingAmountLimitModeKeys = exports.StakingAmountLimitModeKeys || (exports.StakingAmountLimitModeKeys = {}));
-exports.StakingAmountLimitModeDef = {
-    AtLeast: types_1.Null,
-    Exact: types_1.Null,
+})(StakingAmountLimitModeKeys || (StakingAmountLimitModeKeys = {}));
+export const StakingAmountLimitModeDef = {
+    AtLeast: Null,
+    Exact: Null,
 };
-class StakingAmountLimitMode extends common_1.JoyEnum(exports.StakingAmountLimitModeDef) {
+export class StakingAmountLimitMode extends JoyEnum(StakingAmountLimitModeDef) {
 }
-exports.StakingAmountLimitMode = StakingAmountLimitMode;
-class StakingPolicy extends common_1.JoyStructDecorated({
-    amount: types_1.u128,
+export class StakingPolicy extends JoyStructDecorated({
+    amount: u128,
     amount_mode: StakingAmountLimitMode,
-    crowded_out_unstaking_period_length: types_1.Option.with(types_1.u32),
-    review_period_expired_unstaking_period_length: types_1.Option.with(types_1.u32),
+    crowded_out_unstaking_period_length: Option.with(u32),
+    review_period_expired_unstaking_period_length: Option.with(u32),
 }) {
 }
-exports.StakingPolicy = StakingPolicy;
-exports.schemaValidator = new ajv_1.default({ allErrors: true }).compile(role_schema_json);
+export const schemaValidator = new Ajv({ allErrors: true }).compile(role_schema_json);
 function openingHRTFallback(title = 'Working Group Opening', description = '') {
     return {
         version: 1,
@@ -225,14 +179,14 @@ function openingHRTFallback(title = 'Working Group Opening', description = '') {
         },
     };
 }
-class Opening extends common_1.JoyStructDecorated({
-    created: types_1.u32,
+export class Opening extends JoyStructDecorated({
+    created: u32,
     stage: OpeningStage,
-    max_review_period_length: types_1.u32,
-    application_rationing_policy: types_1.Option.with(ApplicationRationingPolicy),
-    application_staking_policy: types_1.Option.with(StakingPolicy),
-    role_staking_policy: types_1.Option.with(StakingPolicy),
-    human_readable_text: types_1.Text,
+    max_review_period_length: u32,
+    application_rationing_policy: Option.with(ApplicationRationingPolicy),
+    application_staking_policy: Option.with(StakingPolicy),
+    role_staking_policy: Option.with(StakingPolicy),
+    human_readable_text: Text,
 }) {
     parse_human_readable_text() {
         const hrt = this.human_readable_text;
@@ -242,10 +196,10 @@ class Opening extends common_1.JoyStructDecorated({
         const str = hrt.toString();
         try {
             const obj = JSON.parse(str);
-            if (exports.schemaValidator(obj) === true) {
+            if (schemaValidator(obj) === true) {
                 return obj;
             }
-            console.log('parse_human_readable_text JSON schema validation failed:', exports.schemaValidator.errors);
+            console.log('parse_human_readable_text JSON schema validation failed:', schemaValidator.errors);
         }
         catch (e) {
             console.log('parse_human_readable_text JSON schema validation failed:', e.toString());
@@ -276,19 +230,17 @@ class Opening extends common_1.JoyStructDecorated({
         return false;
     }
 }
-exports.Opening = Opening;
-class Application extends common_1.JoyStructDecorated({
+export class Application extends JoyStructDecorated({
     opening_id: OpeningId,
-    application_index_in_opening: types_1.u32,
-    add_to_opening_in_block: types_1.u32,
-    active_role_staking_id: types_1.Option.with(stake_1.StakeId),
-    active_application_staking_id: types_1.Option.with(stake_1.StakeId),
+    application_index_in_opening: u32,
+    add_to_opening_in_block: u32,
+    active_role_staking_id: Option.with(StakeId),
+    active_application_staking_id: Option.with(StakeId),
     stage: ApplicationStage,
-    human_readable_text: types_1.Text,
+    human_readable_text: Text,
 }) {
 }
-exports.Application = Application;
-exports.hiringTypes = {
+export const hiringTypes = {
     ApplicationId,
     OpeningId,
     Application,
@@ -311,4 +263,4 @@ exports.hiringTypes = {
     ApplicationDeactivationCause,
     StakingAmountLimitMode,
 };
-exports.default = exports.hiringTypes;
+export default hiringTypes;
diff --git a/hiring/schemas/role.schema.typings.js b/hiring/schemas/role.schema.typings.js
index 5383a370094cdf776e6fc467d970cdd536468f4d..2fbf7acd994ee872d1444010e464b25591f0819d 100644
--- a/hiring/schemas/role.schema.typings.js
+++ b/hiring/schemas/role.schema.typings.js
@@ -1,8 +1,6 @@
-"use strict";
 /* tslint:disable */
 /**
  * This file was automatically generated by json-schema-to-typescript.
  * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
  * and run json-schema-to-typescript to regenerate this file.
  */
-Object.defineProperty(exports, "__esModule", { value: true });
diff --git a/index.js b/index.js
index 34c80efe2592cc93db1bc988671ce5c7e3c34d98..3e2384d7962146fa7e188cfdc3bb611f9d989918 100644
--- a/index.js
+++ b/index.js
@@ -1,58 +1,39 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.createType = exports.registry = exports.types = exports.content = exports.proposals = exports.storage = exports.workingGroup = exports.hiring = exports.recurringRewards = exports.mint = exports.stake = exports.forum = exports.roles = exports.council = exports.members = exports.common = void 0;
-const common_1 = __importDefault(require("./common"));
-exports.common = common_1.default;
-const members_1 = __importDefault(require("./members"));
-exports.members = members_1.default;
-const council_1 = __importDefault(require("./council"));
-exports.council = council_1.default;
-const roles_1 = __importDefault(require("./roles"));
-exports.roles = roles_1.default;
-const forum_1 = __importDefault(require("./forum"));
-exports.forum = forum_1.default;
-const stake_1 = __importDefault(require("./stake"));
-exports.stake = stake_1.default;
-const mint_1 = __importDefault(require("./mint"));
-exports.mint = mint_1.default;
-const recurring_rewards_1 = __importDefault(require("./recurring-rewards"));
-exports.recurringRewards = recurring_rewards_1.default;
-const hiring_1 = __importDefault(require("./hiring"));
-exports.hiring = hiring_1.default;
-const working_group_1 = __importDefault(require("./working-group"));
-exports.workingGroup = working_group_1.default;
-const storage_1 = __importDefault(require("./storage"));
-exports.storage = storage_1.default;
-const proposals_1 = __importDefault(require("./proposals"));
-exports.proposals = proposals_1.default;
-const content_1 = __importDefault(require("./content"));
-exports.content = content_1.default;
-const legacy_1 = __importDefault(require("./legacy"));
-const types_1 = require("@polkadot/types");
-exports.types = {
+import common from './common';
+import members from './members';
+import council from './council';
+import roles from './roles';
+import forum from './forum';
+import stake from './stake';
+import mint from './mint';
+import recurringRewards from './recurring-rewards';
+import hiring from './hiring';
+import workingGroup from './working-group';
+import storage from './storage';
+import proposals from './proposals';
+import content from './content';
+import legacy from './legacy';
+import { TypeRegistry } from '@polkadot/types';
+export { common, members, council, roles, forum, stake, mint, recurringRewards, hiring, workingGroup, storage, proposals, content, };
+export const types = {
     // legacy types comes first so they are overriden by proper definitions in new modules
-    ...legacy_1.default,
-    ...common_1.default,
-    ...members_1.default,
-    ...council_1.default,
-    ...roles_1.default,
-    ...forum_1.default,
-    ...stake_1.default,
-    ...mint_1.default,
-    ...recurring_rewards_1.default,
-    ...hiring_1.default,
-    ...working_group_1.default,
-    ...storage_1.default,
-    ...proposals_1.default,
-    ...content_1.default,
+    ...legacy,
+    ...common,
+    ...members,
+    ...council,
+    ...roles,
+    ...forum,
+    ...stake,
+    ...mint,
+    ...recurringRewards,
+    ...hiring,
+    ...workingGroup,
+    ...storage,
+    ...proposals,
+    ...content,
 };
 // Allows creating types without api instance (it's not a recommended way though, so should be used just for mocks)
-exports.registry = new types_1.TypeRegistry();
-exports.registry.register(exports.types);
-function createType(type, value) {
-    return exports.registry.createType(type, value);
+export const registry = new TypeRegistry();
+registry.register(types);
+export function createType(type, value) {
+    return registry.createType(type, value);
 }
-exports.createType = createType;
diff --git a/legacy.js b/legacy.js
index 65f1c3c7dab4b8c3131123eeac21586e056785fe..6e555c3d2f63c19f23edeab1da2b5da751572fdc 100644
--- a/legacy.js
+++ b/legacy.js
@@ -1,4 +1,3 @@
-"use strict";
 /*
   Legacy types in Babylon runtime of unused modules:
     - version-store
@@ -15,220 +14,149 @@
 
   In the following runtime upgrade (after "Sumer" release), remove these types entierly.
 */
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.legacyTypes = exports.ServiceProviderRecord = exports.IPNSIdentity = exports.FailedAt = exports.InputEntityValuesMap = exports.ReferenceConstraint = exports.Operation = exports.ClassPropertyValue = exports.ClassPermissionsType = exports.OperationType = exports.AddSchemaSupportToEntityOperation = exports.UpdatePropertyValuesOperation = exports.CreateEntityOperation = exports.ParametrizedClassPropertyValue = exports.ParametrizedPropertyValue = exports.ParameterizedEntity = exports.InputPropertyValue = exports.VecInputValue = exports.InputValue = exports.Status = exports.SideEffect = exports.SideEffects = exports.ReferenceCounterSideEffects = exports.EntityReferenceCounterSideEffect = exports.EntityCreationVoucher = exports.Entity = exports.InboundReferenceCounter = exports.StoredPropertyValue = exports.VecStoredPropertyValue = exports.VecStoredValue = exports.StoredValue = exports.EntityPermissions = exports.EntityController = exports.Class = exports.Schema = exports.Property = exports.PropertyLockingPolicy = exports.PropertyType = exports.PropertyTypeVector = exports.PropertyTypeSingle = exports.ClassPermissions = exports.SameController = exports.SchemaId = exports.PropertyId = exports.HashedTextMaxLength = exports.TextMaxLength = exports.VecMaxLength = exports.ClassId = exports.EntityId = exports.Nonce = exports.Actor = exports.CredentialSet = exports.Credential = exports.WorkingGroupUnstaker = exports.PrincipalId = exports.Principal = exports.OptionalText = exports.LeadId = exports.Lead = exports.CuratorOpeningId = exports.CuratorOpening = exports.CuratorApplicationIdToCuratorIdMap = exports.CuratorApplicationIdSet = exports.CuratorApplicationId = exports.CuratorApplication = exports.Curator = exports.CurationActor = exports.ChannelPublicationStatus = exports.ChannelCurationStatus = exports.ChannelContentType = void 0;
-const types_1 = require("@polkadot/types");
+import { Null } from '@polkadot/types';
 // from: versioned-store, versioned-store permissions, content-working-group
-class ChannelContentType extends types_1.Null {
+export class ChannelContentType extends Null {
 }
-exports.ChannelContentType = ChannelContentType;
-class ChannelCurationStatus extends types_1.Null {
+export class ChannelCurationStatus extends Null {
 }
-exports.ChannelCurationStatus = ChannelCurationStatus;
-class ChannelPublicationStatus extends types_1.Null {
+export class ChannelPublicationStatus extends Null {
 }
-exports.ChannelPublicationStatus = ChannelPublicationStatus;
-class CurationActor extends types_1.Null {
+export class CurationActor extends Null {
 }
-exports.CurationActor = CurationActor;
-class Curator extends types_1.Null {
+export class Curator extends Null {
 }
-exports.Curator = Curator;
-class CuratorApplication extends types_1.Null {
+export class CuratorApplication extends Null {
 }
-exports.CuratorApplication = CuratorApplication;
-class CuratorApplicationId extends types_1.Null {
+export class CuratorApplicationId extends Null {
 }
-exports.CuratorApplicationId = CuratorApplicationId;
-class CuratorApplicationIdSet extends types_1.Null {
+export class CuratorApplicationIdSet extends Null {
 }
-exports.CuratorApplicationIdSet = CuratorApplicationIdSet;
-class CuratorApplicationIdToCuratorIdMap extends types_1.Null {
+export class CuratorApplicationIdToCuratorIdMap extends Null {
 }
-exports.CuratorApplicationIdToCuratorIdMap = CuratorApplicationIdToCuratorIdMap;
-class CuratorOpening extends types_1.Null {
+export class CuratorOpening extends Null {
 }
-exports.CuratorOpening = CuratorOpening;
-class CuratorOpeningId extends types_1.Null {
+export class CuratorOpeningId extends Null {
 }
-exports.CuratorOpeningId = CuratorOpeningId;
-class Lead extends types_1.Null {
+export class Lead extends Null {
 }
-exports.Lead = Lead;
-class LeadId extends types_1.Null {
+export class LeadId extends Null {
 }
-exports.LeadId = LeadId;
-class OptionalText extends types_1.Null {
+export class OptionalText extends Null {
 }
-exports.OptionalText = OptionalText;
-class Principal extends types_1.Null {
+export class Principal extends Null {
 }
-exports.Principal = Principal;
-class PrincipalId extends types_1.Null {
+export class PrincipalId extends Null {
 }
-exports.PrincipalId = PrincipalId;
-class WorkingGroupUnstaker extends types_1.Null {
+export class WorkingGroupUnstaker extends Null {
 }
-exports.WorkingGroupUnstaker = WorkingGroupUnstaker;
-class Credential extends types_1.Null {
+export class Credential extends Null {
 }
-exports.Credential = Credential;
-class CredentialSet extends types_1.Null {
+export class CredentialSet extends Null {
 }
-exports.CredentialSet = CredentialSet;
 // from: old content-directory
-class Actor extends types_1.Null {
+export class Actor extends Null {
 }
-exports.Actor = Actor;
-class Nonce extends types_1.Null {
+export class Nonce extends Null {
 }
-exports.Nonce = Nonce;
-class EntityId extends types_1.Null {
+export class EntityId extends Null {
 }
-exports.EntityId = EntityId;
-class ClassId extends types_1.Null {
+export class ClassId extends Null {
 }
-exports.ClassId = ClassId;
-class VecMaxLength extends types_1.Null {
+export class VecMaxLength extends Null {
 }
-exports.VecMaxLength = VecMaxLength;
-class TextMaxLength extends types_1.Null {
+export class TextMaxLength extends Null {
 }
-exports.TextMaxLength = TextMaxLength;
-class HashedTextMaxLength extends types_1.Null {
+export class HashedTextMaxLength extends Null {
 }
-exports.HashedTextMaxLength = HashedTextMaxLength;
-class PropertyId extends types_1.Null {
+export class PropertyId extends Null {
 }
-exports.PropertyId = PropertyId;
-class SchemaId extends types_1.Null {
+export class SchemaId extends Null {
 }
-exports.SchemaId = SchemaId;
-class SameController extends types_1.Null {
+export class SameController extends Null {
 }
-exports.SameController = SameController;
-class ClassPermissions extends types_1.Null {
+export class ClassPermissions extends Null {
 }
-exports.ClassPermissions = ClassPermissions;
-class PropertyTypeSingle extends types_1.Null {
+export class PropertyTypeSingle extends Null {
 }
-exports.PropertyTypeSingle = PropertyTypeSingle;
-class PropertyTypeVector extends types_1.Null {
+export class PropertyTypeVector extends Null {
 }
-exports.PropertyTypeVector = PropertyTypeVector;
-class PropertyType extends types_1.Null {
+export class PropertyType extends Null {
 }
-exports.PropertyType = PropertyType;
-class PropertyLockingPolicy extends types_1.Null {
+export class PropertyLockingPolicy extends Null {
 }
-exports.PropertyLockingPolicy = PropertyLockingPolicy;
-class Property extends types_1.Null {
+export class Property extends Null {
 }
-exports.Property = Property;
-class Schema extends types_1.Null {
+export class Schema extends Null {
 }
-exports.Schema = Schema;
-class Class extends types_1.Null {
+export class Class extends Null {
 }
-exports.Class = Class;
-class EntityController extends types_1.Null {
+export class EntityController extends Null {
 }
-exports.EntityController = EntityController;
-class EntityPermissions extends types_1.Null {
+export class EntityPermissions extends Null {
 }
-exports.EntityPermissions = EntityPermissions;
-class StoredValue extends types_1.Null {
+export class StoredValue extends Null {
 }
-exports.StoredValue = StoredValue;
-class VecStoredValue extends types_1.Null {
+export class VecStoredValue extends Null {
 }
-exports.VecStoredValue = VecStoredValue;
-class VecStoredPropertyValue extends types_1.Null {
+export class VecStoredPropertyValue extends Null {
 }
-exports.VecStoredPropertyValue = VecStoredPropertyValue;
-class StoredPropertyValue extends types_1.Null {
+export class StoredPropertyValue extends Null {
 }
-exports.StoredPropertyValue = StoredPropertyValue;
-class InboundReferenceCounter extends types_1.Null {
+export class InboundReferenceCounter extends Null {
 }
-exports.InboundReferenceCounter = InboundReferenceCounter;
-class Entity extends types_1.Null {
+export class Entity extends Null {
 }
-exports.Entity = Entity;
-class EntityCreationVoucher extends types_1.Null {
+export class EntityCreationVoucher extends Null {
 }
-exports.EntityCreationVoucher = EntityCreationVoucher;
-class EntityReferenceCounterSideEffect extends types_1.Null {
+export class EntityReferenceCounterSideEffect extends Null {
 }
-exports.EntityReferenceCounterSideEffect = EntityReferenceCounterSideEffect;
-class ReferenceCounterSideEffects extends types_1.Null {
+export class ReferenceCounterSideEffects extends Null {
 }
-exports.ReferenceCounterSideEffects = ReferenceCounterSideEffects;
-class SideEffects extends types_1.Null {
+export class SideEffects extends Null {
 }
-exports.SideEffects = SideEffects;
-class SideEffect extends types_1.Null {
+export class SideEffect extends Null {
 }
-exports.SideEffect = SideEffect;
-class Status extends types_1.Null {
+export class Status extends Null {
 }
-exports.Status = Status;
-class InputValue extends types_1.Null {
+export class InputValue extends Null {
 }
-exports.InputValue = InputValue;
-class VecInputValue extends types_1.Null {
+export class VecInputValue extends Null {
 }
-exports.VecInputValue = VecInputValue;
-class InputPropertyValue extends types_1.Null {
+export class InputPropertyValue extends Null {
 }
-exports.InputPropertyValue = InputPropertyValue;
-class ParameterizedEntity extends types_1.Null {
+export class ParameterizedEntity extends Null {
 }
-exports.ParameterizedEntity = ParameterizedEntity;
-class ParametrizedPropertyValue extends types_1.Null {
+export class ParametrizedPropertyValue extends Null {
 }
-exports.ParametrizedPropertyValue = ParametrizedPropertyValue;
-class ParametrizedClassPropertyValue extends types_1.Null {
+export class ParametrizedClassPropertyValue extends Null {
 }
-exports.ParametrizedClassPropertyValue = ParametrizedClassPropertyValue;
-class CreateEntityOperation extends types_1.Null {
+export class CreateEntityOperation extends Null {
 }
-exports.CreateEntityOperation = CreateEntityOperation;
-class UpdatePropertyValuesOperation extends types_1.Null {
+export class UpdatePropertyValuesOperation extends Null {
 }
-exports.UpdatePropertyValuesOperation = UpdatePropertyValuesOperation;
-class AddSchemaSupportToEntityOperation extends types_1.Null {
+export class AddSchemaSupportToEntityOperation extends Null {
 }
-exports.AddSchemaSupportToEntityOperation = AddSchemaSupportToEntityOperation;
-class OperationType extends types_1.Null {
+export class OperationType extends Null {
 }
-exports.OperationType = OperationType;
-class ClassPermissionsType extends types_1.Null {
+export class ClassPermissionsType extends Null {
 }
-exports.ClassPermissionsType = ClassPermissionsType;
-class ClassPropertyValue extends types_1.Null {
+export class ClassPropertyValue extends Null {
 }
-exports.ClassPropertyValue = ClassPropertyValue;
-class Operation extends types_1.Null {
+export class Operation extends Null {
 }
-exports.Operation = Operation;
-class ReferenceConstraint extends types_1.Null {
+export class ReferenceConstraint extends Null {
 }
-exports.ReferenceConstraint = ReferenceConstraint;
-class InputEntityValuesMap extends types_1.Null {
+export class InputEntityValuesMap extends Null {
 }
-exports.InputEntityValuesMap = InputEntityValuesMap;
-class FailedAt extends types_1.Null {
+export class FailedAt extends Null {
 }
-exports.FailedAt = FailedAt;
 // From discovery_service
-class IPNSIdentity extends types_1.Null {
+export class IPNSIdentity extends Null {
 }
-exports.IPNSIdentity = IPNSIdentity;
-class ServiceProviderRecord extends types_1.Null {
+export class ServiceProviderRecord extends Null {
 }
-exports.ServiceProviderRecord = ServiceProviderRecord;
-exports.legacyTypes = {
+export const legacyTypes = {
     ChannelContentType,
     ChannelCurationStatus,
     ChannelPublicationStatus,
@@ -301,4 +229,4 @@ exports.legacyTypes = {
     IPNSIdentity,
     ServiceProviderRecord,
 };
-exports.default = exports.legacyTypes;
+export default legacyTypes;
diff --git a/media.d.ts b/media.d.ts
deleted file mode 100644
index 1672d5486b570681ebd64f655b25d689dfc6f446..0000000000000000000000000000000000000000
--- a/media.d.ts
+++ /dev/null
@@ -1,65 +0,0 @@
-import { Option, Vec as Vector, u64, bool, Text, Null } from '@polkadot/types';
-import { BlockAndTime, Hash } from './common';
-import { MemberId } from './members';
-import { StorageProviderId } from './working-group';
-import { RegistryTypes, Registry } from '@polkadot/types/types';
-export declare class ContentId extends Hash {
-    static generate(registry: Registry): ContentId;
-    static decode(registry: Registry, contentId: string): ContentId;
-    static encode(contentId: Uint8Array): string;
-    encode(): string;
-}
-export declare class DataObjectTypeId extends u64 {
-}
-export declare class DataObjectStorageRelationshipId extends u64 {
-}
-declare const VecContentId_base: import("@polkadot/types/types").Constructor<Vector<ContentId>>;
-export declare class VecContentId extends VecContentId_base {
-}
-declare const OptionVecContentId_base: import("@polkadot/types/types").Constructor<Option<VecContentId>>;
-export declare class OptionVecContentId extends OptionVecContentId_base {
-}
-export declare const LiaisonJudgementDef: {
-    readonly Pending: typeof Null;
-    readonly Accepted: typeof Null;
-    readonly Rejected: typeof Null;
-};
-export declare type LiaisonJudgementKey = keyof typeof LiaisonJudgementDef;
-declare const LiaisonJudgement_base: import("./JoyEnum").ExtendedEnumConstructor<{
-    readonly Pending: typeof Null;
-    readonly Accepted: typeof Null;
-    readonly Rejected: typeof Null;
-}>;
-export declare class LiaisonJudgement extends LiaisonJudgement_base {
-}
-declare const DataObject_base: import("./JoyStruct").ExtendedStructDecoratedConstructor<{
-    owner: typeof MemberId;
-    added_at: typeof BlockAndTime;
-    type_id: typeof DataObjectTypeId;
-    size: typeof u64;
-    liaison: typeof StorageProviderId;
-    liaison_judgement: typeof LiaisonJudgement;
-    ipfs_content_id: typeof Text;
-}>;
-export declare class DataObject extends DataObject_base {
-    /** Actually it's 'size', but 'size' is already reserved by a parent class. */
-    get size_in_bytes(): u64;
-}
-declare const DataObjectStorageRelationship_base: import("./JoyStruct").ExtendedStructDecoratedConstructor<{
-    content_id: typeof ContentId;
-    storage_provider: typeof StorageProviderId;
-    ready: typeof bool;
-}>;
-export declare class DataObjectStorageRelationship extends DataObjectStorageRelationship_base {
-}
-declare const DataObjectType_base: import("./JoyStruct").ExtendedStructDecoratedConstructor<{
-    description: typeof Text;
-    active: typeof bool;
-}>;
-export declare class DataObjectType extends DataObjectType_base {
-}
-declare const DataObjectsMap_base: import("@polkadot/types/types").Constructor<import("@polkadot/types").CodecMap<ContentId, DataObject>>;
-export declare class DataObjectsMap extends DataObjectsMap_base {
-}
-export declare const mediaTypes: RegistryTypes;
-export default mediaTypes;
diff --git a/media.js b/media.js
deleted file mode 100644
index f9f4585408ddd55386f811690c9528e00559c4f6..0000000000000000000000000000000000000000
--- a/media.js
+++ /dev/null
@@ -1,88 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.mediaTypes = exports.DataObjectsMap = exports.DataObjectType = exports.DataObjectStorageRelationship = exports.DataObject = exports.LiaisonJudgement = exports.LiaisonJudgementDef = exports.OptionVecContentId = exports.VecContentId = exports.DataObjectStorageRelationshipId = exports.DataObjectTypeId = exports.ContentId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-const members_1 = require("./members");
-const working_group_1 = require("./working-group"); // this should be in discovery really
-const util_crypto_1 = require("@polkadot/util-crypto");
-const keyring_1 = require("@polkadot/keyring");
-class ContentId extends common_1.Hash {
-    static generate(registry) {
-        // randomAsU8a uses https://www.npmjs.com/package/tweetnacl#random-bytes-generation
-        return new ContentId(registry, util_crypto_1.randomAsU8a());
-    }
-    static decode(registry, contentId) {
-        return new ContentId(registry, keyring_1.decodeAddress(contentId));
-    }
-    static encode(contentId) {
-        // console.log('contentId:', Buffer.from(contentId).toString('hex'))
-        return keyring_1.encodeAddress(contentId);
-    }
-    encode() {
-        return ContentId.encode(this);
-    }
-}
-exports.ContentId = ContentId;
-class DataObjectTypeId extends types_1.u64 {
-}
-exports.DataObjectTypeId = DataObjectTypeId;
-class DataObjectStorageRelationshipId extends types_1.u64 {
-}
-exports.DataObjectStorageRelationshipId = DataObjectStorageRelationshipId;
-class VecContentId extends types_1.Vec.with(ContentId) {
-}
-exports.VecContentId = VecContentId;
-class OptionVecContentId extends types_1.Option.with(VecContentId) {
-}
-exports.OptionVecContentId = OptionVecContentId;
-exports.LiaisonJudgementDef = {
-    Pending: types_1.Null,
-    Accepted: types_1.Null,
-    Rejected: types_1.Null,
-};
-class LiaisonJudgement extends common_1.JoyEnum(exports.LiaisonJudgementDef) {
-}
-exports.LiaisonJudgement = LiaisonJudgement;
-class DataObject extends common_1.JoyStructDecorated({
-    owner: members_1.MemberId,
-    added_at: common_1.BlockAndTime,
-    type_id: DataObjectTypeId,
-    size: types_1.u64,
-    liaison: working_group_1.StorageProviderId,
-    liaison_judgement: LiaisonJudgement,
-    ipfs_content_id: types_1.Text,
-}) {
-    /** Actually it's 'size', but 'size' is already reserved by a parent class. */
-    get size_in_bytes() {
-        return this.get('size');
-    }
-}
-exports.DataObject = DataObject;
-class DataObjectStorageRelationship extends common_1.JoyStructDecorated({
-    content_id: ContentId,
-    storage_provider: working_group_1.StorageProviderId,
-    ready: types_1.bool,
-}) {
-}
-exports.DataObjectStorageRelationship = DataObjectStorageRelationship;
-class DataObjectType extends common_1.JoyStructDecorated({
-    description: types_1.Text,
-    active: types_1.bool,
-}) {
-}
-exports.DataObjectType = DataObjectType;
-class DataObjectsMap extends types_1.BTreeMap.with(ContentId, DataObject) {
-}
-exports.DataObjectsMap = DataObjectsMap;
-exports.mediaTypes = {
-    ContentId,
-    LiaisonJudgement,
-    DataObject,
-    DataObjectStorageRelationshipId,
-    DataObjectStorageRelationship,
-    DataObjectTypeId,
-    DataObjectType,
-    DataObjectsMap,
-};
-exports.default = exports.mediaTypes;
diff --git a/members.js b/members.js
index c8d8d1e074d629f2c16ae225c3c729ee8ac041cb..1ec3d6449967a5b7e903757d5f0f6ca2d46b4ea9 100644
--- a/members.js
+++ b/members.js
@@ -1,58 +1,45 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.membersTypes = exports.PaidMembershipTerms = exports.Membership = exports.EntryMethod = exports.Genesis = exports.Screening = exports.Paid = exports.ActorId = exports.SubscriptionId = exports.PaidTermId = exports.MemberId = void 0;
-const types_1 = require("@polkadot/types");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-const common_1 = require("./common");
-class MemberId extends types_1.u64 {
+import { Option, Null, bool, u32, u64, u128, Text } from '@polkadot/types';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+import { JoyEnum, JoyStructDecorated } from './common';
+export class MemberId extends u64 {
 }
-exports.MemberId = MemberId;
-class PaidTermId extends types_1.u64 {
+export class PaidTermId extends u64 {
 }
-exports.PaidTermId = PaidTermId;
-class SubscriptionId extends types_1.u64 {
+export class SubscriptionId extends u64 {
 }
-exports.SubscriptionId = SubscriptionId;
-class ActorId extends types_1.u64 {
+export class ActorId extends u64 {
 }
-exports.ActorId = ActorId;
-class Paid extends PaidTermId {
+export class Paid extends PaidTermId {
 }
-exports.Paid = Paid;
-class Screening extends AccountId_1.GenericAccountId {
+export class Screening extends AccountId {
 }
-exports.Screening = Screening;
-class Genesis extends types_1.Null {
+export class Genesis extends Null {
 }
-exports.Genesis = Genesis;
-class EntryMethod extends common_1.JoyEnum({
+export class EntryMethod extends JoyEnum({
     Paid,
     Screening,
     Genesis,
 }) {
 }
-exports.EntryMethod = EntryMethod;
-class Membership extends common_1.JoyStructDecorated({
-    handle: types_1.Text,
-    avatar_uri: types_1.Text,
-    about: types_1.Text,
-    registered_at_block: types_1.u32,
-    registered_at_time: types_1.u64,
+export class Membership extends JoyStructDecorated({
+    handle: Text,
+    avatar_uri: Text,
+    about: Text,
+    registered_at_block: u32,
+    registered_at_time: u64,
     entry: EntryMethod,
-    suspended: types_1.bool,
-    subscription: types_1.Option.with(SubscriptionId),
-    root_account: AccountId_1.GenericAccountId,
-    controller_account: AccountId_1.GenericAccountId,
+    suspended: bool,
+    subscription: Option.with(SubscriptionId),
+    root_account: AccountId,
+    controller_account: AccountId,
 }) {
 }
-exports.Membership = Membership;
-class PaidMembershipTerms extends common_1.JoyStructDecorated({
-    fee: types_1.u128,
-    text: types_1.Text,
+export class PaidMembershipTerms extends JoyStructDecorated({
+    fee: u128,
+    text: Text,
 }) {
 }
-exports.PaidMembershipTerms = PaidMembershipTerms;
-exports.membersTypes = {
+export const membersTypes = {
     EntryMethod,
     MemberId,
     PaidTermId,
@@ -61,4 +48,4 @@ exports.membersTypes = {
     PaidMembershipTerms,
     ActorId,
 };
-exports.default = exports.membersTypes;
+export default membersTypes;
diff --git a/mint/index.js b/mint/index.js
index 54daa152430a85cbcdad73313b60cb48474f3e2c..f41a28446255dfc113e7150e7946a4eac71e41c1 100644
--- a/mint/index.js
+++ b/mint/index.js
@@ -1,50 +1,37 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.mintTypes = exports.Mint = exports.NextAdjustment = exports.AdjustOnInterval = exports.AdjustCapacityBy = exports.BalanceOfMint = exports.MintBalanceOf = exports.Reducing = exports.Adding = exports.Setting = exports.MintId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("../common");
-class MintId extends types_1.u64 {
+import { u32, u64, u128, Option } from '@polkadot/types';
+import { JoyEnum, JoyStructDecorated } from '../common';
+export class MintId extends u64 {
 }
-exports.MintId = MintId;
-class Setting extends types_1.u128 {
+export class Setting extends u128 {
 }
-exports.Setting = Setting;
-class Adding extends types_1.u128 {
+export class Adding extends u128 {
 }
-exports.Adding = Adding;
-class Reducing extends types_1.u128 {
+export class Reducing extends u128 {
 }
-exports.Reducing = Reducing;
-class MintBalanceOf extends types_1.u128 {
+export class MintBalanceOf extends u128 {
 }
-exports.MintBalanceOf = MintBalanceOf;
-class BalanceOfMint extends types_1.u128 {
+export class BalanceOfMint extends u128 {
 }
-exports.BalanceOfMint = BalanceOfMint;
-class AdjustCapacityBy extends common_1.JoyEnum({ Setting, Adding, Reducing }) {
+export class AdjustCapacityBy extends JoyEnum({ Setting, Adding, Reducing }) {
 }
-exports.AdjustCapacityBy = AdjustCapacityBy;
-class AdjustOnInterval extends common_1.JoyStructDecorated({
-    block_interval: types_1.u32,
+export class AdjustOnInterval extends JoyStructDecorated({
+    block_interval: u32,
     adjustment_type: AdjustCapacityBy,
 }) {
 }
-exports.AdjustOnInterval = AdjustOnInterval;
-class NextAdjustment extends common_1.JoyStructDecorated({
+export class NextAdjustment extends JoyStructDecorated({
     adjustment: AdjustOnInterval,
-    at_block: types_1.u32,
+    at_block: u32,
 }) {
 }
-exports.NextAdjustment = NextAdjustment;
-class Mint extends common_1.JoyStructDecorated({
-    capacity: types_1.u128,
-    next_adjustment: types_1.Option.with(NextAdjustment),
-    created_at: types_1.u32,
-    total_minted: types_1.u128,
+export class Mint extends JoyStructDecorated({
+    capacity: u128,
+    next_adjustment: Option.with(NextAdjustment),
+    created_at: u32,
+    total_minted: u128,
 }) {
 }
-exports.Mint = Mint;
-exports.mintTypes = {
+export const mintTypes = {
     MintId,
     Mint,
     MintBalanceOf,
@@ -54,4 +41,4 @@ exports.mintTypes = {
     AdjustOnInterval,
     AdjustCapacityBy,
 };
-exports.default = exports.mintTypes;
+export default mintTypes;
diff --git a/package.json b/package.json
index 6e5b54d3d82444c0972e1d8300de068bcbd5de95..da65e6af57521fde6bab95dcd731ab9f8bd379c8 100644
--- a/package.json
+++ b/package.json
@@ -3,6 +3,8 @@
   "version": "0.16.1",
   "description": "Types for Joystream Substrate Runtime - Sumer release",
   "main": "index.js",
+  "type": "module",
+  "module": "index.js",
   "types": "index.d.ts",
   "scripts": {
     "prepublish": "npm run build",
diff --git a/proposals.js b/proposals.js
index ff9d3ec1b1d178519b1019e4b6a1f9b7a7b6c4e5..6f7dea6248066aa43e60cd20df05a85907c86777 100644
--- a/proposals.js
+++ b/proposals.js
@@ -1,36 +1,31 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.proposalsTypes = exports.ProposalDetails = exports.TerminateRoleParameters = exports.FillOpeningParameters = exports.AddOpeningParameters = exports.DiscussionPost = exports.DiscussionThread = exports.ThreadCounter = exports.Proposal = exports.SetLead = exports.SetLeadParams = exports.SpendingParams = exports.ProposalId = exports.VoteKind = exports.VoteKindDef = exports.VoteKinds = exports.ProposalStatus = exports.Finalized = exports.Active = exports.FinalizationData = exports.ProposalDecisionStatus = exports.ProposalDecisionStatusesDef = exports.Approved = exports.ApprovedProposalStatus = exports.ApprovedProposalDef = exports.ExecutionFailed = exports.ExecutionFailedStatus = exports.ActiveStake = exports.IProposalStatus = exports.ProposalParameters = exports.VotingResults = void 0;
-const types_1 = require("@polkadot/types");
-const primitive_1 = require("@polkadot/types/primitive");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-const common_1 = require("./common");
-const members_1 = require("./members");
-const roles_1 = require("./roles");
-const stake_1 = require("./stake");
-const council_1 = require("./council");
-const hiring_1 = require("./hiring");
-const working_group_1 = require("./working-group");
-class VotingResults extends common_1.JoyStructDecorated({
-    abstensions: types_1.u32,
-    approvals: types_1.u32,
-    rejections: types_1.u32,
-    slashes: types_1.u32,
+import { Text, u32, Tuple, u8, Vec, Option, Null, Bytes } from '@polkadot/types';
+import { bool, u128 } from '@polkadot/types/primitive';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+import { ThreadId, WorkingGroup, JoyEnum, JoyStructDecorated } from './common';
+import { MemberId } from './members';
+import { RoleParameters } from './roles';
+import { StakeId } from './stake';
+import { ElectionParameters } from './council';
+import { ActivateOpeningAt, OpeningId, ApplicationId } from './hiring';
+import { OpeningPolicyCommitment, WorkerId, RewardPolicy } from './working-group';
+export class VotingResults extends JoyStructDecorated({
+    abstensions: u32,
+    approvals: u32,
+    rejections: u32,
+    slashes: u32,
 }) {
 }
-exports.VotingResults = VotingResults;
-class ProposalParameters extends common_1.JoyStructDecorated({
-    votingPeriod: types_1.u32,
-    gracePeriod: types_1.u32,
-    approvalQuorumPercentage: types_1.u32,
-    approvalThresholdPercentage: types_1.u32,
-    slashingQuorumPercentage: types_1.u32,
-    slashingThresholdPercentage: types_1.u32,
-    requiredStake: types_1.Option.with(primitive_1.u128),
+export class ProposalParameters extends JoyStructDecorated({
+    votingPeriod: u32,
+    gracePeriod: u32,
+    approvalQuorumPercentage: u32,
+    approvalThresholdPercentage: u32,
+    slashingQuorumPercentage: u32,
+    slashingThresholdPercentage: u32,
+    requiredStake: Option.with(u128),
 }) {
 }
-exports.ProposalParameters = ProposalParameters;
-exports.IProposalStatus = {
+export const IProposalStatus = {
     Active: 'Active',
     Canceled: 'Canceled',
     Expired: 'Expired',
@@ -43,178 +38,155 @@ exports.IProposalStatus = {
     Finalized: 'Finalized',
     Slashed: 'Slashed',
 };
-class ActiveStake extends common_1.JoyStructDecorated({ stake_id: stake_1.StakeId, source_account_id: AccountId_1.GenericAccountId }) {
+export class ActiveStake extends JoyStructDecorated({ stake_id: StakeId, source_account_id: AccountId }) {
 }
-exports.ActiveStake = ActiveStake;
-class ExecutionFailedStatus extends common_1.JoyStructDecorated({
-    error: types_1.Text,
+export class ExecutionFailedStatus extends JoyStructDecorated({
+    error: Text,
 }) {
 }
-exports.ExecutionFailedStatus = ExecutionFailedStatus;
-class ExecutionFailed extends ExecutionFailedStatus {
+export class ExecutionFailed extends ExecutionFailedStatus {
 }
-exports.ExecutionFailed = ExecutionFailed;
-exports.ApprovedProposalDef = {
-    PendingExecution: types_1.Null,
-    Executed: types_1.Null,
+export const ApprovedProposalDef = {
+    PendingExecution: Null,
+    Executed: Null,
     ExecutionFailed,
 };
-class ApprovedProposalStatus extends common_1.JoyEnum(exports.ApprovedProposalDef) {
-}
-exports.ApprovedProposalStatus = ApprovedProposalStatus;
-class Approved extends ApprovedProposalStatus {
-}
-exports.Approved = Approved;
-exports.ProposalDecisionStatusesDef = {
-    Canceled: types_1.Null,
-    Vetoed: types_1.Null,
-    Rejected: types_1.Null,
-    Slashed: types_1.Null,
-    Expired: types_1.Null,
+export class ApprovedProposalStatus extends JoyEnum(ApprovedProposalDef) {
+}
+export class Approved extends ApprovedProposalStatus {
+}
+export const ProposalDecisionStatusesDef = {
+    Canceled: Null,
+    Vetoed: Null,
+    Rejected: Null,
+    Slashed: Null,
+    Expired: Null,
     Approved,
 };
-class ProposalDecisionStatus extends common_1.JoyEnum(exports.ProposalDecisionStatusesDef) {
+export class ProposalDecisionStatus extends JoyEnum(ProposalDecisionStatusesDef) {
 }
-exports.ProposalDecisionStatus = ProposalDecisionStatus;
-class FinalizationData
+export class FinalizationData
 // FIXME: Snake case for consistency?
- extends common_1.JoyStructDecorated({
+ extends JoyStructDecorated({
     proposalStatus: ProposalDecisionStatus,
-    finalizedAt: types_1.u32,
-    encodedUnstakingErrorDueToBrokenRuntime: types_1.Option.with(types_1.Vec.with(types_1.u8)),
-    stakeDataAfterUnstakingError: types_1.Option.with(ActiveStake),
+    finalizedAt: u32,
+    encodedUnstakingErrorDueToBrokenRuntime: Option.with(Vec.with(u8)),
+    stakeDataAfterUnstakingError: Option.with(ActiveStake),
 }) {
 }
-exports.FinalizationData = FinalizationData;
-class Active extends types_1.Option.with(ActiveStake) {
+export class Active extends Option.with(ActiveStake) {
 }
-exports.Active = Active;
-class Finalized extends FinalizationData {
+export class Finalized extends FinalizationData {
 }
-exports.Finalized = Finalized;
-class ProposalStatus extends common_1.JoyEnum({
+export class ProposalStatus extends JoyEnum({
     Active,
     Finalized,
 }) {
 }
-exports.ProposalStatus = ProposalStatus;
-exports.VoteKinds = ['Approve', 'Reject', 'Slash', 'Abstain'];
-exports.VoteKindDef = {
-    Approve: types_1.Null,
-    Reject: types_1.Null,
-    Slash: types_1.Null,
-    Abstain: types_1.Null,
+export const VoteKinds = ['Approve', 'Reject', 'Slash', 'Abstain'];
+export const VoteKindDef = {
+    Approve: Null,
+    Reject: Null,
+    Slash: Null,
+    Abstain: Null,
 };
-class VoteKind extends common_1.JoyEnum(exports.VoteKindDef) {
+export class VoteKind extends JoyEnum(VoteKindDef) {
 }
-exports.VoteKind = VoteKind;
-class ProposalId extends types_1.u32 {
+export class ProposalId extends u32 {
 }
-exports.ProposalId = ProposalId;
-class SpendingParams extends types_1.Tuple.with(['Balance', 'AccountId']) {
+export class SpendingParams extends Tuple.with(['Balance', 'AccountId']) {
 }
-exports.SpendingParams = SpendingParams;
-class SetLeadParams extends types_1.Tuple.with([members_1.MemberId, AccountId_1.GenericAccountId]) {
+export class SetLeadParams extends Tuple.with([MemberId, AccountId]) {
 }
-exports.SetLeadParams = SetLeadParams;
-class SetLead extends types_1.Option.with(SetLeadParams) {
+export class SetLead extends Option.with(SetLeadParams) {
 }
-exports.SetLead = SetLead;
-class Proposal
+export class Proposal
 // FIXME: Snake case for consistency?
- extends common_1.JoyStructDecorated({
+ extends JoyStructDecorated({
     // Proposals parameter, characterize different proposal types.
     parameters: ProposalParameters,
     // Identifier of member proposing.
-    proposerId: members_1.MemberId,
+    proposerId: MemberId,
     // Proposal description
-    title: types_1.Text,
+    title: Text,
     // Proposal body
-    description: types_1.Text,
+    description: Text,
     // When it was created.
-    createdAt: types_1.u32,
+    createdAt: u32,
     /// Current proposal status
     status: ProposalStatus,
     /// Curring voting result for the proposal
     votingResults: VotingResults,
 }) {
 }
-exports.Proposal = Proposal;
-class ThreadCounter extends common_1.JoyStructDecorated({
-    author_id: members_1.MemberId,
-    counter: types_1.u32,
+export class ThreadCounter extends JoyStructDecorated({
+    author_id: MemberId,
+    counter: u32,
 }) {
 }
-exports.ThreadCounter = ThreadCounter;
-class DiscussionThread extends common_1.JoyStructDecorated({
-    title: types_1.Bytes,
-    created_at: types_1.u32,
-    author_id: members_1.MemberId,
+export class DiscussionThread extends JoyStructDecorated({
+    title: Bytes,
+    created_at: u32,
+    author_id: MemberId,
 }) {
 }
-exports.DiscussionThread = DiscussionThread;
-class DiscussionPost extends common_1.JoyStructDecorated({
-    text: types_1.Bytes,
+export class DiscussionPost extends JoyStructDecorated({
+    text: Bytes,
     /// When post was added.
-    created_at: types_1.u32,
+    created_at: u32,
     /// When post was updated last time.
-    updated_at: types_1.u32,
+    updated_at: u32,
     /// Author of the post.
-    author_id: members_1.MemberId,
+    author_id: MemberId,
     /// Parent thread id for this post
-    thread_id: common_1.ThreadId,
+    thread_id: ThreadId,
     /// Defines how many times this post was edited. Zero on creation.
-    edition_number: types_1.u32,
+    edition_number: u32,
 }) {
 }
-exports.DiscussionPost = DiscussionPost;
-class AddOpeningParameters extends common_1.JoyStructDecorated({
-    activate_at: hiring_1.ActivateOpeningAt,
-    commitment: working_group_1.OpeningPolicyCommitment,
-    human_readable_text: types_1.Bytes,
-    working_group: common_1.WorkingGroup,
+export class AddOpeningParameters extends JoyStructDecorated({
+    activate_at: ActivateOpeningAt,
+    commitment: OpeningPolicyCommitment,
+    human_readable_text: Bytes,
+    working_group: WorkingGroup,
 }) {
 }
-exports.AddOpeningParameters = AddOpeningParameters;
-class FillOpeningParameters extends common_1.JoyStructDecorated({
-    opening_id: hiring_1.OpeningId,
-    successful_application_id: hiring_1.ApplicationId,
-    reward_policy: types_1.Option.with(working_group_1.RewardPolicy),
-    working_group: common_1.WorkingGroup,
+export class FillOpeningParameters extends JoyStructDecorated({
+    opening_id: OpeningId,
+    successful_application_id: ApplicationId,
+    reward_policy: Option.with(RewardPolicy),
+    working_group: WorkingGroup,
 }) {
 }
-exports.FillOpeningParameters = FillOpeningParameters;
-class TerminateRoleParameters extends common_1.JoyStructDecorated({
-    worker_id: working_group_1.WorkerId,
-    rationale: types_1.Bytes,
-    slash: primitive_1.bool,
-    working_group: common_1.WorkingGroup,
+export class TerminateRoleParameters extends JoyStructDecorated({
+    worker_id: WorkerId,
+    rationale: Bytes,
+    slash: bool,
+    working_group: WorkingGroup,
 }) {
 }
-exports.TerminateRoleParameters = TerminateRoleParameters;
-class ProposalDetails extends common_1.JoyEnum({
-    Text: types_1.Text,
-    RuntimeUpgrade: types_1.Bytes,
-    SetElectionParameters: council_1.ElectionParameters,
+export class ProposalDetails extends JoyEnum({
+    Text: Text,
+    RuntimeUpgrade: Bytes,
+    SetElectionParameters: ElectionParameters,
     Spending: SpendingParams,
     SetLead: SetLead,
-    SetContentWorkingGroupMintCapacity: primitive_1.u128,
-    EvictStorageProvider: AccountId_1.GenericAccountId,
-    SetValidatorCount: types_1.u32,
-    SetStorageRoleParameters: roles_1.RoleParameters,
+    SetContentWorkingGroupMintCapacity: u128,
+    EvictStorageProvider: AccountId,
+    SetValidatorCount: u32,
+    SetStorageRoleParameters: RoleParameters,
     AddWorkingGroupLeaderOpening: AddOpeningParameters,
-    BeginReviewWorkingGroupLeaderApplication: types_1.Tuple.with([hiring_1.OpeningId, common_1.WorkingGroup]),
+    BeginReviewWorkingGroupLeaderApplication: Tuple.with([OpeningId, WorkingGroup]),
     FillWorkingGroupLeaderOpening: FillOpeningParameters,
-    SetWorkingGroupMintCapacity: types_1.Tuple.with(['Balance', common_1.WorkingGroup]),
-    DecreaseWorkingGroupLeaderStake: types_1.Tuple.with([working_group_1.WorkerId, 'Balance', common_1.WorkingGroup]),
-    SlashWorkingGroupLeaderStake: types_1.Tuple.with([working_group_1.WorkerId, 'Balance', common_1.WorkingGroup]),
-    SetWorkingGroupLeaderReward: types_1.Tuple.with([working_group_1.WorkerId, 'Balance', common_1.WorkingGroup]),
+    SetWorkingGroupMintCapacity: Tuple.with(['Balance', WorkingGroup]),
+    DecreaseWorkingGroupLeaderStake: Tuple.with([WorkerId, 'Balance', WorkingGroup]),
+    SlashWorkingGroupLeaderStake: Tuple.with([WorkerId, 'Balance', WorkingGroup]),
+    SetWorkingGroupLeaderReward: Tuple.with([WorkerId, 'Balance', WorkingGroup]),
     TerminateWorkingGroupLeaderRole: TerminateRoleParameters,
 }) {
 }
-exports.ProposalDetails = ProposalDetails;
 // export default proposalTypes;
-exports.proposalsTypes = {
+export const proposalsTypes = {
     ProposalId,
     ProposalStatus,
     ProposalOf: Proposal,
@@ -237,4 +209,4 @@ exports.proposalsTypes = {
     Approved,
     SetLeadParams,
 };
-exports.default = exports.proposalsTypes;
+export default proposalsTypes;
diff --git a/recurring-rewards/index.js b/recurring-rewards/index.js
index c2d45e72c51b11e875943a35efd3968db4937e70..d8b49d1c62e0856f3716e67f04891739e0a9c6a0 100644
--- a/recurring-rewards/index.js
+++ b/recurring-rewards/index.js
@@ -1,38 +1,31 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.recurringRewardsTypes = exports.RewardRelationship = exports.Recipient = exports.RewardRelationshipId = exports.RecipientId = void 0;
-const types_1 = require("@polkadot/types");
-const mint_1 = require("../mint");
-const common_1 = require("../common");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-class RecipientId extends types_1.u64 {
+import { u64, u128, Option, u32 } from '@polkadot/types';
+import { MintId } from '../mint';
+import { JoyStructDecorated } from '../common';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+export class RecipientId extends u64 {
 }
-exports.RecipientId = RecipientId;
-class RewardRelationshipId extends types_1.u64 {
+export class RewardRelationshipId extends u64 {
 }
-exports.RewardRelationshipId = RewardRelationshipId;
-class Recipient extends common_1.JoyStructDecorated({
-    total_reward_received: types_1.u128,
-    total_reward_missed: types_1.u128,
+export class Recipient extends JoyStructDecorated({
+    total_reward_received: u128,
+    total_reward_missed: u128,
 }) {
 }
-exports.Recipient = Recipient;
-class RewardRelationship extends common_1.JoyStructDecorated({
+export class RewardRelationship extends JoyStructDecorated({
     recipient: RecipientId,
-    mint_id: mint_1.MintId,
-    account: AccountId_1.GenericAccountId,
-    amount_per_payout: types_1.u128,
-    next_payment_at_block: types_1.Option.with(types_1.u32),
-    payout_interval: types_1.Option.with(types_1.u32),
-    total_reward_received: types_1.u128,
-    total_reward_missed: types_1.u128,
+    mint_id: MintId,
+    account: AccountId,
+    amount_per_payout: u128,
+    next_payment_at_block: Option.with(u32),
+    payout_interval: Option.with(u32),
+    total_reward_received: u128,
+    total_reward_missed: u128,
 }) {
 }
-exports.RewardRelationship = RewardRelationship;
-exports.recurringRewardsTypes = {
+export const recurringRewardsTypes = {
     RecipientId,
     RewardRelationshipId,
     Recipient,
     RewardRelationship,
 };
-exports.default = exports.recurringRewardsTypes;
+export default recurringRewardsTypes;
diff --git a/roles.js b/roles.js
index 9d8bc84a3b87bac922a9f9fa789bfc048c515d4a..7352a01b881bf7dc81e2d6d3b123ccf8073fd84c 100644
--- a/roles.js
+++ b/roles.js
@@ -1,25 +1,21 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.rolesTypes = exports.RoleParameters = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
+import { u32, u128 } from '@polkadot/types';
+import { JoyStructDecorated } from './common';
 // We only need this type for historic reasons to read old proposal state
 // that was related to the now defunct actors module
-class RoleParameters extends common_1.JoyStructDecorated({
-    min_stake: types_1.u128,
-    min_actors: types_1.u32,
-    max_actors: types_1.u32,
-    reward: types_1.u128,
-    reward_period: types_1.u32,
-    bonding_period: types_1.u32,
-    unbonding_period: types_1.u32,
-    min_service_period: types_1.u32,
-    startup_grace_period: types_1.u32,
-    entry_request_fee: types_1.u128,
+export class RoleParameters extends JoyStructDecorated({
+    min_stake: u128,
+    min_actors: u32,
+    max_actors: u32,
+    reward: u128,
+    reward_period: u32,
+    bonding_period: u32,
+    unbonding_period: u32,
+    min_service_period: u32,
+    startup_grace_period: u32,
+    entry_request_fee: u128,
 }) {
 }
-exports.RoleParameters = RoleParameters;
-exports.rolesTypes = {
+export const rolesTypes = {
     RoleParameters,
 };
-exports.default = exports.rolesTypes;
+export default rolesTypes;
diff --git a/stake/index.js b/stake/index.js
index df9986f163194037af4f9ffea1e4bebdc19af05f..ce47dcc2fd0ce9cf9d5568fea9c6914b21bdfbeb 100644
--- a/stake/index.js
+++ b/stake/index.js
@@ -1,63 +1,49 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.stakeTypes = exports.Stake = exports.StakingStatus = exports.Staked = exports.NotStaked = exports.StakedState = exports.StakedStatus = exports.Unstaking = exports.Normal = exports.UnstakingState = exports.Slash = exports.SlashId = exports.StakeId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("../common");
-class StakeId extends types_1.u64 {
+import { u32, u64, u128, Null, BTreeMap, bool } from '@polkadot/types';
+import { JoyEnum, JoyStructDecorated } from '../common';
+export class StakeId extends u64 {
 }
-exports.StakeId = StakeId;
-class SlashId extends types_1.u64 {
+export class SlashId extends u64 {
 }
-exports.SlashId = SlashId;
-class Slash extends common_1.JoyStructDecorated({
-    started_at_block: types_1.u32,
-    is_active: types_1.bool,
-    blocks_remaining_in_active_period_for_slashing: types_1.u32,
-    slash_amount: types_1.u128,
+export class Slash extends JoyStructDecorated({
+    started_at_block: u32,
+    is_active: bool,
+    blocks_remaining_in_active_period_for_slashing: u32,
+    slash_amount: u128,
 }) {
 }
-exports.Slash = Slash;
-class UnstakingState extends common_1.JoyStructDecorated({
-    started_at_block: types_1.u32,
-    is_active: types_1.bool,
-    blocks_remaining_in_active_period_for_unstaking: types_1.u32,
+export class UnstakingState extends JoyStructDecorated({
+    started_at_block: u32,
+    is_active: bool,
+    blocks_remaining_in_active_period_for_unstaking: u32,
 }) {
 }
-exports.UnstakingState = UnstakingState;
-class Normal extends types_1.Null {
+export class Normal extends Null {
 }
-exports.Normal = Normal;
-class Unstaking extends UnstakingState {
+export class Unstaking extends UnstakingState {
 }
-exports.Unstaking = Unstaking;
-class StakedStatus extends common_1.JoyEnum({
+export class StakedStatus extends JoyEnum({
     Normal,
     Unstaking,
 }) {
 }
-exports.StakedStatus = StakedStatus;
-class StakedState extends common_1.JoyStructDecorated({
-    staked_amount: types_1.u128,
+export class StakedState extends JoyStructDecorated({
+    staked_amount: u128,
     staked_status: StakedStatus,
     next_slash_id: SlashId,
-    ongoing_slashes: types_1.BTreeMap.with(SlashId, Slash),
+    ongoing_slashes: BTreeMap.with(SlashId, Slash),
 }) {
 }
-exports.StakedState = StakedState;
-class NotStaked extends types_1.Null {
+export class NotStaked extends Null {
 }
-exports.NotStaked = NotStaked;
-class Staked extends StakedState {
+export class Staked extends StakedState {
 }
-exports.Staked = Staked;
-class StakingStatus extends common_1.JoyEnum({
+export class StakingStatus extends JoyEnum({
     NotStaked,
     Staked,
 }) {
 }
-exports.StakingStatus = StakingStatus;
-class Stake extends common_1.JoyStructDecorated({
-    created: types_1.u32,
+export class Stake extends JoyStructDecorated({
+    created: u32,
     staking_status: StakingStatus,
 }) {
     get value() {
@@ -67,8 +53,7 @@ class Stake extends common_1.JoyStructDecorated({
         return this.registry.createType('Balance', 0);
     }
 }
-exports.Stake = Stake;
-exports.stakeTypes = {
+export const stakeTypes = {
     StakeId,
     Stake,
     // Expose in registry for api.createType purposes:
@@ -78,4 +63,4 @@ exports.stakeTypes = {
     Unstaking,
     Slash,
 };
-exports.default = exports.stakeTypes;
+export default stakeTypes;
diff --git a/storage.js b/storage.js
index b284385b3fded0e444dab61fde7d2dbfa2fa5807..7359872510547227c6a489d94806c347517e5e8b 100644
--- a/storage.js
+++ b/storage.js
@@ -1,112 +1,96 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.mediaTypes = exports.UploadingStatus = exports.VoucherLimit = exports.Voucher = exports.DataObjectsMap = exports.DataObjectType = exports.DataObjectStorageRelationship = exports.DataObject = exports.ContentParameters = exports.StorageObjectOwner = exports.LiaisonJudgement = exports.LiaisonJudgementDef = exports.DataObjectStorageRelationshipId = exports.DataObjectTypeId = exports.ContentId = void 0;
-const types_1 = require("@polkadot/types");
-const common_1 = require("./common");
-const members_1 = require("./members");
-const working_group_1 = require("./working-group"); // this should be in discovery really
-const util_crypto_1 = require("@polkadot/util-crypto");
-const keyring_1 = require("@polkadot/keyring");
-class ContentId extends common_1.Hash {
+import { BTreeMap, u64, bool, Text, Null, Bytes, Option } from '@polkadot/types';
+import { BlockAndTime, JoyEnum, JoyStructDecorated, Hash, ChannelId, DAOId, WorkingGroup } from './common';
+import { MemberId } from './members';
+import { StorageProviderId } from './working-group'; // this should be in discovery really
+import { randomAsU8a } from '@polkadot/util-crypto';
+import { encodeAddress, decodeAddress } from '@polkadot/keyring';
+export class ContentId extends Hash {
     static generate(registry) {
         // randomAsU8a uses https://www.npmjs.com/package/tweetnacl#random-bytes-generation
-        return new ContentId(registry, util_crypto_1.randomAsU8a());
+        return new ContentId(registry, randomAsU8a());
     }
     static decode(registry, contentId) {
-        return new ContentId(registry, keyring_1.decodeAddress(contentId));
+        return new ContentId(registry, decodeAddress(contentId));
     }
     static encode(contentId) {
         // console.log('contentId:', Buffer.from(contentId).toString('hex'))
-        return keyring_1.encodeAddress(contentId);
+        return encodeAddress(contentId);
     }
     encode() {
         return ContentId.encode(this);
     }
 }
-exports.ContentId = ContentId;
-class DataObjectTypeId extends types_1.u64 {
+export class DataObjectTypeId extends u64 {
 }
-exports.DataObjectTypeId = DataObjectTypeId;
-class DataObjectStorageRelationshipId extends types_1.u64 {
+export class DataObjectStorageRelationshipId extends u64 {
 }
-exports.DataObjectStorageRelationshipId = DataObjectStorageRelationshipId;
-exports.LiaisonJudgementDef = {
-    Pending: types_1.Null,
-    Accepted: types_1.Null,
+export const LiaisonJudgementDef = {
+    Pending: Null,
+    Accepted: Null,
 };
-class LiaisonJudgement extends common_1.JoyEnum(exports.LiaisonJudgementDef) {
+export class LiaisonJudgement extends JoyEnum(LiaisonJudgementDef) {
 }
-exports.LiaisonJudgement = LiaisonJudgement;
-class StorageObjectOwner extends common_1.JoyEnum({
-    Member: members_1.MemberId,
-    Channel: common_1.ChannelId,
-    DAO: common_1.DAOId,
-    Council: types_1.Null,
-    WorkingGroup: common_1.WorkingGroup,
+export class StorageObjectOwner extends JoyEnum({
+    Member: MemberId,
+    Channel: ChannelId,
+    DAO: DAOId,
+    Council: Null,
+    WorkingGroup: WorkingGroup,
 }) {
 }
-exports.StorageObjectOwner = StorageObjectOwner;
-class ContentParameters extends common_1.JoyStructDecorated({
+export class ContentParameters extends JoyStructDecorated({
     content_id: ContentId,
     type_id: DataObjectTypeId,
-    size: types_1.u64,
-    ipfs_content_id: types_1.Bytes,
+    size: u64,
+    ipfs_content_id: Bytes,
 }) {
     /** Actually it's 'size', but 'size' is already reserved by a parent class. */
     get size_in_bytes() {
         return this.get('size');
     }
 }
-exports.ContentParameters = ContentParameters;
-class DataObject extends common_1.JoyStructDecorated({
+export class DataObject extends JoyStructDecorated({
     owner: StorageObjectOwner,
-    added_at: common_1.BlockAndTime,
+    added_at: BlockAndTime,
     type_id: DataObjectTypeId,
-    size: types_1.u64,
-    liaison: types_1.Option.with(working_group_1.StorageProviderId),
+    size: u64,
+    liaison: Option.with(StorageProviderId),
     liaison_judgement: LiaisonJudgement,
-    ipfs_content_id: types_1.Text,
+    ipfs_content_id: Text,
 }) {
     /** Actually it's 'size', but 'size' is already reserved by a parent class. */
     get size_in_bytes() {
         return this.get('size');
     }
 }
-exports.DataObject = DataObject;
-class DataObjectStorageRelationship extends common_1.JoyStructDecorated({
+export class DataObjectStorageRelationship extends JoyStructDecorated({
     content_id: ContentId,
-    storage_provider: working_group_1.StorageProviderId,
-    ready: types_1.bool,
+    storage_provider: StorageProviderId,
+    ready: bool,
 }) {
 }
-exports.DataObjectStorageRelationship = DataObjectStorageRelationship;
-class DataObjectType extends common_1.JoyStructDecorated({
-    description: types_1.Text,
-    active: types_1.bool,
+export class DataObjectType extends JoyStructDecorated({
+    description: Text,
+    active: bool,
 }) {
 }
-exports.DataObjectType = DataObjectType;
-class DataObjectsMap extends types_1.BTreeMap.with(ContentId, DataObject) {
+export class DataObjectsMap extends BTreeMap.with(ContentId, DataObject) {
 }
-exports.DataObjectsMap = DataObjectsMap;
-class Voucher extends common_1.JoyStructDecorated({
+export class Voucher extends JoyStructDecorated({
     // Total objects size limit per StorageObjectOwner
-    size_limit: types_1.u64,
+    size_limit: u64,
     // Total objects number limit per StorageObjectOwner
-    objects_limit: types_1.u64,
-    size_used: types_1.u64,
-    objects_used: types_1.u64,
+    objects_limit: u64,
+    size_used: u64,
+    objects_used: u64,
 }) {
 }
-exports.Voucher = Voucher;
 // These types names only in the data_directory Events, do they really need a type name alias?
-class VoucherLimit extends types_1.u64 {
+export class VoucherLimit extends u64 {
 }
-exports.VoucherLimit = VoucherLimit;
-class UploadingStatus extends types_1.bool {
+export class UploadingStatus extends bool {
 }
-exports.UploadingStatus = UploadingStatus;
-exports.mediaTypes = {
+export const mediaTypes = {
     ContentId,
     LiaisonJudgement,
     DataObject,
@@ -122,4 +106,4 @@ exports.mediaTypes = {
     VoucherLimit,
     UploadingStatus,
 };
-exports.default = exports.mediaTypes;
+export default mediaTypes;
diff --git a/tsconfig-base.json b/tsconfig-base.json
index d235a17f57df7394aec8058fd51f5da39bb2b0c9..2f2b083fac65117367b36a51f632889025dc20aa 100644
--- a/tsconfig-base.json
+++ b/tsconfig-base.json
@@ -1,7 +1,7 @@
 {
   "compilerOptions": {
     "target": "esnext",
-    "module": "commonjs",
+    "module": "es2020",
     "strict": true,
     "noImplicitAny": true,
     "noUnusedLocals": true,
diff --git a/working-group/index.js b/working-group/index.js
index 47103bec3892b9bd149a05881a3ab12ddb877f1e..5ef834d658c534037d3d10b55cc95bc2178124c6 100644
--- a/working-group/index.js
+++ b/working-group/index.js
@@ -1,109 +1,92 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.workingGroupTypes = exports.ApplicationId = exports.OpeningId = exports.RewardPolicy = exports.Opening = exports.OpeningType = exports.OpeningTypeDef = exports.OpeningType_Worker = exports.OpeningType_Leader = exports.OpeningPolicyCommitment = exports.Worker = exports.RoleStakeProfile = exports.ApplicationIdToWorkerIdMap = exports.ApplicationIdSet = exports.StorageProviderId = exports.WorkerId = exports.Application = exports.RationaleText = void 0;
-const types_1 = require("@polkadot/types");
-const primitive_1 = require("@polkadot/types/primitive");
-const AccountId_1 = require("@polkadot/types/generic/AccountId");
-const members_1 = require("../members");
-const recurring_rewards_1 = require("../recurring-rewards");
-const stake_1 = require("../stake");
-const hiring_1 = require("../hiring");
-Object.defineProperty(exports, "ApplicationId", { enumerable: true, get: function () { return hiring_1.ApplicationId; } });
-Object.defineProperty(exports, "OpeningId", { enumerable: true, get: function () { return hiring_1.OpeningId; } });
-const common_1 = require("../common");
-class RationaleText extends types_1.Bytes {
+import { Bytes, BTreeMap, Option } from '@polkadot/types';
+import { Null, u32, u128 } from '@polkadot/types/primitive';
+import { GenericAccountId as AccountId } from '@polkadot/types/generic/AccountId';
+import { MemberId, ActorId } from '../members';
+import { RewardRelationshipId } from '../recurring-rewards';
+import { StakeId } from '../stake';
+import { ApplicationId, OpeningId, ApplicationRationingPolicy, StakingPolicy } from '../hiring';
+import { JoyEnum, JoyStructDecorated, SlashingTerms, JoyBTreeSet } from '../common';
+export class RationaleText extends Bytes {
 }
-exports.RationaleText = RationaleText;
 // This type is also defined in /hiring (and those are incosistent), but here
 // it is beeing registered as "ApplicationOf" (which is an alias used by the runtime working-group module),
 // so it shouldn't cause any conflicts
-class Application extends common_1.JoyStructDecorated({
-    role_account_id: AccountId_1.GenericAccountId,
-    opening_id: hiring_1.OpeningId,
-    member_id: members_1.MemberId,
-    application_id: hiring_1.ApplicationId,
+export class Application extends JoyStructDecorated({
+    role_account_id: AccountId,
+    opening_id: OpeningId,
+    member_id: MemberId,
+    application_id: ApplicationId,
 }) {
 }
-exports.Application = Application;
-class WorkerId extends members_1.ActorId {
+export class WorkerId extends ActorId {
 }
-exports.WorkerId = WorkerId;
-class StorageProviderId extends WorkerId {
+export class StorageProviderId extends WorkerId {
 }
-exports.StorageProviderId = StorageProviderId;
-class ApplicationIdSet extends common_1.JoyBTreeSet(hiring_1.ApplicationId) {
+export class ApplicationIdSet extends JoyBTreeSet(ApplicationId) {
 }
-exports.ApplicationIdSet = ApplicationIdSet;
-class ApplicationIdToWorkerIdMap extends types_1.BTreeMap.with(hiring_1.ApplicationId, WorkerId) {
+export class ApplicationIdToWorkerIdMap extends BTreeMap.with(ApplicationId, WorkerId) {
 }
-exports.ApplicationIdToWorkerIdMap = ApplicationIdToWorkerIdMap;
-class RoleStakeProfile extends common_1.JoyStructDecorated({
-    stake_id: stake_1.StakeId,
-    termination_unstaking_period: types_1.Option.with(primitive_1.u32),
-    exit_unstaking_period: types_1.Option.with(primitive_1.u32),
+export class RoleStakeProfile extends JoyStructDecorated({
+    stake_id: StakeId,
+    termination_unstaking_period: Option.with(u32),
+    exit_unstaking_period: Option.with(u32),
 }) {
 }
-exports.RoleStakeProfile = RoleStakeProfile;
-class Worker extends common_1.JoyStructDecorated({
-    member_id: members_1.MemberId,
-    role_account_id: AccountId_1.GenericAccountId,
-    reward_relationship: types_1.Option.with(recurring_rewards_1.RewardRelationshipId),
-    role_stake_profile: types_1.Option.with(RoleStakeProfile),
+export class Worker extends JoyStructDecorated({
+    member_id: MemberId,
+    role_account_id: AccountId,
+    reward_relationship: Option.with(RewardRelationshipId),
+    role_stake_profile: Option.with(RoleStakeProfile),
 }) {
     // FIXME: Won't be needed soon?
     get is_active() {
         return !this.isEmpty;
     }
 }
-exports.Worker = Worker;
-class OpeningPolicyCommitment extends common_1.JoyStructDecorated({
-    application_rationing_policy: types_1.Option.with(hiring_1.ApplicationRationingPolicy),
-    max_review_period_length: primitive_1.u32,
-    application_staking_policy: types_1.Option.with(hiring_1.StakingPolicy),
-    role_staking_policy: types_1.Option.with(hiring_1.StakingPolicy),
-    role_slashing_terms: common_1.SlashingTerms,
-    fill_opening_successful_applicant_application_stake_unstaking_period: types_1.Option.with(primitive_1.u32),
-    fill_opening_failed_applicant_application_stake_unstaking_period: types_1.Option.with(primitive_1.u32),
-    fill_opening_failed_applicant_role_stake_unstaking_period: types_1.Option.with(primitive_1.u32),
-    terminate_application_stake_unstaking_period: types_1.Option.with(primitive_1.u32),
-    terminate_role_stake_unstaking_period: types_1.Option.with(primitive_1.u32),
-    exit_role_application_stake_unstaking_period: types_1.Option.with(primitive_1.u32),
-    exit_role_stake_unstaking_period: types_1.Option.with(primitive_1.u32),
+export class OpeningPolicyCommitment extends JoyStructDecorated({
+    application_rationing_policy: Option.with(ApplicationRationingPolicy),
+    max_review_period_length: u32,
+    application_staking_policy: Option.with(StakingPolicy),
+    role_staking_policy: Option.with(StakingPolicy),
+    role_slashing_terms: SlashingTerms,
+    fill_opening_successful_applicant_application_stake_unstaking_period: Option.with(u32),
+    fill_opening_failed_applicant_application_stake_unstaking_period: Option.with(u32),
+    fill_opening_failed_applicant_role_stake_unstaking_period: Option.with(u32),
+    terminate_application_stake_unstaking_period: Option.with(u32),
+    terminate_role_stake_unstaking_period: Option.with(u32),
+    exit_role_application_stake_unstaking_period: Option.with(u32),
+    exit_role_stake_unstaking_period: Option.with(u32),
 }) {
 }
-exports.OpeningPolicyCommitment = OpeningPolicyCommitment;
-class OpeningType_Leader extends primitive_1.Null {
+export class OpeningType_Leader extends Null {
 }
-exports.OpeningType_Leader = OpeningType_Leader;
-class OpeningType_Worker extends primitive_1.Null {
+export class OpeningType_Worker extends Null {
 }
-exports.OpeningType_Worker = OpeningType_Worker;
-exports.OpeningTypeDef = {
+export const OpeningTypeDef = {
     Leader: OpeningType_Leader,
     Worker: OpeningType_Worker,
 };
-class OpeningType extends common_1.JoyEnum(exports.OpeningTypeDef) {
+export class OpeningType extends JoyEnum(OpeningTypeDef) {
 }
-exports.OpeningType = OpeningType;
 // This type is also defined in /hiring (and those are incosistent), but here
 // it is beeing registered as "OpeningOf" (which is an alias used by the runtime working-group module),
 // so it shouldn't cause any conflicts
-class Opening extends common_1.JoyStructDecorated({
-    hiring_opening_id: hiring_1.OpeningId,
-    applications: common_1.JoyBTreeSet(hiring_1.ApplicationId),
+export class Opening extends JoyStructDecorated({
+    hiring_opening_id: OpeningId,
+    applications: JoyBTreeSet(ApplicationId),
     policy_commitment: OpeningPolicyCommitment,
     opening_type: OpeningType,
 }) {
 }
-exports.Opening = Opening;
-class RewardPolicy extends common_1.JoyStructDecorated({
-    amount_per_payout: primitive_1.u128,
-    next_payment_at_block: primitive_1.u32,
-    payout_interval: types_1.Option.with(primitive_1.u32),
+export class RewardPolicy extends JoyStructDecorated({
+    amount_per_payout: u128,
+    next_payment_at_block: u32,
+    payout_interval: Option.with(u32),
 }) {
 }
-exports.RewardPolicy = RewardPolicy;
-exports.workingGroupTypes = {
+// Needed for types augment tool
+export { OpeningId, ApplicationId };
+export const workingGroupTypes = {
     RationaleText,
     ApplicationOf: Application,
     ApplicationIdSet,
@@ -114,10 +97,10 @@ exports.workingGroupTypes = {
     StorageProviderId,
     OpeningType,
     /// Alias used by the runtime working-group module
-    HiringApplicationId: hiring_1.ApplicationId,
+    HiringApplicationId: ApplicationId,
     RewardPolicy,
     // Expose in registry for api.createType purposes:
     OpeningPolicyCommitment,
     RoleStakeProfile,
 };
-exports.default = exports.workingGroupTypes;
+export default workingGroupTypes;
