query GetComments(
  $limit: Int
  $offset: Int
  $memberId: ID
  $videoId: ID
  $where: CommentWhereInput
  $orderBy: [CommentOrderByInput!] = [createdAt_DESC]
) {
  commentReactions(where: { member: { id_eq: $memberId }, video: { id_eq: $videoId } }, limit: 1000) {
    reactionId
    commentId
  }
  comments(limit: $limit, offset: $offset, where: $where, orderBy: $orderBy) {
    ...CommentFields
  }
}

query GetComment($where: CommentWhereUniqueInput!, $memberId: ID, $videoId: ID) {
  commentReactions(where: { member: { id_eq: $memberId }, video: { id_eq: $videoId } }, limit: 1000) {
    reactionId
    commentId
  }
  commentByUniqueInput(where: $where) {
    ...CommentFields
  }
}

query GetCommentsConnection(
  $first: Int
  $after: String
  $where: CommentWhereInput
  $orderBy: [CommentOrderByInput!] = [createdAt_DESC]
) {
  commentsConnection(first: $first, after: $after, where: $where, orderBy: $orderBy) {
    edges {
      cursor
      node {
        ...CommentFields
      }
    }
    pageInfo {
      hasNextPage
      endCursor
    }
    totalCount
  }
}

query GetUserCommentsAndVideoCommentsConnection(
  $first: Int
  $after: String
  $memberId: ID
  $videoId: ID
  $orderBy: [CommentOrderByInput!] = [createdAt_DESC]
) {
  commentReactions(where: { member: { id_eq: $memberId }, video: { id_eq: $videoId } }, limit: 1000) {
    reactionId
    commentId
  }
  userComments: comments(
    where: {
      # get comments which are not a reply to a comment
      parentComment: { id_eq: null }
      video: { id_eq: $videoId }
      author: { id_eq: $memberId }
      # if comment is deleted(has status Deleted or Moderated) and has no replies don't show the comment
      OR: [{ status_eq: VISIBLE }, { repliesCount_gt: 0 }]
    }
    orderBy: [createdAt_DESC]
  ) {
    ...CommentFields
  }
  videoCommentsConnection: commentsConnection(
    first: $first
    after: $after
    where: {
      video: { id_eq: $videoId }
      parentComment: { id_eq: null }
      OR: [{ status_eq: VISIBLE }, { repliesCount_gt: 0 }]
    }
    orderBy: $orderBy
  ) {
    edges {
      cursor
      node {
        ...CommentFields
      }
    }
    pageInfo {
      hasNextPage
      endCursor
    }
    totalCount
  }
}

query GetCommentEdits($commentId: ID!) {
  commentTextUpdatedEvents(where: { comment: { id_eq: $commentId } }) {
    id
    createdAt
    newText
  }
}

query GetOriginalComment($commentId: ID!) {
  commentCreatedEvents(where: { comment: { id_eq: $commentId } }) {
    id
    createdAt
    text
  }
}
